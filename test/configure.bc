  15           0 LOAD_CONST               0 ('configure script to get build parameters from user.')
               2 STORE_NAME               0 (__doc__)
  17           4 LOAD_CONST               1 (0)
               6 LOAD_CONST               2 (None)
               8 IMPORT_NAME              1 (argparse)
              10 STORE_NAME               1 (argparse)
  18          12 LOAD_CONST               1 (0)
              14 LOAD_CONST               2 (None)
              16 IMPORT_NAME              2 (errno)
              18 STORE_NAME               2 (errno)
  19          20 LOAD_CONST               1 (0)
              22 LOAD_CONST               2 (None)
              24 IMPORT_NAME              3 (glob)
              26 STORE_NAME               3 (glob)
  20          28 LOAD_CONST               1 (0)
              30 LOAD_CONST               2 (None)
              32 IMPORT_NAME              4 (os)
              34 STORE_NAME               4 (os)
  21          36 LOAD_CONST               1 (0)
              38 LOAD_CONST               2 (None)
              40 IMPORT_NAME              5 (platform)
              42 STORE_NAME               5 (platform)
  22          44 LOAD_CONST               1 (0)
              46 LOAD_CONST               2 (None)
              48 IMPORT_NAME              6 (re)
              50 STORE_NAME               6 (re)
  23          52 LOAD_CONST               1 (0)
              54 LOAD_CONST               2 (None)
              56 IMPORT_NAME              7 (subprocess)
              58 STORE_NAME               7 (subprocess)
  24          60 LOAD_CONST               1 (0)
              62 LOAD_CONST               2 (None)
              64 IMPORT_NAME              8 (sys)
              66 STORE_NAME               8 (sys)
  27          68 SETUP_FINALLY           16 (to 86)
  28          70 LOAD_CONST               1 (0)
              72 LOAD_CONST               3 (('which',))
              74 IMPORT_NAME              9 (shutil)
              76 IMPORT_FROM             10 (which)
              78 STORE_NAME              10 (which)
              80 POP_TOP
              82 POP_BLOCK
              84 JUMP_FORWARD            32 (to 118)
  29     >>   86 DUP_TOP
              88 LOAD_NAME               11 (ImportError)
              90 COMPARE_OP              10 (exception match)
              92 POP_JUMP_IF_FALSE      116
              94 POP_TOP
              96 POP_TOP
              98 POP_TOP
  30         100 LOAD_CONST               1 (0)
             102 LOAD_CONST               4 (('find_executable',))
             104 IMPORT_NAME             12 (distutils.spawn)
             106 IMPORT_FROM             13 (find_executable)
             108 STORE_NAME              10 (which)
             110 POP_TOP
             112 POP_EXCEPT
             114 JUMP_FORWARD             2 (to 118)
         >>  116 END_FINALLY
  33     >>  118 LOAD_CONST               5 ('11')
             120 STORE_NAME              14 (_DEFAULT_CUDA_VERSION)
  34         122 LOAD_CONST               6 ('2')
             124 STORE_NAME              15 (_DEFAULT_CUDNN_VERSION)
  35         126 LOAD_CONST               7 ('6')
             128 STORE_NAME              16 (_DEFAULT_TENSORRT_VERSION)
  36         130 LOAD_CONST               8 ('3.5,7.0')
             132 STORE_NAME              17 (_DEFAULT_CUDA_COMPUTE_CAPABILITIES)
  39         134 LOAD_CONST               9 (10)
             136 LOAD_CONST              10 (11)
             138 LOAD_CONST              11 (12)
             140 LOAD_CONST              12 (13)
             142 LOAD_CONST              13 (14)
             144 LOAD_CONST              14 (15)
             146 LOAD_CONST              15 (16)
             148 LOAD_CONST              16 (17)
             150 LOAD_CONST              17 (18)
             152 LOAD_CONST              18 (19)
             154 LOAD_CONST              19 (20)
             156 LOAD_CONST              20 (21)
  38         158 BUILD_LIST              12
             160 STORE_NAME              18 (_SUPPORTED_ANDROID_NDK_VERSIONS)
  42         162 LOAD_CONST               9 (10)
             164 STORE_NAME              19 (_DEFAULT_PROMPT_ASK_ATTEMPTS)
  44         166 LOAD_CONST              21 ('.tf_configure.bazelrc')
             168 STORE_NAME              20 (_TF_BAZELRC_FILENAME)
  45         170 LOAD_CONST              22 ('')
             172 STORE_GLOBAL            21 (_TF_WORKSPACE_ROOT)
  46         174 LOAD_CONST              22 ('')
             176 STORE_GLOBAL            22 (_TF_BAZELRC)
  47         178 LOAD_CONST               2 (None)
             180 STORE_GLOBAL            23 (_TF_CURRENT_BAZEL_VERSION)
  48         182 LOAD_CONST              23 ('4.2.2')
             184 STORE_NAME              24 (_TF_MIN_BAZEL_VERSION)
  49         186 LOAD_CONST              24 ('5.99.0')
             188 STORE_NAME              25 (_TF_MAX_BAZEL_VERSION)
  52         190 LOAD_CONST              25 ('lib64/')
             192 LOAD_CONST              26 ('lib/powerpc64le-linux-gnu/')
             194 LOAD_CONST              27 ('lib/x86_64-linux-gnu/')
             196 LOAD_CONST              22 ('')
  51         198 BUILD_LIST               4
             200 STORE_NAME              26 (NCCL_LIB_PATHS)
  57         202 LOAD_CONST              28 ('tensorflow/lite/ios/BUILD')
             204 LOAD_CONST              29 ('tensorflow/lite/objc/BUILD')
  58         206 LOAD_CONST              30 ('tensorflow/lite/swift/BUILD')
  59         208 LOAD_CONST              31 ('tensorflow/lite/tools/benchmark/experimental/ios/BUILD')
  56         210 BUILD_LIST               4
             212 STORE_NAME              27 (APPLE_BAZEL_FILES)
  64         214 LOAD_CONST              32 ('tensorflow/lite/objc/TensorFlowLiteObjC.podspec')
  65         216 LOAD_CONST              33 ('tensorflow/lite/swift/TensorFlowLiteSwift.podspec')
  63         218 BUILD_LIST               2
             220 STORE_NAME              28 (IOS_FILES)
  69         222 LOAD_BUILD_CLASS
             224 LOAD_CONST              34 (<code object UserInputError at 0x1100b27c0, file "<dis>", line 69>)
             226 LOAD_CONST              35 ('UserInputError')
             228 MAKE_FUNCTION            0
             230 LOAD_CONST              35 ('UserInputError')
             232 LOAD_NAME               29 (Exception)
             234 CALL_FUNCTION            3
             236 STORE_NAME              30 (UserInputError)
  73         238 LOAD_CONST              36 (<code object is_windows at 0x1100b2660, file "<dis>", line 73>)
             240 LOAD_CONST              37 ('is_windows')
             242 MAKE_FUNCTION            0
             244 STORE_NAME              31 (is_windows)
  77         246 LOAD_CONST              38 (<code object is_linux at 0x1100c2660, file "<dis>", line 77>)
             248 LOAD_CONST              39 ('is_linux')
             250 MAKE_FUNCTION            0
             252 STORE_NAME              32 (is_linux)
  81         254 LOAD_CONST              40 (<code object is_macos at 0x1100c2450, file "<dis>", line 81>)
             256 LOAD_CONST              41 ('is_macos')
             258 MAKE_FUNCTION            0
             260 STORE_NAME              33 (is_macos)
  85         262 LOAD_CONST              42 (<code object is_ppc64le at 0x1100c22f0, file "<dis>", line 85>)
             264 LOAD_CONST              43 ('is_ppc64le')
             266 MAKE_FUNCTION            0
             268 STORE_NAME              34 (is_ppc64le)
  89         270 LOAD_CONST              44 (<code object is_cygwin at 0x1100c23a0, file "<dis>", line 89>)
             272 LOAD_CONST              45 ('is_cygwin')
             274 MAKE_FUNCTION            0
             276 STORE_NAME              35 (is_cygwin)
  93         278 LOAD_CONST              46 (<code object get_input at 0x1100c2500, file "<dis>", line 93>)
             280 LOAD_CONST              47 ('get_input')
             282 MAKE_FUNCTION            0
             284 STORE_NAME              36 (get_input)
 104         286 LOAD_CONST              48 (<code object symlink_force at 0x1100c25b0, file "<dis>", line 104>)
             288 LOAD_CONST              49 ('symlink_force')
             290 MAKE_FUNCTION            0
             292 STORE_NAME              37 (symlink_force)
 121         294 LOAD_CONST              50 (<code object sed_in_place at 0x1102e3a80, file "<dis>", line 121>)
             296 LOAD_CONST              51 ('sed_in_place')
             298 MAKE_FUNCTION            0
             300 STORE_NAME              38 (sed_in_place)
 136         302 LOAD_CONST              52 (<code object write_to_bazelrc at 0x1102e3b30, file "<dis>", line 136>)
             304 LOAD_CONST              53 ('write_to_bazelrc')
             306 MAKE_FUNCTION            0
             308 STORE_NAME              39 (write_to_bazelrc)
 141         310 LOAD_CONST              54 (<code object write_action_env_to_bazelrc at 0x1102e3be0, file "<dis>", line 141>)
             312 LOAD_CONST              55 ('write_action_env_to_bazelrc')
             314 MAKE_FUNCTION            0
             316 STORE_NAME              40 (write_action_env_to_bazelrc)
 145         318 LOAD_CONST             140 ((False, None))
             320 LOAD_CONST              57 (<code object run_shell at 0x1102e3d40, file "<dis>", line 145>)
             322 LOAD_CONST              58 ('run_shell')
             324 MAKE_FUNCTION            1 (defaults)
             326 STORE_NAME              41 (run_shell)
 158         328 LOAD_CONST              59 (<code object cygpath at 0x1102e3c90, file "<dis>", line 158>)
             330 LOAD_CONST              60 ('cygpath')
             332 MAKE_FUNCTION            0
             334 STORE_NAME              42 (cygpath)
 163         336 LOAD_CONST              61 (<code object get_python_path at 0x1102e3df0, file "<dis>", line 163>)
             338 LOAD_CONST              62 ('get_python_path')
             340 MAKE_FUNCTION            0
             342 STORE_NAME              43 (get_python_path)
 195         344 LOAD_CONST              63 (<code object get_python_major_version at 0x1102e3ea0, file "<dis>", line 195>)
             346 LOAD_CONST              64 ('get_python_major_version')
             348 MAKE_FUNCTION            0
             350 STORE_NAME              44 (get_python_major_version)
 200         352 LOAD_CONST              65 (<code object setup_python at 0x1102d40e0, file "<dis>", line 200>)
             354 LOAD_CONST              66 ('setup_python')
             356 MAKE_FUNCTION            0
             358 STORE_NAME              45 (setup_python)
 270         360 LOAD_CONST              67 (<code object reset_tf_configure_bazelrc at 0x1102d4030, file "<dis>", line 270>)
             362 LOAD_CONST              68 ('reset_tf_configure_bazelrc')
             364 MAKE_FUNCTION            0
             366 STORE_NAME              46 (reset_tf_configure_bazelrc)
 275         368 LOAD_CONST              69 (<code object cleanup_makefile at 0x1102d4190, file "<dis>", line 275>)
             370 LOAD_CONST              70 ('cleanup_makefile')
             372 MAKE_FUNCTION            0
             374 STORE_NAME              47 (cleanup_makefile)
 289         376 LOAD_CONST             141 ((None, None, None))
             378 LOAD_CONST              71 (<code object get_var at 0x1102d43a0, file "<dis>", line 289>)
             380 LOAD_CONST              72 ('get_var')
             382 MAKE_FUNCTION            1 (defaults)
             384 STORE_NAME              48 (get_var)
 374         386 LOAD_CONST             142 ((None,))
             388 LOAD_CONST              73 (<code object set_build_var at 0x1102d42f0, file "<dis>", line 374>)
             390 LOAD_CONST              74 ('set_build_var')
             392 MAKE_FUNCTION            1 (defaults)
             394 STORE_NAME              49 (set_build_var)
 408         396 LOAD_CONST             143 ((None, None, None, None))
             398 LOAD_CONST              75 (<code object set_action_env_var at 0x1102d4450, file "<dis>", line 408>)
             400 LOAD_CONST              76 ('set_action_env_var')
             402 MAKE_FUNCTION            1 (defaults)
             404 STORE_NAME              50 (set_action_env_var)
 443         406 LOAD_CONST              77 (<code object convert_version_to_int at 0x1102d4660, file "<dis>", line 443>)
             408 LOAD_CONST              78 ('convert_version_to_int')
             410 MAKE_FUNCTION            0
             412 STORE_NAME              51 (convert_version_to_int)
 468         414 LOAD_CONST              79 (<code object check_bazel_version at 0x1102d4710, file "<dis>", line 468>)
             416 LOAD_CONST              80 ('check_bazel_version')
             418 MAKE_FUNCTION            0
             420 STORE_NAME              52 (check_bazel_version)
 516         422 LOAD_CONST              81 (<code object set_cc_opt_flags at 0x1102d47c0, file "<dis>", line 516>)
             424 LOAD_CONST              82 ('set_cc_opt_flags')
             426 MAKE_FUNCTION            0
             428 STORE_NAME              53 (set_cc_opt_flags)
 546         430 LOAD_CONST              83 (<code object set_tf_cuda_clang at 0x1102d4870, file "<dis>", line 546>)
             432 LOAD_CONST              84 ('set_tf_cuda_clang')
             434 MAKE_FUNCTION            0
             436 STORE_NAME              54 (set_tf_cuda_clang)
 566         438 LOAD_CONST              85 (<code object set_tf_download_clang at 0x1102d4920, file "<dis>", line 566>)
             440 LOAD_CONST              86 ('set_tf_download_clang')
             442 MAKE_FUNCTION            0
             444 STORE_NAME              55 (set_tf_download_clang)
 582         446 LOAD_CONST              87 (<code object get_from_env_or_user_or_default at 0x1102d49d0, file "<dis>", line 582>)
             448 LOAD_CONST              88 ('get_from_env_or_user_or_default')
             450 MAKE_FUNCTION            0
             452 STORE_NAME              56 (get_from_env_or_user_or_default)
 607         454 LOAD_CONST              89 (<code object set_clang_cuda_compiler_path at 0x1102d4a80, file "<dis>", line 607>)
             456 LOAD_CONST              90 ('set_clang_cuda_compiler_path')
             458 MAKE_FUNCTION            0
             460 STORE_NAME              57 (set_clang_cuda_compiler_path)
 636         462 LOAD_CONST              56 (False)
 637         464 LOAD_CONST              56 (False)
 638         466 LOAD_NAME               19 (_DEFAULT_PROMPT_ASK_ATTEMPTS)
 630         468 BUILD_TUPLE              3
             470 LOAD_CONST              91 (<code object prompt_loop_or_load_from_env at 0x1102d4b30, file "<dis>", line 630>)
             472 LOAD_CONST              92 ('prompt_loop_or_load_from_env')
             474 MAKE_FUNCTION            1 (defaults)
             476 STORE_NAME              58 (prompt_loop_or_load_from_env)
 696         478 LOAD_CONST              93 (<code object create_android_ndk_rule at 0x1102d4df0, file "<dis>", line 696>)
             480 LOAD_CONST              94 ('create_android_ndk_rule')
             482 MAKE_FUNCTION            0
             484 STORE_NAME              59 (create_android_ndk_rule)
 724         486 LOAD_CONST              95 (<code object create_android_sdk_rule at 0x1102d9190, file "<dis>", line 724>)
             488 LOAD_CONST              96 ('create_android_sdk_rule')
             490 MAKE_FUNCTION            0
             492 STORE_NAME              60 (create_android_sdk_rule)
 788         494 LOAD_CONST              97 (<code object get_ndk_api_level at 0x1102d9500, file "<dis>", line 788>)
             496 LOAD_CONST              98 ('get_ndk_api_level')
             498 MAKE_FUNCTION            0
             500 STORE_NAME              61 (get_ndk_api_level)
 836         502 LOAD_CONST              99 (<code object set_gcc_host_compiler_path at 0x1102d95b0, file "<dis>", line 836>)
             504 LOAD_CONST             100 ('set_gcc_host_compiler_path')
             506 MAKE_FUNCTION            0
             508 STORE_NAME              62 (set_gcc_host_compiler_path)
 859         510 LOAD_CONST             101 (<code object reformat_version_sequence at 0x1102d9660, file "<dis>", line 859>)
             512 LOAD_CONST             102 ('reformat_version_sequence')
             514 MAKE_FUNCTION            0
             516 STORE_NAME              63 (reformat_version_sequence)
 882         518 LOAD_CONST             103 (<code object set_tf_cuda_paths at 0x1102d9710, file "<dis>", line 882>)
             520 LOAD_CONST             104 ('set_tf_cuda_paths')
             522 MAKE_FUNCTION            0
             524 STORE_NAME              64 (set_tf_cuda_paths)
 893         526 LOAD_CONST             105 (<code object set_tf_cuda_version at 0x1102d97c0, file "<dis>", line 893>)
             528 LOAD_CONST             106 ('set_tf_cuda_version')
             530 MAKE_FUNCTION            0
             532 STORE_NAME              65 (set_tf_cuda_version)
 905         534 LOAD_CONST             107 (<code object set_tf_cudnn_version at 0x1102d9870, file "<dis>", line 905>)
             536 LOAD_CONST             108 ('set_tf_cudnn_version')
             538 MAKE_FUNCTION            0
             540 STORE_NAME              66 (set_tf_cudnn_version)
 917         542 LOAD_CONST             109 (<code object is_cuda_compatible at 0x1102d9920, file "<dis>", line 917>)
             544 LOAD_CONST             110 ('is_cuda_compatible')
             546 MAKE_FUNCTION            0
             548 STORE_NAME              67 (is_cuda_compatible)
 946         550 LOAD_CONST             111 (<code object set_tf_tensorrt_version at 0x1102d99d0, file "<dis>", line 946>)
             552 LOAD_CONST             112 ('set_tf_tensorrt_version')
             554 MAKE_FUNCTION            0
             556 STORE_NAME              68 (set_tf_tensorrt_version)
 963         558 LOAD_CONST             113 (<code object set_tf_nccl_version at 0x1102d9a80, file "<dis>", line 963>)
             560 LOAD_CONST             114 ('set_tf_nccl_version')
             562 MAKE_FUNCTION            0
             564 STORE_NAME              69 (set_tf_nccl_version)
 980         566 LOAD_CONST             115 (<code object get_native_cuda_compute_capabilities at 0x1102d9c90, file "<dis>", line 980>)
             568 LOAD_CONST             116 ('get_native_cuda_compute_capabilities')
             570 MAKE_FUNCTION            0
             572 STORE_NAME              70 (get_native_cuda_compute_capabilities)
1004         574 LOAD_CONST             117 (<code object set_tf_cuda_compute_capabilities at 0x1102d9df0, file "<dis>", line 1004>)
             576 LOAD_CONST             118 ('set_tf_cuda_compute_capabilities')
             578 MAKE_FUNCTION            0
             580 STORE_NAME              71 (set_tf_cuda_compute_capabilities)
1075         582 LOAD_CONST             119 (<code object set_other_cuda_vars at 0x1102d9ea0, file "<dis>", line 1075>)
             584 LOAD_CONST             120 ('set_other_cuda_vars')
             586 MAKE_FUNCTION            0
             588 STORE_NAME              72 (set_other_cuda_vars)
1084         590 LOAD_CONST             121 (<code object set_host_cxx_compiler at 0x1102d9f50, file "<dis>", line 1084>)
             592 LOAD_CONST             122 ('set_host_cxx_compiler')
             594 MAKE_FUNCTION            0
             596 STORE_NAME              73 (set_host_cxx_compiler)
1101         598 LOAD_CONST             123 (<code object set_host_c_compiler at 0x1102db030, file "<dis>", line 1101>)
             600 LOAD_CONST             124 ('set_host_c_compiler')
             602 MAKE_FUNCTION            0
             604 STORE_NAME              74 (set_host_c_compiler)
1118         606 LOAD_CONST             125 (<code object system_specific_test_config at 0x1102db0e0, file "<dis>", line 1118>)
             608 LOAD_CONST             126 ('system_specific_test_config')
             610 MAKE_FUNCTION            0
             612 STORE_NAME              75 (system_specific_test_config)
1161         614 LOAD_CONST             127 (<code object set_system_libs_flag at 0x1102db240, file "<dis>", line 1161>)
             616 LOAD_CONST             128 ('set_system_libs_flag')
             618 MAKE_FUNCTION            0
             620 STORE_NAME              76 (set_system_libs_flag)
1175         622 LOAD_CONST             129 (<code object set_windows_build_flags at 0x1102db190, file "<dis>", line 1175>)
             624 LOAD_CONST             130 ('set_windows_build_flags')
             626 MAKE_FUNCTION            0
             628 STORE_NAME              77 (set_windows_build_flags)
1199         630 LOAD_CONST             131 (<code object config_info_line at 0x1102db2f0, file "<dis>", line 1199>)
             632 LOAD_CONST             132 ('config_info_line')
             634 MAKE_FUNCTION            0
             636 STORE_NAME              78 (config_info_line)
1204         638 LOAD_CONST             133 (<code object configure_ios at 0x1102db500, file "<dis>", line 1204>)
             640 LOAD_CONST             134 ('configure_ios')
             642 MAKE_FUNCTION            0
             644 STORE_NAME              79 (configure_ios)
1220         646 LOAD_CONST             135 (<code object validate_cuda_config at 0x1102db660, file "<dis>", line 1220>)
             648 LOAD_CONST             136 ('validate_cuda_config')
             650 MAKE_FUNCTION            0
             652 STORE_NAME              80 (validate_cuda_config)
1287         654 LOAD_CONST             137 (<code object main at 0x1102db710, file "<dis>", line 1287>)
             656 LOAD_CONST             138 ('main')
             658 MAKE_FUNCTION            0
             660 STORE_NAME              81 (main)
1482         662 LOAD_NAME               82 (__name__)
             664 LOAD_CONST             139 ('__main__')
             666 COMPARE_OP               2 (==)
             668 EXTENDED_ARG             2
             670 POP_JUMP_IF_FALSE      678
1483         672 LOAD_NAME               81 (main)
             674 CALL_FUNCTION            0
             676 POP_TOP
         >>  678 LOAD_CONST               2 (None)
             680 RETURN_VALUE
Disassembly of <code object UserInputError at 0x1100b27c0, file "<dis>", line 69>:
 69           0 LOAD_NAME                0 (__name__)
              2 STORE_NAME               1 (__module__)
              4 LOAD_CONST               0 ('UserInputError')
              6 STORE_NAME               2 (__qualname__)
 70           8 LOAD_CONST               1 (None)
             10 RETURN_VALUE
Disassembly of <code object is_windows at 0x1100b2660, file "<dis>", line 73>:
 74           0 LOAD_GLOBAL              0 (platform)
              2 LOAD_METHOD              1 (system)
              4 CALL_METHOD              0
              6 LOAD_CONST               1 ('Windows')
              8 COMPARE_OP               2 (==)
             10 RETURN_VALUE
Disassembly of <code object is_linux at 0x1100c2660, file "<dis>", line 77>:
 78           0 LOAD_GLOBAL              0 (platform)
              2 LOAD_METHOD              1 (system)
              4 CALL_METHOD              0
              6 LOAD_CONST               1 ('Linux')
              8 COMPARE_OP               2 (==)
             10 RETURN_VALUE
Disassembly of <code object is_macos at 0x1100c2450, file "<dis>", line 81>:
 82           0 LOAD_GLOBAL              0 (platform)
              2 LOAD_METHOD              1 (system)
              4 CALL_METHOD              0
              6 LOAD_CONST               1 ('Darwin')
              8 COMPARE_OP               2 (==)
             10 RETURN_VALUE
Disassembly of <code object is_ppc64le at 0x1100c22f0, file "<dis>", line 85>:
 86           0 LOAD_GLOBAL              0 (platform)
              2 LOAD_METHOD              1 (machine)
              4 CALL_METHOD              0
              6 LOAD_CONST               1 ('ppc64le')
              8 COMPARE_OP               2 (==)
             10 RETURN_VALUE
Disassembly of <code object is_cygwin at 0x1100c23a0, file "<dis>", line 89>:
 90           0 LOAD_GLOBAL              0 (platform)
              2 LOAD_METHOD              1 (system)
              4 CALL_METHOD              0
              6 LOAD_METHOD              2 (startswith)
              8 LOAD_CONST               1 ('CYGWIN_NT')
             10 CALL_METHOD              1
             12 RETURN_VALUE
Disassembly of <code object get_input at 0x1100c2500, file "<dis>", line 93>:
 94           0 SETUP_FINALLY           46 (to 48)
 95           2 SETUP_FINALLY           12 (to 16)
 96           4 LOAD_GLOBAL              0 (raw_input)
              6 LOAD_FAST                0 (question)
              8 CALL_FUNCTION            1
             10 STORE_FAST               1 (answer)
             12 POP_BLOCK
             14 JUMP_FORWARD            28 (to 44)
 97     >>   16 DUP_TOP
             18 LOAD_GLOBAL              1 (NameError)
             20 COMPARE_OP              10 (exception match)
             22 POP_JUMP_IF_FALSE       42
             24 POP_TOP
             26 POP_TOP
             28 POP_TOP
 98          30 LOAD_GLOBAL              2 (input)
             32 LOAD_FAST                0 (question)
             34 CALL_FUNCTION            1
             36 STORE_FAST               1 (answer)
             38 POP_EXCEPT
             40 JUMP_FORWARD             2 (to 44)
        >>   42 END_FINALLY
        >>   44 POP_BLOCK
             46 JUMP_FORWARD            24 (to 72)
 99     >>   48 DUP_TOP
             50 LOAD_GLOBAL              3 (EOFError)
             52 COMPARE_OP              10 (exception match)
             54 POP_JUMP_IF_FALSE       70
             56 POP_TOP
             58 POP_TOP
             60 POP_TOP
100          62 LOAD_CONST               1 ('')
             64 STORE_FAST               1 (answer)
             66 POP_EXCEPT
             68 JUMP_FORWARD             2 (to 72)
        >>   70 END_FINALLY
101     >>   72 LOAD_FAST                1 (answer)
             74 RETURN_VALUE
Disassembly of <code object symlink_force at 0x1100c25b0, file "<dis>", line 104>:
111           0 SETUP_FINALLY           16 (to 18)
112           2 LOAD_GLOBAL              0 (os)
              4 LOAD_METHOD              1 (symlink)
              6 LOAD_FAST                0 (target)
              8 LOAD_FAST                1 (link_name)
             10 CALL_METHOD              2
             12 POP_TOP
             14 POP_BLOCK
             16 JUMP_FORWARD            74 (to 92)
113     >>   18 DUP_TOP
             20 LOAD_GLOBAL              2 (OSError)
             22 COMPARE_OP              10 (exception match)
             24 POP_JUMP_IF_FALSE       90
             26 POP_TOP
             28 STORE_FAST               2 (e)
             30 POP_TOP
             32 SETUP_FINALLY           44 (to 78)
114          34 LOAD_FAST                2 (e)
             36 LOAD_ATTR                3 (errno)
             38 LOAD_GLOBAL              3 (errno)
             40 LOAD_ATTR                4 (EEXIST)
             42 COMPARE_OP               2 (==)
             44 POP_JUMP_IF_FALSE       70
115          46 LOAD_GLOBAL              0 (os)
             48 LOAD_METHOD              5 (remove)
             50 LOAD_FAST                1 (link_name)
             52 CALL_METHOD              1
             54 POP_TOP
116          56 LOAD_GLOBAL              0 (os)
             58 LOAD_METHOD              1 (symlink)
             60 LOAD_FAST                0 (target)
             62 LOAD_FAST                1 (link_name)
             64 CALL_METHOD              2
             66 POP_TOP
             68 JUMP_FORWARD             4 (to 74)
118     >>   70 LOAD_FAST                2 (e)
             72 RAISE_VARARGS            1
        >>   74 POP_BLOCK
             76 BEGIN_FINALLY
        >>   78 LOAD_CONST               1 (None)
             80 STORE_FAST               2 (e)
             82 DELETE_FAST              2 (e)
             84 END_FINALLY
             86 POP_EXCEPT
             88 JUMP_FORWARD             2 (to 92)
        >>   90 END_FINALLY
        >>   92 LOAD_CONST               1 (None)
             94 RETURN_VALUE
Disassembly of <code object sed_in_place at 0x1102e3a80, file "<dis>", line 121>:
129           0 LOAD_GLOBAL              0 (open)
              2 LOAD_FAST                0 (filename)
              4 LOAD_CONST               1 ('r')
              6 CALL_FUNCTION            2
              8 SETUP_WITH              14 (to 24)
             10 STORE_FAST               3 (f)
130          12 LOAD_FAST                3 (f)
             14 LOAD_METHOD              1 (read)
             16 CALL_METHOD              0
             18 STORE_FAST               4 (filedata)
             20 POP_BLOCK
             22 BEGIN_FINALLY
        >>   24 WITH_CLEANUP_START
             26 WITH_CLEANUP_FINISH
             28 END_FINALLY
131          30 LOAD_FAST                4 (filedata)
             32 LOAD_METHOD              2 (replace)
             34 LOAD_FAST                1 (old)
             36 LOAD_FAST                2 (new)
             38 CALL_METHOD              2
             40 STORE_FAST               5 (newdata)
132          42 LOAD_GLOBAL              0 (open)
             44 LOAD_FAST                0 (filename)
             46 LOAD_CONST               2 ('w')
             48 CALL_FUNCTION            2
             50 SETUP_WITH              16 (to 68)
             52 STORE_FAST               3 (f)
133          54 LOAD_FAST                3 (f)
             56 LOAD_METHOD              3 (write)
             58 LOAD_FAST                5 (newdata)
             60 CALL_METHOD              1
             62 POP_TOP
             64 POP_BLOCK
             66 BEGIN_FINALLY
        >>   68 WITH_CLEANUP_START
             70 WITH_CLEANUP_FINISH
             72 END_FINALLY
             74 LOAD_CONST               3 (None)
             76 RETURN_VALUE
Disassembly of <code object write_to_bazelrc at 0x1102e3b30, file "<dis>", line 136>:
137           0 LOAD_GLOBAL              0 (open)
              2 LOAD_GLOBAL              1 (_TF_BAZELRC)
              4 LOAD_CONST               1 ('a')
              6 CALL_FUNCTION            2
              8 SETUP_WITH              20 (to 30)
             10 STORE_FAST               1 (f)
138          12 LOAD_FAST                1 (f)
             14 LOAD_METHOD              2 (write)
             16 LOAD_FAST                0 (line)
             18 LOAD_CONST               2 ('\n')
             20 BINARY_ADD
             22 CALL_METHOD              1
             24 POP_TOP
             26 POP_BLOCK
             28 BEGIN_FINALLY
        >>   30 WITH_CLEANUP_START
             32 WITH_CLEANUP_FINISH
             34 END_FINALLY
             36 LOAD_CONST               0 (None)
             38 RETURN_VALUE
Disassembly of <code object write_action_env_to_bazelrc at 0x1102e3be0, file "<dis>", line 141>:
142           0 LOAD_GLOBAL              0 (write_to_bazelrc)
              2 LOAD_CONST               1 ('build --action_env {}="{}"')
              4 LOAD_METHOD              1 (format)
              6 LOAD_FAST                0 (var_name)
              8 LOAD_GLOBAL              2 (str)
             10 LOAD_FAST                1 (var)
             12 CALL_FUNCTION            1
             14 CALL_METHOD              2
             16 CALL_FUNCTION            1
             18 POP_TOP
             20 LOAD_CONST               0 (None)
             22 RETURN_VALUE
Disassembly of <code object run_shell at 0x1102e3d40, file "<dis>", line 145>:
146           0 LOAD_FAST                2 (stderr)
              2 LOAD_CONST               0 (None)
              4 COMPARE_OP               8 (is)
              6 POP_JUMP_IF_FALSE       14
147           8 LOAD_GLOBAL              0 (sys)
             10 LOAD_ATTR                1 (stdout)
             12 STORE_FAST               2 (stderr)
148     >>   14 LOAD_FAST                1 (allow_non_zero)
             16 POP_JUMP_IF_FALSE       82
149          18 SETUP_FINALLY           18 (to 38)
150          20 LOAD_GLOBAL              2 (subprocess)
             22 LOAD_ATTR                3 (check_output)
             24 LOAD_FAST                0 (cmd)
             26 LOAD_FAST                2 (stderr)
             28 LOAD_CONST               1 (('stderr',))
             30 CALL_FUNCTION_KW         2
             32 STORE_FAST               3 (output)
             34 POP_BLOCK
             36 JUMP_ABSOLUTE           96
151     >>   38 DUP_TOP
             40 LOAD_GLOBAL              2 (subprocess)
             42 LOAD_ATTR                4 (CalledProcessError)
             44 COMPARE_OP              10 (exception match)
             46 POP_JUMP_IF_FALSE       78
             48 POP_TOP
             50 STORE_FAST               4 (e)
             52 POP_TOP
             54 SETUP_FINALLY           10 (to 66)
152          56 LOAD_FAST                4 (e)
             58 LOAD_ATTR                5 (output)
             60 STORE_FAST               3 (output)
             62 POP_BLOCK
             64 BEGIN_FINALLY
        >>   66 LOAD_CONST               0 (None)
             68 STORE_FAST               4 (e)
             70 DELETE_FAST              4 (e)
             72 END_FINALLY
             74 POP_EXCEPT
             76 JUMP_ABSOLUTE           96
        >>   78 END_FINALLY
             80 JUMP_FORWARD            14 (to 96)
154     >>   82 LOAD_GLOBAL              2 (subprocess)
             84 LOAD_ATTR                3 (check_output)
             86 LOAD_FAST                0 (cmd)
             88 LOAD_FAST                2 (stderr)
             90 LOAD_CONST               1 (('stderr',))
             92 CALL_FUNCTION_KW         2
             94 STORE_FAST               3 (output)
155     >>   96 LOAD_FAST                3 (output)
             98 LOAD_METHOD              6 (decode)
            100 LOAD_CONST               2 ('UTF-8')
            102 CALL_METHOD              1
            104 LOAD_METHOD              7 (strip)
            106 CALL_METHOD              0
            108 RETURN_VALUE
Disassembly of <code object cygpath at 0x1102e3c90, file "<dis>", line 158>:
160           0 LOAD_GLOBAL              0 (os)
              2 LOAD_ATTR                1 (path)
              4 LOAD_METHOD              2 (abspath)
              6 LOAD_FAST                0 (path)
              8 CALL_METHOD              1
             10 LOAD_METHOD              3 (replace)
             12 LOAD_CONST               1 ('\\')
             14 LOAD_CONST               2 ('/')
             16 CALL_METHOD              2
             18 RETURN_VALUE
Disassembly of <code object get_python_path at 0x1102e3df0, file "<dis>", line 163>:
165           0 BUILD_LIST               0
              2 STORE_FAST               2 (python_paths)
166           4 LOAD_FAST                0 (environ_cp)
              6 LOAD_METHOD              0 (get)
              8 LOAD_CONST               1 ('PYTHONPATH')
             10 CALL_METHOD              1
             12 POP_JUMP_IF_FALSE       30
167          14 LOAD_FAST                0 (environ_cp)
             16 LOAD_METHOD              0 (get)
             18 LOAD_CONST               1 ('PYTHONPATH')
             20 CALL_METHOD              1
             22 LOAD_METHOD              1 (split)
             24 LOAD_CONST               2 (':')
             26 CALL_METHOD              1
             28 STORE_FAST               2 (python_paths)
168     >>   30 SETUP_FINALLY           40 (to 72)
169          32 LOAD_GLOBAL              2 (open)
             34 LOAD_GLOBAL              3 (os)
             36 LOAD_ATTR                4 (devnull)
             38 LOAD_CONST               3 ('wb')
             40 CALL_FUNCTION            2
             42 STORE_FAST               3 (stderr)
170          44 LOAD_GLOBAL              5 (run_shell)
171          46 LOAD_FAST                1 (python_bin_path)
             48 LOAD_CONST               4 ('-c')
172          50 LOAD_CONST               5 ('import site; print("\\n".join(site.getsitepackages()))')
170          52 BUILD_LIST               3
174          54 LOAD_FAST                3 (stderr)
170          56 LOAD_CONST               6 (('stderr',))
             58 CALL_FUNCTION_KW         2
             60 LOAD_METHOD              1 (split)
174          62 LOAD_CONST               7 ('\n')
170          64 CALL_METHOD              1
             66 STORE_FAST               4 (library_paths)
             68 POP_BLOCK
             70 JUMP_FORWARD            38 (to 110)
175     >>   72 DUP_TOP
             74 LOAD_GLOBAL              6 (subprocess)
             76 LOAD_ATTR                7 (CalledProcessError)
             78 COMPARE_OP              10 (exception match)
             80 POP_JUMP_IF_FALSE      108
             82 POP_TOP
             84 POP_TOP
             86 POP_TOP
177          88 LOAD_GLOBAL              5 (run_shell)
178          90 LOAD_FAST                1 (python_bin_path)
             92 LOAD_CONST               4 ('-c')
179          94 LOAD_CONST               8 ('from distutils.sysconfig import get_python_lib;print(get_python_lib())')
177          96 BUILD_LIST               3
             98 CALL_FUNCTION            1
176         100 BUILD_LIST               1
            102 STORE_FAST               4 (library_paths)
            104 POP_EXCEPT
            106 JUMP_FORWARD             2 (to 110)
        >>  108 END_FINALLY
184     >>  110 LOAD_GLOBAL              8 (set)
            112 LOAD_FAST                2 (python_paths)
            114 LOAD_FAST                4 (library_paths)
            116 BINARY_ADD
            118 CALL_FUNCTION            1
            120 STORE_FAST               5 (all_paths)
186         122 LOAD_GLOBAL              9 (sorted)
            124 LOAD_FAST                5 (all_paths)
            126 CALL_FUNCTION            1
            128 STORE_FAST               5 (all_paths)
188         130 BUILD_LIST               0
            132 STORE_FAST               6 (paths)
189         134 LOAD_FAST                5 (all_paths)
            136 GET_ITER
        >>  138 FOR_ITER                26 (to 166)
            140 STORE_FAST               7 (path)
190         142 LOAD_GLOBAL              3 (os)
            144 LOAD_ATTR               10 (path)
            146 LOAD_METHOD             11 (isdir)
            148 LOAD_FAST                7 (path)
            150 CALL_METHOD              1
            152 POP_JUMP_IF_FALSE      138
191         154 LOAD_FAST                6 (paths)
            156 LOAD_METHOD             12 (append)
            158 LOAD_FAST                7 (path)
            160 CALL_METHOD              1
            162 POP_TOP
            164 JUMP_ABSOLUTE          138
192     >>  166 LOAD_FAST                6 (paths)
            168 RETURN_VALUE
Disassembly of <code object get_python_major_version at 0x1102e3ea0, file "<dis>", line 195>:
197           0 LOAD_GLOBAL              0 (run_shell)
              2 LOAD_FAST                0 (python_bin_path)
              4 LOAD_CONST               1 ('-c')
              6 LOAD_CONST               2 ('import sys; print(sys.version[0])')
              8 BUILD_LIST               3
             10 CALL_FUNCTION            1
             12 RETURN_VALUE
Disassembly of <code object setup_python at 0x1102d40e0, file "<dis>", line 200>:
203           0 LOAD_GLOBAL              0 (sys)
              2 LOAD_ATTR                1 (executable)
              4 STORE_FAST               1 (default_python_bin_path)
204           6 LOAD_CONST               1 ('Please specify the location of python. [Default is {}]: ')
              8 LOAD_METHOD              2 (format)
205          10 LOAD_FAST                1 (default_python_bin_path)
204          12 CALL_METHOD              1
             14 STORE_FAST               2 (ask_python_bin_path)
207     >>   16 LOAD_GLOBAL              3 (get_from_env_or_user_or_default)
             18 LOAD_FAST                0 (environ_cp)
208          20 LOAD_CONST               2 ('PYTHON_BIN_PATH')
209          22 LOAD_FAST                2 (ask_python_bin_path)
210          24 LOAD_FAST                1 (default_python_bin_path)
207          26 CALL_FUNCTION            4
             28 STORE_FAST               3 (python_bin_path)
212          30 LOAD_GLOBAL              4 (os)
             32 LOAD_ATTR                5 (path)
             34 LOAD_METHOD              6 (isfile)
             36 LOAD_FAST                3 (python_bin_path)
             38 CALL_METHOD              1
             40 POP_JUMP_IF_FALSE       60
             42 LOAD_GLOBAL              4 (os)
             44 LOAD_METHOD              7 (access)
             46 LOAD_FAST                3 (python_bin_path)
             48 LOAD_GLOBAL              4 (os)
             50 LOAD_ATTR                8 (X_OK)
             52 CALL_METHOD              2
             54 POP_JUMP_IF_FALSE       60
213          56 JUMP_ABSOLUTE          112
             58 JUMP_FORWARD            42 (to 102)
214     >>   60 LOAD_GLOBAL              4 (os)
             62 LOAD_ATTR                5 (path)
             64 LOAD_METHOD              9 (exists)
             66 LOAD_FAST                3 (python_bin_path)
             68 CALL_METHOD              1
             70 POP_JUMP_IF_TRUE        88
215          72 LOAD_GLOBAL             10 (print)
             74 LOAD_CONST               3 ('Invalid python path: {} cannot be found.')
             76 LOAD_METHOD              2 (format)
             78 LOAD_FAST                3 (python_bin_path)
             80 CALL_METHOD              1
             82 CALL_FUNCTION            1
             84 POP_TOP
             86 JUMP_FORWARD            14 (to 102)
217     >>   88 LOAD_GLOBAL             10 (print)
             90 LOAD_CONST               4 ('{} is not executable.  Is it the python binary?')
             92 LOAD_METHOD              2 (format)
218          94 LOAD_FAST                3 (python_bin_path)
217          96 CALL_METHOD              1
             98 CALL_FUNCTION            1
            100 POP_TOP
219     >>  102 LOAD_CONST               5 ('')
            104 LOAD_FAST                0 (environ_cp)
            106 LOAD_CONST               2 ('PYTHON_BIN_PATH')
            108 STORE_SUBSCR
            110 JUMP_ABSOLUTE           16
222     >>  112 LOAD_GLOBAL             11 (is_windows)
            114 CALL_FUNCTION            0
            116 POP_JUMP_IF_TRUE       124
            118 LOAD_GLOBAL             12 (is_cygwin)
            120 CALL_FUNCTION            0
            122 POP_JUMP_IF_FALSE      132
223     >>  124 LOAD_GLOBAL             13 (cygpath)
            126 LOAD_FAST                3 (python_bin_path)
            128 CALL_FUNCTION            1
            130 STORE_FAST               3 (python_bin_path)
226     >>  132 LOAD_FAST                0 (environ_cp)
            134 LOAD_METHOD             14 (get)
            136 LOAD_CONST               6 ('PYTHON_LIB_PATH')
            138 CALL_METHOD              1
            140 STORE_FAST               4 (python_lib_path)
227         142 LOAD_FAST                4 (python_lib_path)
            144 POP_JUMP_IF_TRUE       240
228         146 LOAD_GLOBAL             15 (get_python_path)
            148 LOAD_FAST                0 (environ_cp)
            150 LOAD_FAST                3 (python_bin_path)
            152 CALL_FUNCTION            2
            154 STORE_FAST               5 (python_lib_paths)
229         156 LOAD_FAST                0 (environ_cp)
            158 LOAD_METHOD             14 (get)
            160 LOAD_CONST               7 ('USE_DEFAULT_PYTHON_LIB_PATH')
            162 CALL_METHOD              1
            164 LOAD_CONST               8 ('1')
            166 COMPARE_OP               2 (==)
            168 POP_JUMP_IF_FALSE      180
230         170 LOAD_FAST                5 (python_lib_paths)
            172 LOAD_CONST               9 (0)
            174 BINARY_SUBSCR
            176 STORE_FAST               4 (python_lib_path)
            178 JUMP_FORWARD            52 (to 232)
232     >>  180 LOAD_GLOBAL             10 (print)
            182 LOAD_CONST              10 ('Found possible Python library paths:\n  %s')
233         184 LOAD_CONST              11 ('\n  ')
            186 LOAD_METHOD             16 (join)
            188 LOAD_FAST                5 (python_lib_paths)
            190 CALL_METHOD              1
232         192 BINARY_MODULO
            194 CALL_FUNCTION            1
            196 POP_TOP
234         198 LOAD_FAST                5 (python_lib_paths)
            200 LOAD_CONST               9 (0)
            202 BINARY_SUBSCR
            204 STORE_FAST               6 (default_python_lib_path)
235         206 LOAD_GLOBAL             17 (get_input)
236         208 LOAD_CONST              12 ('Please input the desired Python library path to use.  Default is [{}]\n')
            210 LOAD_METHOD              2 (format)
237         212 LOAD_FAST                5 (python_lib_paths)
            214 LOAD_CONST               9 (0)
            216 BINARY_SUBSCR
236         218 CALL_METHOD              1
235         220 CALL_FUNCTION            1
            222 STORE_FAST               4 (python_lib_path)
238         224 LOAD_FAST                4 (python_lib_path)
            226 POP_JUMP_IF_TRUE       232
239         228 LOAD_FAST                6 (default_python_lib_path)
            230 STORE_FAST               4 (python_lib_path)
240     >>  232 LOAD_FAST                4 (python_lib_path)
            234 LOAD_FAST                0 (environ_cp)
            236 LOAD_CONST               6 ('PYTHON_LIB_PATH')
            238 STORE_SUBSCR
242     >>  240 LOAD_GLOBAL             18 (get_python_major_version)
            242 LOAD_FAST                3 (python_bin_path)
            244 CALL_FUNCTION            1
            246 STORE_FAST               7 (python_major_version)
243         248 LOAD_FAST                7 (python_major_version)
            250 LOAD_CONST              13 ('2')
            252 COMPARE_OP               2 (==)
            254 EXTENDED_ARG             1
            256 POP_JUMP_IF_FALSE      266
244         258 LOAD_GLOBAL             19 (write_to_bazelrc)
            260 LOAD_CONST              14 ('build --host_force_python=PY2')
            262 CALL_FUNCTION            1
            264 POP_TOP
247     >>  266 LOAD_GLOBAL             11 (is_windows)
            268 CALL_FUNCTION            0
            270 EXTENDED_ARG             1
            272 POP_JUMP_IF_TRUE       282
            274 LOAD_GLOBAL             12 (is_cygwin)
            276 CALL_FUNCTION            0
            278 EXTENDED_ARG             1
            280 POP_JUMP_IF_FALSE      290
248     >>  282 LOAD_GLOBAL             13 (cygpath)
            284 LOAD_FAST                4 (python_lib_path)
            286 CALL_FUNCTION            1
            288 STORE_FAST               4 (python_lib_path)
251     >>  290 LOAD_GLOBAL             20 (write_action_env_to_bazelrc)
            292 LOAD_CONST               2 ('PYTHON_BIN_PATH')
            294 LOAD_FAST                3 (python_bin_path)
            296 CALL_FUNCTION            2
            298 POP_TOP
252         300 LOAD_GLOBAL             20 (write_action_env_to_bazelrc)
            302 LOAD_CONST               6 ('PYTHON_LIB_PATH')
            304 LOAD_FAST                4 (python_lib_path)
            306 CALL_FUNCTION            2
            308 POP_TOP
253         310 LOAD_GLOBAL             19 (write_to_bazelrc)
            312 LOAD_CONST              15 ('build --python_path="{}"')
            314 LOAD_METHOD              2 (format)
            316 LOAD_FAST                3 (python_bin_path)
            318 CALL_METHOD              1
            320 CALL_FUNCTION            1
            322 POP_TOP
254         324 LOAD_FAST                3 (python_bin_path)
            326 LOAD_FAST                0 (environ_cp)
            328 LOAD_CONST               2 ('PYTHON_BIN_PATH')
            330 STORE_SUBSCR
258         332 LOAD_FAST                0 (environ_cp)
            334 LOAD_METHOD             14 (get)
            336 LOAD_CONST              16 ('PYTHONPATH')
            338 CALL_METHOD              1
            340 EXTENDED_ARG             1
            342 POP_JUMP_IF_FALSE      386
259         344 LOAD_FAST                0 (environ_cp)
            346 LOAD_METHOD             14 (get)
            348 LOAD_CONST              16 ('PYTHONPATH')
            350 CALL_METHOD              1
            352 LOAD_METHOD             21 (split)
            354 LOAD_CONST              17 (':')
            356 CALL_METHOD              1
            358 STORE_FAST               8 (python_paths)
260         360 LOAD_FAST                4 (python_lib_path)
            362 LOAD_FAST                8 (python_paths)
            364 COMPARE_OP               6 (in)
            366 EXTENDED_ARG             1
            368 POP_JUMP_IF_FALSE      386
261         370 LOAD_GLOBAL             20 (write_action_env_to_bazelrc)
            372 LOAD_CONST              16 ('PYTHONPATH')
            374 LOAD_FAST                0 (environ_cp)
            376 LOAD_METHOD             14 (get)
            378 LOAD_CONST              16 ('PYTHONPATH')
            380 CALL_METHOD              1
            382 CALL_FUNCTION            2
            384 POP_TOP
264     >>  386 LOAD_GLOBAL             22 (open)
265         388 LOAD_GLOBAL              4 (os)
            390 LOAD_ATTR                5 (path)
            392 LOAD_METHOD             16 (join)
            394 LOAD_GLOBAL             23 (_TF_WORKSPACE_ROOT)
            396 LOAD_CONST              18 ('tools')
            398 LOAD_CONST              19 ('python_bin_path.sh')
            400 CALL_METHOD              3
266         402 LOAD_CONST              20 ('w')
264         404 CALL_FUNCTION            2
            406 SETUP_WITH              22 (to 430)
266         408 STORE_FAST               9 (f)
267         410 LOAD_FAST                9 (f)
            412 LOAD_METHOD             24 (write)
            414 LOAD_CONST              21 ('export PYTHON_BIN_PATH="{}"')
            416 LOAD_METHOD              2 (format)
            418 LOAD_FAST                3 (python_bin_path)
            420 CALL_METHOD              1
            422 CALL_METHOD              1
            424 POP_TOP
            426 POP_BLOCK
            428 BEGIN_FINALLY
        >>  430 WITH_CLEANUP_START
            432 WITH_CLEANUP_FINISH
            434 END_FINALLY
            436 LOAD_CONST              22 (None)
            438 RETURN_VALUE
Disassembly of <code object reset_tf_configure_bazelrc at 0x1102d4030, file "<dis>", line 270>:
272           0 LOAD_GLOBAL              0 (open)
              2 LOAD_GLOBAL              1 (_TF_BAZELRC)
              4 LOAD_CONST               1 ('w')
              6 CALL_FUNCTION            2
              8 LOAD_METHOD              2 (close)
             10 CALL_METHOD              0
             12 POP_TOP
             14 LOAD_CONST               2 (None)
             16 RETURN_VALUE
Disassembly of <code object cleanup_makefile at 0x1102d4190, file "<dis>", line 275>:
280           0 LOAD_GLOBAL              0 (os)
              2 LOAD_ATTR                1 (path)
              4 LOAD_METHOD              2 (join)
              6 LOAD_GLOBAL              3 (_TF_WORKSPACE_ROOT)
              8 LOAD_CONST               1 ('tensorflow')
281          10 LOAD_CONST               2 ('contrib')
             12 LOAD_CONST               3 ('makefile')
             14 LOAD_CONST               4 ('downloads')
280          16 CALL_METHOD              5
             18 STORE_FAST               0 (makefile_download_dir)
282          20 LOAD_GLOBAL              0 (os)
             22 LOAD_ATTR                1 (path)
             24 LOAD_METHOD              4 (isdir)
             26 LOAD_FAST                0 (makefile_download_dir)
             28 CALL_METHOD              1
             30 POP_JUMP_IF_FALSE       94
283          32 LOAD_GLOBAL              0 (os)
             34 LOAD_METHOD              5 (walk)
             36 LOAD_FAST                0 (makefile_download_dir)
             38 CALL_METHOD              1
             40 GET_ITER
        >>   42 FOR_ITER                50 (to 94)
             44 UNPACK_SEQUENCE          3
             46 STORE_FAST               1 (root)
             48 STORE_FAST               2 (_)
             50 STORE_FAST               3 (filenames)
284          52 LOAD_FAST                3 (filenames)
             54 GET_ITER
        >>   56 FOR_ITER                34 (to 92)
             58 STORE_FAST               4 (f)
285          60 LOAD_FAST                4 (f)
             62 LOAD_METHOD              6 (endswith)
             64 LOAD_CONST               5 ('BUILD')
             66 CALL_METHOD              1
             68 POP_JUMP_IF_FALSE       56
286          70 LOAD_GLOBAL              0 (os)
             72 LOAD_METHOD              7 (remove)
             74 LOAD_GLOBAL              0 (os)
             76 LOAD_ATTR                1 (path)
             78 LOAD_METHOD              2 (join)
             80 LOAD_FAST                1 (root)
             82 LOAD_FAST                4 (f)
             84 CALL_METHOD              2
             86 CALL_METHOD              1
             88 POP_TOP
             90 JUMP_ABSOLUTE           56
        >>   92 JUMP_ABSOLUTE           42
        >>   94 LOAD_CONST               6 (None)
             96 RETURN_VALUE
Disassembly of <code object get_var at 0x1102d43a0, file "<dis>", line 289>:
320           0 LOAD_FAST                4 (question)
              2 POP_JUMP_IF_TRUE        14
321           4 LOAD_CONST               1 ('Do you wish to build TensorFlow with {} support?')
              6 LOAD_METHOD              0 (format)
322           8 LOAD_FAST                2 (query_item)
321          10 CALL_METHOD              1
             12 STORE_FAST               4 (question)
323     >>   14 LOAD_FAST                5 (yes_reply)
             16 POP_JUMP_IF_TRUE        28
324          18 LOAD_CONST               2 ('{} support will be enabled for TensorFlow.')
             20 LOAD_METHOD              0 (format)
             22 LOAD_FAST                2 (query_item)
             24 CALL_METHOD              1
             26 STORE_FAST               5 (yes_reply)
325     >>   28 LOAD_FAST                6 (no_reply)
             30 POP_JUMP_IF_TRUE        42
326          32 LOAD_CONST               3 ('No {}')
             34 LOAD_METHOD              0 (format)
             36 LOAD_FAST                5 (yes_reply)
             38 CALL_METHOD              1
             40 STORE_FAST               6 (no_reply)
328     >>   42 LOAD_FAST                5 (yes_reply)
             44 LOAD_CONST               4 ('\n')
             46 INPLACE_ADD
             48 STORE_FAST               5 (yes_reply)
329          50 LOAD_FAST                6 (no_reply)
             52 LOAD_CONST               4 ('\n')
             54 INPLACE_ADD
             56 STORE_FAST               6 (no_reply)
331          58 LOAD_FAST                3 (enabled_by_default)
             60 POP_JUMP_IF_FALSE       72
332          62 LOAD_FAST                4 (question)
             64 LOAD_CONST               5 (' [Y/n]: ')
             66 INPLACE_ADD
             68 STORE_FAST               4 (question)
             70 JUMP_FORWARD             8 (to 80)
334     >>   72 LOAD_FAST                4 (question)
             74 LOAD_CONST               6 (' [y/N]: ')
             76 INPLACE_ADD
             78 STORE_FAST               4 (question)
336     >>   80 LOAD_FAST                0 (environ_cp)
             82 LOAD_METHOD              1 (get)
             84 LOAD_FAST                1 (var_name)
             86 CALL_METHOD              1
             88 STORE_FAST               7 (var)
337          90 LOAD_FAST                7 (var)
             92 LOAD_CONST               7 (None)
             94 COMPARE_OP               9 (is not)
             96 POP_JUMP_IF_FALSE      178
338          98 LOAD_FAST                7 (var)
            100 LOAD_METHOD              2 (strip)
            102 CALL_METHOD              0
            104 LOAD_METHOD              3 (lower)
            106 CALL_METHOD              0
            108 STORE_FAST               8 (var_content)
339         110 LOAD_CONST               8 (('1', 't', 'true', 'y', 'yes'))
            112 STORE_FAST               9 (true_strings)
340         114 LOAD_CONST               9 (('0', 'f', 'false', 'n', 'no'))
            116 STORE_FAST              10 (false_strings)
341         118 LOAD_FAST                8 (var_content)
            120 LOAD_FAST                9 (true_strings)
            122 COMPARE_OP               6 (in)
            124 POP_JUMP_IF_FALSE      132
342         126 LOAD_CONST              10 (True)
            128 STORE_FAST               7 (var)
            130 JUMP_FORWARD            46 (to 178)
343     >>  132 LOAD_FAST                8 (var_content)
            134 LOAD_FAST               10 (false_strings)
            136 COMPARE_OP               6 (in)
            138 POP_JUMP_IF_FALSE      146
344         140 LOAD_CONST              11 (False)
            142 STORE_FAST               7 (var)
            144 JUMP_FORWARD            32 (to 178)
346     >>  146 LOAD_GLOBAL              4 (UserInputError)
347         148 LOAD_CONST              12 ('Environment variable %s must be set as a boolean indicator.\nThe following are accepted as TRUE : %s.\nThe following are accepted as FALSE: %s.\nCurrent value is %s.')
351         150 LOAD_FAST                1 (var_name)
            152 LOAD_CONST              13 (', ')
            154 LOAD_METHOD              5 (join)
            156 LOAD_FAST                9 (true_strings)
            158 CALL_METHOD              1
            160 LOAD_CONST              13 (', ')
            162 LOAD_METHOD              5 (join)
            164 LOAD_FAST               10 (false_strings)
            166 CALL_METHOD              1
            168 LOAD_FAST                7 (var)
            170 BUILD_TUPLE              4
347         172 BINARY_MODULO
346         174 CALL_FUNCTION            1
            176 RAISE_VARARGS            1
353     >>  178 LOAD_FAST                7 (var)
            180 LOAD_CONST               7 (None)
            182 COMPARE_OP               8 (is)
            184 EXTENDED_ARG             1
            186 POP_JUMP_IF_FALSE      308
354         188 LOAD_GLOBAL              6 (get_input)
            190 LOAD_FAST                4 (question)
            192 CALL_FUNCTION            1
            194 STORE_FAST              11 (user_input_origin)
355         196 LOAD_FAST               11 (user_input_origin)
            198 LOAD_METHOD              2 (strip)
            200 CALL_METHOD              0
            202 LOAD_METHOD              3 (lower)
            204 CALL_METHOD              0
            206 STORE_FAST              12 (user_input)
356         208 LOAD_FAST               12 (user_input)
            210 LOAD_CONST              14 ('y')
            212 COMPARE_OP               2 (==)
            214 POP_JUMP_IF_FALSE      230
357         216 LOAD_GLOBAL              7 (print)
            218 LOAD_FAST                5 (yes_reply)
            220 CALL_FUNCTION            1
            222 POP_TOP
358         224 LOAD_CONST              10 (True)
            226 STORE_FAST               7 (var)
            228 JUMP_ABSOLUTE          178
359     >>  230 LOAD_FAST               12 (user_input)
            232 LOAD_CONST              15 ('n')
            234 COMPARE_OP               2 (==)
            236 POP_JUMP_IF_FALSE      252
360         238 LOAD_GLOBAL              7 (print)
            240 LOAD_FAST                6 (no_reply)
            242 CALL_FUNCTION            1
            244 POP_TOP
361         246 LOAD_CONST              11 (False)
            248 STORE_FAST               7 (var)
            250 JUMP_ABSOLUTE          178
362     >>  252 LOAD_FAST               12 (user_input)
            254 EXTENDED_ARG             1
            256 POP_JUMP_IF_TRUE       292
363         258 LOAD_FAST                3 (enabled_by_default)
            260 EXTENDED_ARG             1
            262 POP_JUMP_IF_FALSE      278
364         264 LOAD_GLOBAL              7 (print)
            266 LOAD_FAST                5 (yes_reply)
            268 CALL_FUNCTION            1
            270 POP_TOP
365         272 LOAD_CONST              10 (True)
            274 STORE_FAST               7 (var)
            276 JUMP_FORWARD            12 (to 290)
367     >>  278 LOAD_GLOBAL              7 (print)
            280 LOAD_FAST                6 (no_reply)
            282 CALL_FUNCTION            1
            284 POP_TOP
368         286 LOAD_CONST              11 (False)
            288 STORE_FAST               7 (var)
        >>  290 JUMP_ABSOLUTE          178
370     >>  292 LOAD_GLOBAL              7 (print)
            294 LOAD_CONST              16 ('Invalid selection: {}')
            296 LOAD_METHOD              0 (format)
            298 LOAD_FAST               11 (user_input_origin)
            300 CALL_METHOD              1
            302 CALL_FUNCTION            1
            304 POP_TOP
            306 JUMP_ABSOLUTE          178
371     >>  308 LOAD_FAST                7 (var)
            310 RETURN_VALUE
Disassembly of <code object set_build_var at 0x1102d42f0, file "<dis>", line 374>:
395           0 LOAD_GLOBAL              0 (str)
              2 LOAD_GLOBAL              1 (int)
              4 LOAD_GLOBAL              2 (get_var)
              6 LOAD_FAST                0 (environ_cp)
              8 LOAD_FAST                1 (var_name)
             10 LOAD_FAST                2 (query_item)
             12 LOAD_FAST                4 (enabled_by_default)
             14 CALL_FUNCTION            4
             16 CALL_FUNCTION            1
             18 CALL_FUNCTION            1
             20 STORE_FAST               6 (var)
396          22 LOAD_FAST                6 (var)
             24 LOAD_FAST                0 (environ_cp)
             26 LOAD_FAST                1 (var_name)
             28 STORE_SUBSCR
397          30 LOAD_FAST                6 (var)
             32 LOAD_CONST               1 ('1')
             34 COMPARE_OP               2 (==)
             36 POP_JUMP_IF_FALSE       68
398          38 LOAD_GLOBAL              3 (write_to_bazelrc)
             40 LOAD_CONST               2 ('build:%s --define %s=true')
399          42 LOAD_FAST                5 (bazel_config_name)
             44 LOAD_FAST                3 (option_name)
             46 BUILD_TUPLE              2
398          48 BINARY_MODULO
             50 CALL_FUNCTION            1
             52 POP_TOP
400          54 LOAD_GLOBAL              3 (write_to_bazelrc)
             56 LOAD_CONST               3 ('build --config=%s')
             58 LOAD_FAST                5 (bazel_config_name)
             60 BINARY_MODULO
             62 CALL_FUNCTION            1
             64 POP_TOP
             66 JUMP_FORWARD            24 (to 92)
401     >>   68 LOAD_FAST                5 (bazel_config_name)
             70 LOAD_CONST               4 (None)
             72 COMPARE_OP               9 (is not)
             74 POP_JUMP_IF_FALSE       92
404          76 LOAD_GLOBAL              3 (write_to_bazelrc)
             78 LOAD_CONST               2 ('build:%s --define %s=true')
405          80 LOAD_FAST                5 (bazel_config_name)
             82 LOAD_FAST                3 (option_name)
             84 BUILD_TUPLE              2
404          86 BINARY_MODULO
             88 CALL_FUNCTION            1
             90 POP_TOP
        >>   92 LOAD_CONST               4 (None)
             94 RETURN_VALUE
Disassembly of <code object set_action_env_var at 0x1102d4450, file "<dis>", line 408>:
432           0 LOAD_GLOBAL              0 (int)
433           2 LOAD_GLOBAL              1 (get_var)
              4 LOAD_FAST                0 (environ_cp)
              6 LOAD_FAST                1 (var_name)
              8 LOAD_FAST                2 (query_item)
             10 LOAD_FAST                3 (enabled_by_default)
             12 LOAD_FAST                4 (question)
434          14 LOAD_FAST                5 (yes_reply)
             16 LOAD_FAST                6 (no_reply)
433          18 CALL_FUNCTION            7
432          20 CALL_FUNCTION            1
             22 STORE_FAST               8 (var)
436          24 LOAD_FAST                7 (bazel_config_name)
             26 POP_JUMP_IF_TRUE        40
437          28 LOAD_GLOBAL              2 (write_action_env_to_bazelrc)
             30 LOAD_FAST                1 (var_name)
             32 LOAD_FAST                8 (var)
             34 CALL_FUNCTION            2
             36 POP_TOP
             38 JUMP_FORWARD            16 (to 56)
438     >>   40 LOAD_FAST                8 (var)
             42 POP_JUMP_IF_FALSE       56
439          44 LOAD_GLOBAL              3 (write_to_bazelrc)
             46 LOAD_CONST               1 ('build --config=%s')
             48 LOAD_FAST                7 (bazel_config_name)
             50 BINARY_MODULO
             52 CALL_FUNCTION            1
             54 POP_TOP
440     >>   56 LOAD_GLOBAL              4 (str)
             58 LOAD_FAST                8 (var)
             60 CALL_FUNCTION            1
             62 LOAD_FAST                0 (environ_cp)
             64 LOAD_FAST                1 (var_name)
             66 STORE_SUBSCR
             68 LOAD_CONST               2 (None)
             70 RETURN_VALUE
Disassembly of <code object convert_version_to_int at 0x1102d4660, file "<dis>", line 443>:
455           0 LOAD_FAST                0 (version)
              2 LOAD_METHOD              0 (split)
              4 LOAD_CONST               1 ('-')
              6 CALL_METHOD              1
              8 LOAD_CONST               2 (0)
             10 BINARY_SUBSCR
             12 STORE_FAST               0 (version)
456          14 LOAD_FAST                0 (version)
             16 LOAD_METHOD              0 (split)
             18 LOAD_CONST               3 ('.')
             20 CALL_METHOD              1
             22 STORE_FAST               1 (version_segments)
458          24 LOAD_GLOBAL              1 (len)
             26 LOAD_FAST                1 (version_segments)
             28 CALL_FUNCTION            1
             30 LOAD_CONST               4 (2)
             32 COMPARE_OP               2 (==)
             34 POP_JUMP_IF_FALSE       46
459          36 LOAD_FAST                1 (version_segments)
             38 LOAD_METHOD              2 (append)
             40 LOAD_CONST               5 ('0')
             42 CALL_METHOD              1
             44 POP_TOP
460     >>   46 LOAD_FAST                1 (version_segments)
             48 GET_ITER
        >>   50 FOR_ITER                18 (to 70)
             52 STORE_FAST               2 (seg)
461          54 LOAD_FAST                2 (seg)
             56 LOAD_METHOD              3 (isdigit)
             58 CALL_METHOD              0
             60 POP_JUMP_IF_TRUE        50
462          62 POP_TOP
             64 LOAD_CONST               6 (None)
             66 RETURN_VALUE
             68 JUMP_ABSOLUTE           50
464     >>   70 LOAD_CONST               7 ('')
             72 LOAD_METHOD              4 (join)
             74 LOAD_CONST               8 (<code object <listcomp> at 0x1102d45b0, file "<dis>", line 464>)
             76 LOAD_CONST               9 ('convert_version_to_int.<locals>.<listcomp>')
             78 MAKE_FUNCTION            0
             80 LOAD_FAST                1 (version_segments)
             82 GET_ITER
             84 CALL_FUNCTION            1
             86 CALL_METHOD              1
             88 STORE_FAST               3 (version_str)
465          90 LOAD_GLOBAL              5 (int)
             92 LOAD_FAST                3 (version_str)
             94 CALL_FUNCTION            1
             96 RETURN_VALUE
Disassembly of <code object <listcomp> at 0x1102d45b0, file "<dis>", line 464>:
464           0 BUILD_LIST               0
              2 LOAD_FAST                0 (.0)
        >>    4 FOR_ITER                16 (to 22)
              6 STORE_FAST               1 (seg)
              8 LOAD_CONST               0 ('%03d')
             10 LOAD_GLOBAL              0 (int)
             12 LOAD_FAST                1 (seg)
             14 CALL_FUNCTION            1
             16 BINARY_MODULO
             18 LIST_APPEND              2
             20 JUMP_ABSOLUTE            4
        >>   22 RETURN_VALUE
Disassembly of <code object check_bazel_version at 0x1102d4710, file "<dis>", line 468>:
478           0 LOAD_GLOBAL              0 (which)
              2 LOAD_CONST               1 ('bazel')
              4 CALL_FUNCTION            1
              6 STORE_FAST               2 (bazel_executable)
479           8 LOAD_FAST                2 (bazel_executable)
             10 LOAD_CONST               2 (None)
             12 COMPARE_OP               8 (is)
             14 POP_JUMP_IF_FALSE       34
480          16 LOAD_GLOBAL              1 (print)
             18 LOAD_CONST               3 ('Cannot find bazel. Please install bazel.')
             20 CALL_FUNCTION            1
             22 POP_TOP
481          24 LOAD_GLOBAL              2 (sys)
             26 LOAD_METHOD              3 (exit)
             28 LOAD_CONST               4 (1)
             30 CALL_METHOD              1
             32 POP_TOP
483     >>   34 LOAD_GLOBAL              4 (open)
             36 LOAD_GLOBAL              5 (os)
             38 LOAD_ATTR                6 (devnull)
             40 LOAD_CONST               5 ('wb')
             42 CALL_FUNCTION            2
             44 STORE_FAST               3 (stderr)
484          46 LOAD_GLOBAL              7 (run_shell)
             48 LOAD_FAST                2 (bazel_executable)
             50 LOAD_CONST               6 ('--version')
             52 BUILD_LIST               2
485          54 LOAD_CONST               7 (True)
486          56 LOAD_FAST                3 (stderr)
484          58 LOAD_CONST               8 (('allow_non_zero', 'stderr'))
             60 CALL_FUNCTION_KW         3
             62 STORE_FAST               4 (curr_version)
487          64 LOAD_FAST                4 (curr_version)
             66 LOAD_METHOD              8 (startswith)
             68 LOAD_CONST               9 ('bazel ')
             70 CALL_METHOD              1
             72 POP_JUMP_IF_FALSE       88
488          74 LOAD_FAST                4 (curr_version)
             76 LOAD_METHOD              9 (split)
             78 LOAD_CONST               9 ('bazel ')
             80 CALL_METHOD              1
             82 LOAD_CONST               4 (1)
             84 BINARY_SUBSCR
             86 STORE_FAST               4 (curr_version)
490     >>   88 LOAD_GLOBAL             10 (convert_version_to_int)
             90 LOAD_FAST                0 (min_version)
             92 CALL_FUNCTION            1
             94 STORE_FAST               5 (min_version_int)
491          96 LOAD_GLOBAL             10 (convert_version_to_int)
             98 LOAD_FAST                4 (curr_version)
            100 CALL_FUNCTION            1
            102 STORE_FAST               6 (curr_version_int)
492         104 LOAD_GLOBAL             10 (convert_version_to_int)
            106 LOAD_FAST                1 (max_version)
            108 CALL_FUNCTION            1
            110 STORE_FAST               7 (max_version_int)
495         112 LOAD_FAST                6 (curr_version_int)
            114 POP_JUMP_IF_TRUE       140
496         116 LOAD_GLOBAL              1 (print)
            118 LOAD_CONST              10 ('WARNING: current bazel installation is not a release version.')
            120 CALL_FUNCTION            1
            122 POP_TOP
497         124 LOAD_GLOBAL              1 (print)
            126 LOAD_CONST              11 ('Make sure you are running at least bazel %s')
            128 LOAD_FAST                0 (min_version)
            130 BINARY_MODULO
            132 CALL_FUNCTION            1
            134 POP_TOP
498         136 LOAD_FAST                4 (curr_version)
            138 RETURN_VALUE
500     >>  140 LOAD_GLOBAL              1 (print)
            142 LOAD_CONST              12 ('You have bazel %s installed.')
            144 LOAD_FAST                4 (curr_version)
            146 BINARY_MODULO
            148 CALL_FUNCTION            1
            150 POP_TOP
502         152 LOAD_FAST                6 (curr_version_int)
            154 LOAD_FAST                5 (min_version_int)
            156 COMPARE_OP               0 (<)
            158 POP_JUMP_IF_FALSE      182
503         160 LOAD_GLOBAL              1 (print)
            162 LOAD_CONST              13 ('Please upgrade your bazel installation to version %s or higher to build TensorFlow!')
504         164 LOAD_FAST                0 (min_version)
503         166 BINARY_MODULO
            168 CALL_FUNCTION            1
            170 POP_TOP
505         172 LOAD_GLOBAL              2 (sys)
            174 LOAD_METHOD              3 (exit)
            176 LOAD_CONST               4 (1)
            178 CALL_METHOD              1
            180 POP_TOP
506     >>  182 LOAD_FAST                6 (curr_version_int)
            184 LOAD_FAST                7 (max_version_int)
            186 COMPARE_OP               4 (>)
            188 POP_JUMP_IF_FALSE      222
507         190 LOAD_CONST              14 ('TF_IGNORE_MAX_BAZEL_VERSION')
            192 LOAD_GLOBAL              5 (os)
            194 LOAD_ATTR               11 (environ)
            196 COMPARE_OP               7 (not in)
506         198 POP_JUMP_IF_FALSE      222
508         200 LOAD_GLOBAL              1 (print)
            202 LOAD_CONST              15 ('Please downgrade your bazel installation to version %s or lower to build TensorFlow! To downgrade: download the installer for the old version (from https://github.com/bazelbuild/bazel/releases) then run the installer.')
511         204 LOAD_FAST                1 (max_version)
508         206 BINARY_MODULO
            208 CALL_FUNCTION            1
            210 POP_TOP
512         212 LOAD_GLOBAL              2 (sys)
            214 LOAD_METHOD              3 (exit)
            216 LOAD_CONST               4 (1)
            218 CALL_METHOD              1
            220 POP_TOP
513     >>  222 LOAD_FAST                4 (curr_version)
            224 RETURN_VALUE
Disassembly of <code object set_cc_opt_flags at 0x1102d47c0, file "<dis>", line 516>:
524           0 LOAD_GLOBAL              0 (is_ppc64le)
              2 CALL_FUNCTION            0
              4 POP_JUMP_IF_FALSE       12
526           6 LOAD_CONST               1 ('-mcpu=native')
              8 STORE_FAST               1 (default_cc_opt_flags)
             10 JUMP_FORWARD            16 (to 28)
527     >>   12 LOAD_GLOBAL              1 (is_windows)
             14 CALL_FUNCTION            0
             16 POP_JUMP_IF_FALSE       24
528          18 LOAD_CONST               2 ('/arch:AVX')
             20 STORE_FAST               1 (default_cc_opt_flags)
             22 JUMP_FORWARD             4 (to 28)
535     >>   24 LOAD_CONST               3 ('-Wno-sign-compare')
             26 STORE_FAST               1 (default_cc_opt_flags)
536     >>   28 LOAD_CONST               4 ('Please specify optimization flags to use during compilation when bazel option "--config=opt" is specified [Default is %s]: ')
538          30 LOAD_FAST                1 (default_cc_opt_flags)
536          32 BINARY_MODULO
             34 STORE_FAST               2 (question)
539          36 LOAD_GLOBAL              2 (get_from_env_or_user_or_default)
             38 LOAD_FAST                0 (environ_cp)
             40 LOAD_CONST               5 ('CC_OPT_FLAGS')
540          42 LOAD_FAST                2 (question)
             44 LOAD_FAST                1 (default_cc_opt_flags)
539          46 CALL_FUNCTION            4
             48 STORE_FAST               3 (cc_opt_flags)
541          50 LOAD_FAST                3 (cc_opt_flags)
             52 LOAD_METHOD              3 (split)
             54 CALL_METHOD              0
             56 GET_ITER
        >>   58 FOR_ITER                28 (to 88)
             60 STORE_FAST               4 (opt)
542          62 LOAD_GLOBAL              4 (write_to_bazelrc)
             64 LOAD_CONST               6 ('build:opt --copt=%s')
             66 LOAD_FAST                4 (opt)
             68 BINARY_MODULO
             70 CALL_FUNCTION            1
             72 POP_TOP
543          74 LOAD_GLOBAL              4 (write_to_bazelrc)
             76 LOAD_CONST               7 ('build:opt --host_copt=%s')
             78 LOAD_FAST                4 (opt)
             80 BINARY_MODULO
             82 CALL_FUNCTION            1
             84 POP_TOP
             86 JUMP_ABSOLUTE           58
        >>   88 LOAD_CONST               8 (None)
             90 RETURN_VALUE
Disassembly of <code object set_tf_cuda_clang at 0x1102d4870, file "<dis>", line 546>:
552           0 LOAD_CONST               1 ('Do you want to use clang as CUDA compiler?')
              2 STORE_FAST               1 (question)
553           4 LOAD_CONST               2 ('Clang will be used as CUDA compiler.')
              6 STORE_FAST               2 (yes_reply)
554           8 LOAD_CONST               3 ('nvcc will be used as CUDA compiler.')
             10 STORE_FAST               3 (no_reply)
555          12 LOAD_GLOBAL              0 (set_action_env_var)
556          14 LOAD_FAST                0 (environ_cp)
557          16 LOAD_CONST               4 ('TF_CUDA_CLANG')
558          18 LOAD_CONST               5 (None)
559          20 LOAD_CONST               6 (False)
560          22 LOAD_FAST                1 (question)
561          24 LOAD_FAST                2 (yes_reply)
562          26 LOAD_FAST                3 (no_reply)
563          28 LOAD_CONST               7 ('cuda_clang')
555          30 LOAD_CONST               8 (('question', 'yes_reply', 'no_reply', 'bazel_config_name'))
             32 CALL_FUNCTION_KW         8
             34 POP_TOP
             36 LOAD_CONST               5 (None)
             38 RETURN_VALUE
Disassembly of <code object set_tf_download_clang at 0x1102d4920, file "<dis>", line 566>:
568           0 LOAD_CONST               1 ('Do you wish to download a fresh release of clang? (Experimental)')
              2 STORE_FAST               1 (question)
569           4 LOAD_CONST               2 ('Clang will be downloaded and used to compile tensorflow.')
              6 STORE_FAST               2 (yes_reply)
570           8 LOAD_CONST               3 ('Clang will not be downloaded.')
             10 STORE_FAST               3 (no_reply)
571          12 LOAD_GLOBAL              0 (set_action_env_var)
572          14 LOAD_FAST                0 (environ_cp)
573          16 LOAD_CONST               4 ('TF_DOWNLOAD_CLANG')
574          18 LOAD_CONST               5 (None)
575          20 LOAD_CONST               6 (False)
576          22 LOAD_FAST                1 (question)
577          24 LOAD_FAST                2 (yes_reply)
578          26 LOAD_FAST                3 (no_reply)
579          28 LOAD_CONST               7 ('download_clang')
571          30 LOAD_CONST               8 (('question', 'yes_reply', 'no_reply', 'bazel_config_name'))
             32 CALL_FUNCTION_KW         8
             34 POP_TOP
             36 LOAD_CONST               5 (None)
             38 RETURN_VALUE
Disassembly of <code object get_from_env_or_user_or_default at 0x1102d49d0, file "<dis>", line 582>:
598           0 LOAD_FAST                0 (environ_cp)
              2 LOAD_METHOD              0 (get)
              4 LOAD_FAST                1 (var_name)
              6 CALL_METHOD              1
              8 STORE_FAST               4 (var)
599          10 LOAD_FAST                4 (var)
             12 POP_JUMP_IF_TRUE        30
600          14 LOAD_GLOBAL              1 (get_input)
             16 LOAD_FAST                2 (ask_for_var)
             18 CALL_FUNCTION            1
             20 STORE_FAST               4 (var)
601          22 LOAD_GLOBAL              2 (print)
             24 LOAD_CONST               1 ('\n')
             26 CALL_FUNCTION            1
             28 POP_TOP
602     >>   30 LOAD_FAST                4 (var)
             32 POP_JUMP_IF_TRUE        38
603          34 LOAD_FAST                3 (var_default)
             36 STORE_FAST               4 (var)
604     >>   38 LOAD_FAST                4 (var)
             40 RETURN_VALUE
Disassembly of <code object set_clang_cuda_compiler_path at 0x1102d4a80, file "<dis>", line 607>:
609           0 LOAD_GLOBAL              0 (which)
              2 LOAD_CONST               1 ('clang')
              4 CALL_FUNCTION            1
              6 JUMP_IF_TRUE_OR_POP     10
              8 LOAD_CONST               2 ('')
        >>   10 STORE_FAST               1 (default_clang_path)
610          12 LOAD_CONST               3 ('Please specify which clang should be used as device and host compiler. [Default is %s]: ')
611          14 LOAD_FAST                1 (default_clang_path)
610          16 BINARY_MODULO
             18 STORE_FAST               2 (ask_clang_path)
614     >>   20 LOAD_GLOBAL              1 (get_from_env_or_user_or_default)
615          22 LOAD_FAST                0 (environ_cp)
             24 LOAD_CONST               4 ('CLANG_CUDA_COMPILER_PATH')
             26 LOAD_FAST                2 (ask_clang_path)
616          28 LOAD_FAST                1 (default_clang_path)
614          30 CALL_FUNCTION            4
             32 STORE_FAST               3 (clang_cuda_compiler_path)
617          34 LOAD_GLOBAL              2 (os)
             36 LOAD_ATTR                3 (path)
             38 LOAD_METHOD              4 (exists)
             40 LOAD_FAST                3 (clang_cuda_compiler_path)
             42 CALL_METHOD              1
             44 POP_JUMP_IF_FALSE       48
618          46 JUMP_ABSOLUTE           70
621     >>   48 LOAD_GLOBAL              5 (print)
             50 LOAD_CONST               5 ('Invalid clang path: %s cannot be found.')
             52 LOAD_FAST                3 (clang_cuda_compiler_path)
             54 BINARY_MODULO
             56 CALL_FUNCTION            1
             58 POP_TOP
622          60 LOAD_CONST               2 ('')
             62 LOAD_FAST                0 (environ_cp)
             64 LOAD_CONST               4 ('CLANG_CUDA_COMPILER_PATH')
             66 STORE_SUBSCR
             68 JUMP_ABSOLUTE           20
625     >>   70 LOAD_FAST                3 (clang_cuda_compiler_path)
             72 LOAD_FAST                0 (environ_cp)
             74 LOAD_CONST               4 ('CLANG_CUDA_COMPILER_PATH')
             76 STORE_SUBSCR
626          78 LOAD_GLOBAL              6 (write_action_env_to_bazelrc)
             80 LOAD_CONST               4 ('CLANG_CUDA_COMPILER_PATH')
627          82 LOAD_FAST                3 (clang_cuda_compiler_path)
626          84 CALL_FUNCTION            2
             86 POP_TOP
             88 LOAD_CONST               6 (None)
             90 RETURN_VALUE
Disassembly of <code object prompt_loop_or_load_from_env at 0x1102d4b30, file "<dis>", line 630>:
671           0 LOAD_FAST                0 (environ_cp)
              2 LOAD_METHOD              0 (get)
              4 LOAD_FAST                1 (var_name)
              6 CALL_METHOD              1
              8 JUMP_IF_TRUE_OR_POP     12
             10 LOAD_FAST                2 (var_default)
        >>   12 STORE_FAST               9 (default)
672          14 LOAD_CONST               1 ('%s [Default is %s]: ')
673          16 LOAD_FAST                3 (ask_for_var)
674          18 LOAD_FAST                9 (default)
672          20 BUILD_TUPLE              2
             22 BINARY_MODULO
             24 STORE_FAST              10 (full_query)
677          26 LOAD_GLOBAL              1 (range)
             28 LOAD_FAST                8 (n_ask_attempts)
             30 CALL_FUNCTION            1
             32 GET_ITER
        >>   34 FOR_ITER                54 (to 90)
             36 STORE_FAST              11 (_)
678          38 LOAD_GLOBAL              2 (get_from_env_or_user_or_default)
             40 LOAD_FAST                0 (environ_cp)
             42 LOAD_FAST                1 (var_name)
             44 LOAD_FAST               10 (full_query)
679          46 LOAD_FAST                9 (default)
678          48 CALL_FUNCTION            4
             50 STORE_FAST              12 (val)
680          52 LOAD_FAST                4 (check_success)
             54 LOAD_FAST               12 (val)
             56 CALL_FUNCTION            1
             58 POP_JUMP_IF_FALSE       64
681          60 POP_TOP
             62 JUMP_ABSOLUTE          106
682     >>   64 LOAD_FAST                6 (suppress_default_error)
             66 POP_JUMP_IF_TRUE        80
683          68 LOAD_GLOBAL              3 (print)
             70 LOAD_FAST                5 (error_msg)
             72 LOAD_FAST               12 (val)
             74 BINARY_MODULO
             76 CALL_FUNCTION            1
             78 POP_TOP
684     >>   80 LOAD_CONST               2 ('')
             82 LOAD_FAST                0 (environ_cp)
             84 LOAD_FAST                1 (var_name)
             86 STORE_SUBSCR
             88 JUMP_ABSOLUTE           34
686     >>   90 LOAD_GLOBAL              4 (UserInputError)
             92 LOAD_CONST               3 ('Invalid %s setting was provided %d times in a row. Assuming to be a scripting mistake.')
688          94 LOAD_FAST                1 (var_name)
             96 LOAD_FAST                8 (n_ask_attempts)
             98 BUILD_TUPLE              2
686         100 BINARY_MODULO
            102 CALL_FUNCTION            1
            104 RAISE_VARARGS            1
690     >>  106 LOAD_FAST                7 (resolve_symlinks)
            108 POP_JUMP_IF_FALSE      134
            110 LOAD_GLOBAL              5 (os)
            112 LOAD_ATTR                6 (path)
            114 LOAD_METHOD              7 (islink)
            116 LOAD_FAST               12 (val)
            118 CALL_METHOD              1
            120 POP_JUMP_IF_FALSE      134
691         122 LOAD_GLOBAL              5 (os)
            124 LOAD_ATTR                6 (path)
            126 LOAD_METHOD              8 (realpath)
            128 LOAD_FAST               12 (val)
            130 CALL_METHOD              1
            132 STORE_FAST              12 (val)
692     >>  134 LOAD_FAST               12 (val)
            136 LOAD_FAST                0 (environ_cp)
            138 LOAD_FAST                1 (var_name)
            140 STORE_SUBSCR
693         142 LOAD_FAST               12 (val)
            144 RETURN_VALUE
Disassembly of <code object create_android_ndk_rule at 0x1102d4df0, file "<dis>", line 696>:
698           0 LOAD_GLOBAL              0 (is_windows)
              2 CALL_FUNCTION            0
              4 POP_JUMP_IF_TRUE        12
              6 LOAD_GLOBAL              1 (is_cygwin)
              8 CALL_FUNCTION            0
             10 POP_JUMP_IF_FALSE       30
699     >>   12 LOAD_GLOBAL              2 (cygpath)
             14 LOAD_CONST               1 ('%s/Android/Sdk/ndk-bundle')
700          16 LOAD_FAST                0 (environ_cp)
             18 LOAD_CONST               2 ('APPDATA')
             20 BINARY_SUBSCR
699          22 BINARY_MODULO
             24 CALL_FUNCTION            1
             26 STORE_FAST               1 (default_ndk_path)
             28 JUMP_FORWARD            32 (to 62)
701     >>   30 LOAD_GLOBAL              3 (is_macos)
             32 CALL_FUNCTION            0
             34 POP_JUMP_IF_FALSE       50
702          36 LOAD_CONST               3 ('%s/library/Android/Sdk/ndk-bundle')
             38 LOAD_FAST                0 (environ_cp)
             40 LOAD_CONST               4 ('HOME')
             42 BINARY_SUBSCR
             44 BINARY_MODULO
             46 STORE_FAST               1 (default_ndk_path)
             48 JUMP_FORWARD            12 (to 62)
704     >>   50 LOAD_CONST               1 ('%s/Android/Sdk/ndk-bundle')
             52 LOAD_FAST                0 (environ_cp)
             54 LOAD_CONST               4 ('HOME')
             56 BINARY_SUBSCR
             58 BINARY_MODULO
             60 STORE_FAST               1 (default_ndk_path)
706     >>   62 LOAD_CONST               5 (<code object valid_ndk_path at 0x1102d4c90, file "<dis>", line 706>)
             64 LOAD_CONST               6 ('create_android_ndk_rule.<locals>.valid_ndk_path')
             66 MAKE_FUNCTION            0
             68 STORE_FAST               2 (valid_ndk_path)
710          70 LOAD_GLOBAL              4 (prompt_loop_or_load_from_env)
711          72 LOAD_FAST                0 (environ_cp)
712          74 LOAD_CONST               7 ('ANDROID_NDK_HOME')
713          76 LOAD_FAST                1 (default_ndk_path)
714          78 LOAD_CONST               8 ('Please specify the home path of the Android NDK to use.')
715          80 LOAD_FAST                2 (valid_ndk_path)
716          82 LOAD_CONST               9 ('The path %s or its child file "source.properties" does not exist.')
710          84 LOAD_CONST              10 (('var_name', 'var_default', 'ask_for_var', 'check_success', 'error_msg'))
             86 CALL_FUNCTION_KW         6
             88 STORE_FAST               3 (android_ndk_home_path)
718          90 LOAD_GLOBAL              5 (write_action_env_to_bazelrc)
             92 LOAD_CONST               7 ('ANDROID_NDK_HOME')
             94 LOAD_FAST                3 (android_ndk_home_path)
             96 CALL_FUNCTION            2
             98 POP_TOP
719         100 LOAD_GLOBAL              5 (write_action_env_to_bazelrc)
720         102 LOAD_CONST              11 ('ANDROID_NDK_API_LEVEL')
721         104 LOAD_GLOBAL              6 (get_ndk_api_level)
            106 LOAD_FAST                0 (environ_cp)
            108 LOAD_FAST                3 (android_ndk_home_path)
            110 CALL_FUNCTION            2
719         112 CALL_FUNCTION            2
            114 POP_TOP
            116 LOAD_CONST              12 (None)
            118 RETURN_VALUE
Disassembly of <code object valid_ndk_path at 0x1102d4c90, file "<dis>", line 706>:
707           0 LOAD_GLOBAL              0 (os)
              2 LOAD_ATTR                1 (path)
              4 LOAD_METHOD              2 (exists)
              6 LOAD_FAST                0 (path)
              8 CALL_METHOD              1
             10 JUMP_IF_FALSE_OR_POP    32
708          12 LOAD_GLOBAL              0 (os)
             14 LOAD_ATTR                1 (path)
             16 LOAD_METHOD              2 (exists)
             18 LOAD_GLOBAL              0 (os)
             20 LOAD_ATTR                1 (path)
             22 LOAD_METHOD              3 (join)
             24 LOAD_FAST                0 (path)
             26 LOAD_CONST               1 ('source.properties')
             28 CALL_METHOD              2
             30 CALL_METHOD              1
707     >>   32 RETURN_VALUE
Disassembly of <code object create_android_sdk_rule at 0x1102d9190, file "<dis>", line 724>:
726           0 LOAD_GLOBAL              0 (is_windows)
              2 CALL_FUNCTION            0
              4 POP_JUMP_IF_TRUE        12
              6 LOAD_GLOBAL              1 (is_cygwin)
              8 CALL_FUNCTION            0
             10 POP_JUMP_IF_FALSE       30
727     >>   12 LOAD_GLOBAL              2 (cygpath)
             14 LOAD_CONST               1 ('%s/Android/Sdk')
             16 LOAD_FAST                0 (environ_cp)
             18 LOAD_CONST               2 ('APPDATA')
             20 BINARY_SUBSCR
             22 BINARY_MODULO
             24 CALL_FUNCTION            1
             26 STORE_FAST               1 (default_sdk_path)
             28 JUMP_FORWARD            32 (to 62)
728     >>   30 LOAD_GLOBAL              3 (is_macos)
             32 CALL_FUNCTION            0
             34 POP_JUMP_IF_FALSE       50
729          36 LOAD_CONST               3 ('%s/library/Android/Sdk')
             38 LOAD_FAST                0 (environ_cp)
             40 LOAD_CONST               4 ('HOME')
             42 BINARY_SUBSCR
             44 BINARY_MODULO
             46 STORE_FAST               1 (default_sdk_path)
             48 JUMP_FORWARD            12 (to 62)
731     >>   50 LOAD_CONST               1 ('%s/Android/Sdk')
             52 LOAD_FAST                0 (environ_cp)
             54 LOAD_CONST               4 ('HOME')
             56 BINARY_SUBSCR
             58 BINARY_MODULO
             60 STORE_FAST               1 (default_sdk_path)
733     >>   62 LOAD_CONST               5 (<code object valid_sdk_path at 0x1102d4ea0, file "<dis>", line 733>)
             64 LOAD_CONST               6 ('create_android_sdk_rule.<locals>.valid_sdk_path')
             66 MAKE_FUNCTION            0
             68 STORE_FAST               2 (valid_sdk_path)
738          70 LOAD_GLOBAL              4 (prompt_loop_or_load_from_env)
739          72 LOAD_FAST                0 (environ_cp)
740          74 LOAD_CONST               7 ('ANDROID_SDK_HOME')
741          76 LOAD_FAST                1 (default_sdk_path)
742          78 LOAD_CONST               8 ('Please specify the home path of the Android SDK to use.')
743          80 LOAD_FAST                2 (valid_sdk_path)
744          82 LOAD_CONST               9 ('Either %s does not exist, or it does not contain the subdirectories "platforms" and "build-tools".')
738          84 LOAD_CONST              10 (('var_name', 'var_default', 'ask_for_var', 'check_success', 'error_msg'))
             86 CALL_FUNCTION_KW         6
             88 STORE_DEREF              0 (android_sdk_home_path)
747          90 LOAD_GLOBAL              5 (os)
             92 LOAD_ATTR                6 (path)
             94 LOAD_METHOD              7 (join)
             96 LOAD_DEREF               0 (android_sdk_home_path)
             98 LOAD_CONST              11 ('platforms')
            100 CALL_METHOD              2
            102 STORE_FAST               3 (platforms)
748         104 LOAD_GLOBAL              8 (sorted)
            106 LOAD_GLOBAL              5 (os)
            108 LOAD_METHOD              9 (listdir)
            110 LOAD_FAST                3 (platforms)
            112 CALL_METHOD              1
            114 CALL_FUNCTION            1
            116 STORE_FAST               4 (api_levels)
749         118 LOAD_CONST              12 (<code object <listcomp> at 0x1102d4f50, file "<dis>", line 749>)
            120 LOAD_CONST              13 ('create_android_sdk_rule.<locals>.<listcomp>')
            122 MAKE_FUNCTION            0
            124 LOAD_FAST                4 (api_levels)
            126 GET_ITER
            128 CALL_FUNCTION            1
            130 STORE_FAST               4 (api_levels)
751         132 LOAD_CLOSURE             0 (android_sdk_home_path)
            134 BUILD_TUPLE              1
            136 LOAD_CONST              14 (<code object valid_api_level at 0x1102d9030, file "<dis>", line 751>)
            138 LOAD_CONST              15 ('create_android_sdk_rule.<locals>.valid_api_level')
            140 MAKE_FUNCTION            8 (closure)
            142 STORE_FAST               5 (valid_api_level)
756         144 LOAD_GLOBAL              4 (prompt_loop_or_load_from_env)
757         146 LOAD_FAST                0 (environ_cp)
758         148 LOAD_CONST              16 ('ANDROID_API_LEVEL')
759         150 LOAD_FAST                4 (api_levels)
            152 LOAD_CONST              17 (-1)
            154 BINARY_SUBSCR
760         156 LOAD_CONST              18 ('Please specify the Android SDK API level to use. [Available levels: %s]')
761         158 LOAD_FAST                4 (api_levels)
760         160 BINARY_MODULO
762         162 LOAD_FAST                5 (valid_api_level)
763         164 LOAD_CONST              19 ('Android-%s is not present in the SDK path.')
756         166 LOAD_CONST              10 (('var_name', 'var_default', 'ask_for_var', 'check_success', 'error_msg'))
            168 CALL_FUNCTION_KW         6
            170 STORE_FAST               6 (android_api_level)
765         172 LOAD_GLOBAL              5 (os)
            174 LOAD_ATTR                6 (path)
            176 LOAD_METHOD              7 (join)
            178 LOAD_DEREF               0 (android_sdk_home_path)
            180 LOAD_CONST              20 ('build-tools')
            182 CALL_METHOD              2
            184 STORE_FAST               7 (build_tools)
766         186 LOAD_GLOBAL              8 (sorted)
            188 LOAD_GLOBAL              5 (os)
            190 LOAD_METHOD              9 (listdir)
            192 LOAD_FAST                7 (build_tools)
            194 CALL_METHOD              1
            196 CALL_FUNCTION            1
            198 STORE_FAST               8 (versions)
768         200 LOAD_CLOSURE             0 (android_sdk_home_path)
            202 BUILD_TUPLE              1
            204 LOAD_CONST              21 (<code object valid_build_tools at 0x1102d90e0, file "<dis>", line 768>)
            206 LOAD_CONST              22 ('create_android_sdk_rule.<locals>.valid_build_tools')
            208 MAKE_FUNCTION            8 (closure)
            210 STORE_FAST               9 (valid_build_tools)
772         212 LOAD_GLOBAL              4 (prompt_loop_or_load_from_env)
773         214 LOAD_FAST                0 (environ_cp)
774         216 LOAD_CONST              23 ('ANDROID_BUILD_TOOLS_VERSION')
775         218 LOAD_FAST                8 (versions)
            220 LOAD_CONST              17 (-1)
            222 BINARY_SUBSCR
776         224 LOAD_CONST              24 ('Please specify an Android build tools version to use. [Available versions: %s]')
777         226 LOAD_FAST                8 (versions)
776         228 BINARY_MODULO
778         230 LOAD_FAST                9 (valid_build_tools)
779         232 LOAD_CONST              25 ('The selected SDK does not have build-tools version %s available.')
772         234 LOAD_CONST              10 (('var_name', 'var_default', 'ask_for_var', 'check_success', 'error_msg'))
            236 CALL_FUNCTION_KW         6
            238 STORE_FAST              10 (android_build_tools_version)
782         240 LOAD_GLOBAL             10 (write_action_env_to_bazelrc)
            242 LOAD_CONST              23 ('ANDROID_BUILD_TOOLS_VERSION')
783         244 LOAD_FAST               10 (android_build_tools_version)
782         246 CALL_FUNCTION            2
            248 POP_TOP
784         250 LOAD_GLOBAL             10 (write_action_env_to_bazelrc)
            252 LOAD_CONST              26 ('ANDROID_SDK_API_LEVEL')
            254 LOAD_FAST                6 (android_api_level)
            256 CALL_FUNCTION            2
            258 POP_TOP
785         260 LOAD_GLOBAL             10 (write_action_env_to_bazelrc)
            262 LOAD_CONST               7 ('ANDROID_SDK_HOME')
            264 LOAD_DEREF               0 (android_sdk_home_path)
            266 CALL_FUNCTION            2
            268 POP_TOP
            270 LOAD_CONST              27 (None)
            272 RETURN_VALUE
Disassembly of <code object valid_sdk_path at 0x1102d4ea0, file "<dis>", line 733>:
734           0 LOAD_GLOBAL              0 (os)
              2 LOAD_ATTR                1 (path)
              4 LOAD_METHOD              2 (exists)
              6 LOAD_FAST                0 (path)
              8 CALL_METHOD              1
             10 JUMP_IF_FALSE_OR_POP    54
735          12 LOAD_GLOBAL              0 (os)
             14 LOAD_ATTR                1 (path)
             16 LOAD_METHOD              2 (exists)
             18 LOAD_GLOBAL              0 (os)
             20 LOAD_ATTR                1 (path)
             22 LOAD_METHOD              3 (join)
             24 LOAD_FAST                0 (path)
             26 LOAD_CONST               1 ('platforms')
             28 CALL_METHOD              2
             30 CALL_METHOD              1
734          32 JUMP_IF_FALSE_OR_POP    54
736          34 LOAD_GLOBAL              0 (os)
             36 LOAD_ATTR                1 (path)
             38 LOAD_METHOD              2 (exists)
             40 LOAD_GLOBAL              0 (os)
             42 LOAD_ATTR                1 (path)
             44 LOAD_METHOD              3 (join)
             46 LOAD_FAST                0 (path)
             48 LOAD_CONST               2 ('build-tools')
             50 CALL_METHOD              2
             52 CALL_METHOD              1
734     >>   54 RETURN_VALUE
Disassembly of <code object <listcomp> at 0x1102d4f50, file "<dis>", line 749>:
749           0 BUILD_LIST               0
              2 LOAD_FAST                0 (.0)
        >>    4 FOR_ITER                16 (to 22)
              6 STORE_FAST               1 (x)
              8 LOAD_FAST                1 (x)
             10 LOAD_METHOD              0 (replace)
             12 LOAD_CONST               0 ('android-')
             14 LOAD_CONST               1 ('')
             16 CALL_METHOD              2
             18 LIST_APPEND              2
             20 JUMP_ABSOLUTE            4
        >>   22 RETURN_VALUE
Disassembly of <code object valid_api_level at 0x1102d9030, file "<dis>", line 751>:
752           0 LOAD_GLOBAL              0 (os)
              2 LOAD_ATTR                1 (path)
              4 LOAD_METHOD              2 (exists)
753           6 LOAD_GLOBAL              0 (os)
              8 LOAD_ATTR                1 (path)
             10 LOAD_METHOD              3 (join)
             12 LOAD_DEREF               0 (android_sdk_home_path)
             14 LOAD_CONST               1 ('platforms')
754          16 LOAD_CONST               2 ('android-')
             18 LOAD_FAST                0 (api_level)
             20 BINARY_ADD
753          22 CALL_METHOD              3
752          24 CALL_METHOD              1
             26 RETURN_VALUE
Disassembly of <code object valid_build_tools at 0x1102d90e0, file "<dis>", line 768>:
769           0 LOAD_GLOBAL              0 (os)
              2 LOAD_ATTR                1 (path)
              4 LOAD_METHOD              2 (exists)
770           6 LOAD_GLOBAL              0 (os)
              8 LOAD_ATTR                1 (path)
             10 LOAD_METHOD              3 (join)
             12 LOAD_DEREF               0 (android_sdk_home_path)
             14 LOAD_CONST               1 ('build-tools')
             16 LOAD_FAST                0 (version)
             18 CALL_METHOD              3
769          20 CALL_METHOD              1
             22 RETURN_VALUE
Disassembly of <code object get_ndk_api_level at 0x1102d9500, file "<dis>", line 788>:
792           0 LOAD_CONST               1 ('%s/source.properties')
              2 LOAD_DEREF               0 (android_ndk_home_path)
              4 BINARY_MODULO
              6 STORE_FAST               2 (properties_path)
793           8 LOAD_GLOBAL              0 (is_windows)
             10 CALL_FUNCTION            0
             12 POP_JUMP_IF_TRUE        20
             14 LOAD_GLOBAL              1 (is_cygwin)
             16 CALL_FUNCTION            0
             18 POP_JUMP_IF_FALSE       28
794     >>   20 LOAD_GLOBAL              2 (cygpath)
             22 LOAD_FAST                2 (properties_path)
             24 CALL_FUNCTION            1
             26 STORE_FAST               2 (properties_path)
795     >>   28 LOAD_GLOBAL              3 (open)
             30 LOAD_FAST                2 (properties_path)
             32 LOAD_CONST               2 ('r')
             34 CALL_FUNCTION            2
             36 SETUP_WITH              14 (to 52)
             38 STORE_FAST               3 (f)
796          40 LOAD_FAST                3 (f)
             42 LOAD_METHOD              4 (read)
             44 CALL_METHOD              0
             46 STORE_FAST               4 (filedata)
             48 POP_BLOCK
             50 BEGIN_FINALLY
        >>   52 WITH_CLEANUP_START
             54 WITH_CLEANUP_FINISH
             56 END_FINALLY
798          58 LOAD_GLOBAL              5 (re)
             60 LOAD_METHOD              6 (search)
             62 LOAD_CONST               3 ('Pkg.Revision = (\\d+)')
             64 LOAD_FAST                4 (filedata)
             66 CALL_METHOD              2
             68 STORE_FAST               5 (revision)
799          70 LOAD_FAST                5 (revision)
             72 POP_JUMP_IF_FALSE       86
800          74 LOAD_FAST                5 (revision)
             76 LOAD_METHOD              7 (group)
             78 LOAD_CONST               4 (1)
             80 CALL_METHOD              1
             82 STORE_FAST               6 (ndk_version)
             84 JUMP_FORWARD             8 (to 94)
802     >>   86 LOAD_GLOBAL              8 (Exception)
             88 LOAD_CONST               5 ('Unable to parse NDK revision.')
             90 CALL_FUNCTION            1
             92 RAISE_VARARGS            1
803     >>   94 LOAD_GLOBAL              9 (int)
             96 LOAD_FAST                6 (ndk_version)
             98 CALL_FUNCTION            1
            100 LOAD_GLOBAL             10 (_SUPPORTED_ANDROID_NDK_VERSIONS)
            102 COMPARE_OP               7 (not in)
            104 POP_JUMP_IF_FALSE      124
804         106 LOAD_GLOBAL             11 (print)
            108 LOAD_CONST               6 ('WARNING: The NDK version in %s is %s, which is not supported by Bazel (officially supported versions: %s). Please use another version. Compiling Android targets may result in confusing errors.\n')
808         110 LOAD_DEREF               0 (android_ndk_home_path)
            112 LOAD_FAST                6 (ndk_version)
            114 LOAD_GLOBAL             10 (_SUPPORTED_ANDROID_NDK_VERSIONS)
            116 BUILD_TUPLE              3
804         118 BINARY_MODULO
            120 CALL_FUNCTION            1
            122 POP_TOP
813     >>  124 LOAD_GLOBAL             12 (os)
            126 LOAD_ATTR               13 (path)
            128 LOAD_METHOD             14 (join)
            130 LOAD_DEREF               0 (android_ndk_home_path)
            132 LOAD_CONST               7 ('platforms')
            134 CALL_METHOD              2
            136 STORE_FAST               7 (platforms)
814         138 LOAD_GLOBAL             15 (sorted)
            140 LOAD_GLOBAL             12 (os)
            142 LOAD_METHOD             16 (listdir)
            144 LOAD_FAST                7 (platforms)
            146 CALL_METHOD              1
            148 CALL_FUNCTION            1
            150 STORE_FAST               8 (api_levels)
815         152 LOAD_CONST               8 (<code object <listcomp> at 0x1102d9240, file "<dis>", line 815>)
            154 LOAD_CONST               9 ('get_ndk_api_level.<locals>.<listcomp>')
            156 MAKE_FUNCTION            0
816         158 LOAD_FAST                8 (api_levels)
815         160 GET_ITER
            162 CALL_FUNCTION            1
            164 STORE_FAST               8 (api_levels)
819         166 LOAD_CLOSURE             0 (android_ndk_home_path)
            168 BUILD_TUPLE              1
            170 LOAD_CONST              10 (<code object valid_api_level at 0x1102d92f0, file "<dis>", line 819>)
            172 LOAD_CONST              11 ('get_ndk_api_level.<locals>.valid_api_level')
            174 MAKE_FUNCTION            8 (closure)
            176 STORE_FAST               9 (valid_api_level)
824         178 LOAD_GLOBAL             17 (prompt_loop_or_load_from_env)
825         180 LOAD_FAST                0 (environ_cp)
826         182 LOAD_CONST              12 ('ANDROID_NDK_API_LEVEL')
827         184 LOAD_CONST              13 ('21')
828         186 LOAD_CONST              14 ('Please specify the (min) Android NDK API level to use. [Available levels: %s]')
829         188 LOAD_FAST                8 (api_levels)
828         190 BINARY_MODULO
830         192 LOAD_FAST                9 (valid_api_level)
831         194 LOAD_CONST              15 ('Android-%s is not present in the NDK path.')
824         196 LOAD_CONST              16 (('var_name', 'var_default', 'ask_for_var', 'check_success', 'error_msg'))
            198 CALL_FUNCTION_KW         6
            200 STORE_FAST              10 (android_ndk_api_level)
833         202 LOAD_FAST               10 (android_ndk_api_level)
            204 RETURN_VALUE
Disassembly of <code object <listcomp> at 0x1102d9240, file "<dis>", line 815>:
815           0 BUILD_LIST               0
              2 LOAD_FAST                0 (.0)
        >>    4 FOR_ITER                24 (to 30)
816           6 STORE_FAST               1 (x)
              8 LOAD_CONST               0 ('android-')
             10 LOAD_FAST                1 (x)
             12 COMPARE_OP               6 (in)
             14 POP_JUMP_IF_FALSE        4
             16 LOAD_FAST                1 (x)
             18 LOAD_METHOD              0 (replace)
             20 LOAD_CONST               0 ('android-')
             22 LOAD_CONST               1 ('')
             24 CALL_METHOD              2
             26 LIST_APPEND              2
             28 JUMP_ABSOLUTE            4
        >>   30 RETURN_VALUE
Disassembly of <code object valid_api_level at 0x1102d92f0, file "<dis>", line 819>:
820           0 LOAD_GLOBAL              0 (os)
              2 LOAD_ATTR                1 (path)
              4 LOAD_METHOD              2 (exists)
821           6 LOAD_GLOBAL              0 (os)
              8 LOAD_ATTR                1 (path)
             10 LOAD_METHOD              3 (join)
             12 LOAD_DEREF               0 (android_ndk_home_path)
             14 LOAD_CONST               1 ('platforms')
822          16 LOAD_CONST               2 ('android-')
             18 LOAD_FAST                0 (api_level)
             20 BINARY_ADD
821          22 CALL_METHOD              3
820          24 CALL_METHOD              1
             26 RETURN_VALUE
Disassembly of <code object set_gcc_host_compiler_path at 0x1102d95b0, file "<dis>", line 836>:
838           0 LOAD_GLOBAL              0 (which)
              2 LOAD_CONST               1 ('gcc')
              4 CALL_FUNCTION            1
              6 JUMP_IF_TRUE_OR_POP     10
              8 LOAD_CONST               2 ('')
        >>   10 STORE_FAST               1 (default_gcc_host_compiler_path)
839          12 LOAD_CONST               3 ('%s/bin/gcc')
             14 LOAD_FAST                0 (environ_cp)
             16 LOAD_METHOD              1 (get)
             18 LOAD_CONST               4 ('CUDA_TOOLKIT_PATH')
             20 CALL_METHOD              1
             22 BINARY_MODULO
             24 STORE_FAST               2 (cuda_bin_symlink)
841          26 LOAD_GLOBAL              2 (os)
             28 LOAD_ATTR                3 (path)
             30 LOAD_METHOD              4 (islink)
             32 LOAD_FAST                2 (cuda_bin_symlink)
             34 CALL_METHOD              1
             36 POP_JUMP_IF_FALSE       50
843          38 LOAD_GLOBAL              2 (os)
             40 LOAD_ATTR                3 (path)
             42 LOAD_METHOD              5 (realpath)
             44 LOAD_FAST                2 (cuda_bin_symlink)
             46 CALL_METHOD              1
             48 STORE_FAST               1 (default_gcc_host_compiler_path)
845     >>   50 LOAD_GLOBAL              6 (prompt_loop_or_load_from_env)
846          52 LOAD_FAST                0 (environ_cp)
847          54 LOAD_CONST               5 ('GCC_HOST_COMPILER_PATH')
848          56 LOAD_FAST                1 (default_gcc_host_compiler_path)
849          58 LOAD_CONST               6 ('Please specify which gcc should be used by nvcc as the host compiler.')
851          60 LOAD_GLOBAL              2 (os)
             62 LOAD_ATTR                3 (path)
             64 LOAD_ATTR                7 (exists)
852          66 LOAD_CONST               7 (True)
853          68 LOAD_CONST               8 ('Invalid gcc path. %s cannot be found.')
845          70 LOAD_CONST               9 (('var_name', 'var_default', 'ask_for_var', 'check_success', 'resolve_symlinks', 'error_msg'))
             72 CALL_FUNCTION_KW         7
             74 STORE_FAST               3 (gcc_host_compiler_path)
856          76 LOAD_GLOBAL              8 (write_action_env_to_bazelrc)
             78 LOAD_CONST               5 ('GCC_HOST_COMPILER_PATH')
             80 LOAD_FAST                3 (gcc_host_compiler_path)
             82 CALL_FUNCTION            2
             84 POP_TOP
             86 LOAD_CONST              10 (None)
             88 RETURN_VALUE
Disassembly of <code object reformat_version_sequence at 0x1102d9660, file "<dis>", line 859>:
875           0 LOAD_FAST                0 (version_str)
              2 LOAD_METHOD              0 (split)
              4 LOAD_CONST               1 ('.')
              6 CALL_METHOD              1
              8 STORE_FAST               2 (v)
876          10 LOAD_GLOBAL              1 (len)
             12 LOAD_FAST                2 (v)
             14 CALL_FUNCTION            1
             16 LOAD_FAST                1 (sequence_count)
             18 COMPARE_OP               0 (<)
             20 POP_JUMP_IF_FALSE       44
877          22 LOAD_FAST                2 (v)
             24 LOAD_CONST               2 ('0')
             26 BUILD_LIST               1
             28 LOAD_FAST                1 (sequence_count)
             30 LOAD_GLOBAL              1 (len)
             32 LOAD_FAST                2 (v)
             34 CALL_FUNCTION            1
             36 BINARY_SUBTRACT
             38 BINARY_MULTIPLY
             40 BINARY_ADD
             42 STORE_FAST               2 (v)
879     >>   44 LOAD_CONST               1 ('.')
             46 LOAD_METHOD              2 (join)
             48 LOAD_FAST                2 (v)
             50 LOAD_CONST               3 (None)
             52 LOAD_FAST                1 (sequence_count)
             54 BUILD_SLICE              2
             56 BINARY_SUBSCR
             58 CALL_METHOD              1
             60 RETURN_VALUE
Disassembly of <code object set_tf_cuda_paths at 0x1102d9710, file "<dis>", line 882>:
885           0 LOAD_CONST               1 ('Please specify the comma-separated list of base paths to look for CUDA libraries and headers. [Leave empty to use the default]: ')
884           2 STORE_FAST               1 (ask_cuda_paths)
887           4 LOAD_GLOBAL              0 (get_from_env_or_user_or_default)
              6 LOAD_FAST                0 (environ_cp)
              8 LOAD_CONST               2 ('TF_CUDA_PATHS')
888          10 LOAD_FAST                1 (ask_cuda_paths)
             12 LOAD_CONST               3 ('')
887          14 CALL_FUNCTION            4
             16 STORE_FAST               2 (tf_cuda_paths)
889          18 LOAD_FAST                2 (tf_cuda_paths)
             20 POP_JUMP_IF_FALSE       30
890          22 LOAD_FAST                2 (tf_cuda_paths)
             24 LOAD_FAST                0 (environ_cp)
             26 LOAD_CONST               2 ('TF_CUDA_PATHS')
             28 STORE_SUBSCR
        >>   30 LOAD_CONST               4 (None)
             32 RETURN_VALUE
Disassembly of <code object set_tf_cuda_version at 0x1102d97c0, file "<dis>", line 893>:
896           0 LOAD_CONST               1 ('Please specify the CUDA SDK version you want to use. [Leave empty to default to CUDA %s]: ')
897           2 LOAD_GLOBAL              0 (_DEFAULT_CUDA_VERSION)
895           4 BINARY_MODULO
              6 STORE_FAST               1 (ask_cuda_version)
898           8 LOAD_GLOBAL              1 (get_from_env_or_user_or_default)
             10 LOAD_FAST                0 (environ_cp)
899          12 LOAD_CONST               2 ('TF_CUDA_VERSION')
900          14 LOAD_FAST                1 (ask_cuda_version)
901          16 LOAD_GLOBAL              0 (_DEFAULT_CUDA_VERSION)
898          18 CALL_FUNCTION            4
             20 STORE_FAST               2 (tf_cuda_version)
902          22 LOAD_FAST                2 (tf_cuda_version)
             24 LOAD_FAST                0 (environ_cp)
             26 LOAD_CONST               2 ('TF_CUDA_VERSION')
             28 STORE_SUBSCR
             30 LOAD_CONST               3 (None)
             32 RETURN_VALUE
Disassembly of <code object set_tf_cudnn_version at 0x1102d9870, file "<dis>", line 905>:
908           0 LOAD_CONST               1 ('Please specify the cuDNN version you want to use. [Leave empty to default to cuDNN %s]: ')
909           2 LOAD_GLOBAL              0 (_DEFAULT_CUDNN_VERSION)
907           4 BINARY_MODULO
              6 STORE_FAST               1 (ask_cudnn_version)
910           8 LOAD_GLOBAL              1 (get_from_env_or_user_or_default)
             10 LOAD_FAST                0 (environ_cp)
911          12 LOAD_CONST               2 ('TF_CUDNN_VERSION')
912          14 LOAD_FAST                1 (ask_cudnn_version)
913          16 LOAD_GLOBAL              0 (_DEFAULT_CUDNN_VERSION)
910          18 CALL_FUNCTION            4
             20 STORE_FAST               2 (tf_cudnn_version)
914          22 LOAD_FAST                2 (tf_cudnn_version)
             24 LOAD_FAST                0 (environ_cp)
             26 LOAD_CONST               2 ('TF_CUDNN_VERSION')
             28 STORE_SUBSCR
             30 LOAD_CONST               3 (None)
             32 RETURN_VALUE
Disassembly of <code object is_cuda_compatible at 0x1102d9920, file "<dis>", line 917>:
919           0 LOAD_GLOBAL              0 (which)
              2 LOAD_CONST               1 ('ldd')
              4 CALL_FUNCTION            1
              6 JUMP_IF_TRUE_OR_POP     10
              8 LOAD_CONST               2 ('/usr/bin/ldd')
        >>   10 STORE_FAST               3 (ldd_bin)
920          12 LOAD_GLOBAL              1 (run_shell)
             14 LOAD_FAST                3 (ldd_bin)
             16 LOAD_FAST                0 (lib)
             18 BUILD_LIST               2
             20 LOAD_CONST               3 (True)
             22 CALL_FUNCTION            2
             24 STORE_FAST               4 (ldd_out)
921          26 LOAD_FAST                4 (ldd_out)
             28 LOAD_METHOD              2 (split)
             30 LOAD_GLOBAL              3 (os)
             32 LOAD_ATTR                4 (linesep)
             34 CALL_METHOD              1
             36 STORE_FAST               4 (ldd_out)
922          38 LOAD_GLOBAL              5 (re)
             40 LOAD_METHOD              6 (compile)
             42 LOAD_CONST               4 ('.*libcudnn.so\\.?(.*) =>.*$')
             44 CALL_METHOD              1
             46 STORE_FAST               5 (cudnn_pattern)
923          48 LOAD_GLOBAL              5 (re)
             50 LOAD_METHOD              6 (compile)
             52 LOAD_CONST               5 ('.*libcudart.so\\.?(.*) =>.*$')
             54 CALL_METHOD              1
             56 STORE_FAST               6 (cuda_pattern)
924          58 LOAD_CONST               6 (None)
             60 STORE_FAST               7 (cudnn)
925          62 LOAD_CONST               6 (None)
             64 STORE_FAST               8 (cudart)
926          66 LOAD_CONST               3 (True)
             68 STORE_FAST               9 (cudnn_ok)
927          70 LOAD_CONST               3 (True)
             72 STORE_FAST              10 (cuda_ok)
928          74 LOAD_FAST                4 (ldd_out)
             76 GET_ITER
        >>   78 FOR_ITER                50 (to 130)
             80 STORE_FAST              11 (line)
929          82 LOAD_CONST               7 ('libcudnn.so')
             84 LOAD_FAST               11 (line)
             86 COMPARE_OP               6 (in)
             88 POP_JUMP_IF_FALSE      106
930          90 LOAD_FAST                5 (cudnn_pattern)
             92 LOAD_METHOD              7 (search)
             94 LOAD_FAST               11 (line)
             96 CALL_METHOD              1
             98 STORE_FAST               7 (cudnn)
931         100 LOAD_CONST               8 (False)
            102 STORE_FAST               9 (cudnn_ok)
            104 JUMP_ABSOLUTE           78
932     >>  106 LOAD_CONST               9 ('libcudart.so')
            108 LOAD_FAST               11 (line)
            110 COMPARE_OP               6 (in)
            112 POP_JUMP_IF_FALSE       78
933         114 LOAD_FAST                6 (cuda_pattern)
            116 LOAD_METHOD              7 (search)
            118 LOAD_FAST               11 (line)
            120 CALL_METHOD              1
            122 STORE_FAST               8 (cudart)
934         124 LOAD_CONST               8 (False)
            126 STORE_FAST              10 (cuda_ok)
            128 JUMP_ABSOLUTE           78
935     >>  130 LOAD_FAST                7 (cudnn)
            132 POP_JUMP_IF_FALSE      162
            134 LOAD_GLOBAL              8 (len)
            136 LOAD_FAST                7 (cudnn)
            138 LOAD_METHOD              9 (group)
            140 LOAD_CONST              10 (1)
            142 CALL_METHOD              1
            144 CALL_FUNCTION            1
            146 POP_JUMP_IF_FALSE      162
936         148 LOAD_GLOBAL             10 (convert_version_to_int)
            150 LOAD_FAST                7 (cudnn)
            152 LOAD_METHOD              9 (group)
            154 LOAD_CONST              10 (1)
            156 CALL_METHOD              1
            158 CALL_FUNCTION            1
            160 STORE_FAST               7 (cudnn)
937     >>  162 LOAD_FAST                8 (cudart)
            164 POP_JUMP_IF_FALSE      194
            166 LOAD_GLOBAL              8 (len)
            168 LOAD_FAST                8 (cudart)
            170 LOAD_METHOD              9 (group)
            172 LOAD_CONST              10 (1)
            174 CALL_METHOD              1
            176 CALL_FUNCTION            1
            178 POP_JUMP_IF_FALSE      194
938         180 LOAD_GLOBAL             10 (convert_version_to_int)
            182 LOAD_FAST                8 (cudart)
            184 LOAD_METHOD              9 (group)
            186 LOAD_CONST              10 (1)
            188 CALL_METHOD              1
            190 CALL_FUNCTION            1
            192 STORE_FAST               8 (cudart)
939     >>  194 LOAD_FAST                7 (cudnn)
            196 LOAD_CONST               6 (None)
            198 COMPARE_OP               9 (is not)
            200 POP_JUMP_IF_FALSE      210
940         202 LOAD_FAST                7 (cudnn)
            204 LOAD_FAST                2 (cudnn_ver)
            206 COMPARE_OP               2 (==)
            208 STORE_FAST               9 (cudnn_ok)
941     >>  210 LOAD_FAST                8 (cudart)
            212 LOAD_CONST               6 (None)
            214 COMPARE_OP               9 (is not)
            216 POP_JUMP_IF_FALSE      226
942         218 LOAD_FAST                8 (cudart)
            220 LOAD_FAST                1 (cuda_ver)
            222 COMPARE_OP               2 (==)
            224 STORE_FAST              10 (cuda_ok)
943     >>  226 LOAD_FAST                9 (cudnn_ok)
            228 JUMP_IF_FALSE_OR_POP   232
            230 LOAD_FAST               10 (cuda_ok)
        >>  232 RETURN_VALUE
Disassembly of <code object set_tf_tensorrt_version at 0x1102d99d0, file "<dis>", line 946>:
948           0 LOAD_GLOBAL              0 (is_linux)
              2 CALL_FUNCTION            0
              4 POP_JUMP_IF_TRUE        20
              6 LOAD_GLOBAL              1 (is_windows)
              8 CALL_FUNCTION            0
             10 POP_JUMP_IF_TRUE        20
949          12 LOAD_GLOBAL              2 (ValueError)
             14 LOAD_CONST               1 ('Currently TensorRT is only supported on Linux platform.')
             16 CALL_FUNCTION            1
             18 RAISE_VARARGS            1
951     >>   20 LOAD_GLOBAL              3 (int)
             22 LOAD_FAST                0 (environ_cp)
             24 LOAD_METHOD              4 (get)
             26 LOAD_CONST               2 ('TF_NEED_TENSORRT')
             28 LOAD_CONST               3 (False)
             30 CALL_METHOD              2
             32 CALL_FUNCTION            1
             34 POP_JUMP_IF_TRUE        40
952          36 LOAD_CONST               4 (None)
             38 RETURN_VALUE
955     >>   40 LOAD_CONST               5 ('Please specify the TensorRT version you want to use. [Leave empty to default to TensorRT %s]: ')
956          42 LOAD_GLOBAL              5 (_DEFAULT_TENSORRT_VERSION)
954          44 BINARY_MODULO
             46 STORE_FAST               1 (ask_tensorrt_version)
957          48 LOAD_GLOBAL              6 (get_from_env_or_user_or_default)
958          50 LOAD_FAST                0 (environ_cp)
             52 LOAD_CONST               6 ('TF_TENSORRT_VERSION')
             54 LOAD_FAST                1 (ask_tensorrt_version)
959          56 LOAD_GLOBAL              5 (_DEFAULT_TENSORRT_VERSION)
957          58 CALL_FUNCTION            4
             60 STORE_FAST               2 (tf_tensorrt_version)
960          62 LOAD_FAST                2 (tf_tensorrt_version)
             64 LOAD_FAST                0 (environ_cp)
             66 LOAD_CONST               6 ('TF_TENSORRT_VERSION')
             68 STORE_SUBSCR
             70 LOAD_CONST               4 (None)
             72 RETURN_VALUE
Disassembly of <code object set_tf_nccl_version at 0x1102d9a80, file "<dis>", line 963>:
965           0 LOAD_GLOBAL              0 (is_linux)
              2 CALL_FUNCTION            0
              4 POP_JUMP_IF_TRUE        14
966           6 LOAD_GLOBAL              1 (ValueError)
              8 LOAD_CONST               1 ('Currently NCCL is only supported on Linux platform.')
             10 CALL_FUNCTION            1
             12 RAISE_VARARGS            1
968     >>   14 LOAD_CONST               2 ('TF_NCCL_VERSION')
             16 LOAD_FAST                0 (environ_cp)
             18 COMPARE_OP               6 (in)
             20 POP_JUMP_IF_FALSE       26
969          22 LOAD_CONST               3 (None)
             24 RETURN_VALUE
972     >>   26 LOAD_CONST               4 ('Please specify the locally installed NCCL version you want to use. [Leave empty to use http://github.com/nvidia/nccl]: ')
971          28 STORE_FAST               1 (ask_nccl_version)
974          30 LOAD_GLOBAL              2 (get_from_env_or_user_or_default)
             32 LOAD_FAST                0 (environ_cp)
975          34 LOAD_CONST               2 ('TF_NCCL_VERSION')
976          36 LOAD_FAST                1 (ask_nccl_version)
             38 LOAD_CONST               5 ('')
974          40 CALL_FUNCTION            4
             42 STORE_FAST               2 (tf_nccl_version)
977          44 LOAD_FAST                2 (tf_nccl_version)
             46 LOAD_FAST                0 (environ_cp)
             48 LOAD_CONST               2 ('TF_NCCL_VERSION')
             50 STORE_SUBSCR
             52 LOAD_CONST               3 (None)
             54 RETURN_VALUE
Disassembly of <code object get_native_cuda_compute_capabilities at 0x1102d9c90, file "<dis>", line 980>:
 989           0 LOAD_GLOBAL              0 (os)
               2 LOAD_ATTR                1 (path)
               4 LOAD_METHOD              2 (join)
 990           6 LOAD_FAST                0 (environ_cp)
               8 LOAD_METHOD              3 (get)
              10 LOAD_CONST               1 ('CUDA_TOOLKIT_PATH')
              12 CALL_METHOD              1
              14 LOAD_CONST               2 ('extras/demo_suite/deviceQuery')
 989          16 CALL_METHOD              2
              18 STORE_FAST               1 (device_query_bin)
 991          20 LOAD_GLOBAL              0 (os)
              22 LOAD_ATTR                1 (path)
              24 LOAD_METHOD              4 (isfile)
              26 LOAD_FAST                1 (device_query_bin)
              28 CALL_METHOD              1
              30 POP_JUMP_IF_FALSE      142
              32 LOAD_GLOBAL              0 (os)
              34 LOAD_METHOD              5 (access)
              36 LOAD_FAST                1 (device_query_bin)
              38 LOAD_GLOBAL              0 (os)
              40 LOAD_ATTR                6 (X_OK)
              42 CALL_METHOD              2
              44 POP_JUMP_IF_FALSE      142
 992          46 SETUP_FINALLY           66 (to 114)
 993          48 LOAD_GLOBAL              7 (run_shell)
              50 LOAD_FAST                1 (device_query_bin)
              52 CALL_FUNCTION            1
              54 LOAD_METHOD              8 (split)
              56 LOAD_CONST               3 ('\n')
              58 CALL_METHOD              1
              60 STORE_FAST               2 (output)
 994          62 LOAD_GLOBAL              9 (re)
              64 LOAD_METHOD             10 (compile)
              66 LOAD_CONST               4 ('[0-9]*\\.[0-9]*')
              68 CALL_METHOD              1
              70 STORE_DEREF              0 (pattern)
 995          72 LOAD_CLOSURE             0 (pattern)
              74 BUILD_TUPLE              1
              76 LOAD_CONST               5 (<code object <listcomp> at 0x1102d9b30, file "<dis>", line 995>)
              78 LOAD_CONST               6 ('get_native_cuda_compute_capabilities.<locals>.<listcomp>')
              80 MAKE_FUNCTION            8 (closure)
              82 LOAD_FAST                2 (output)
              84 GET_ITER
              86 CALL_FUNCTION            1
              88 STORE_FAST               2 (output)
 996          90 LOAD_CONST               7 (',')
              92 LOAD_METHOD              2 (join)
              94 LOAD_CONST               8 (<code object <genexpr> at 0x1102d9be0, file "<dis>", line 996>)
              96 LOAD_CONST               9 ('get_native_cuda_compute_capabilities.<locals>.<genexpr>')
              98 MAKE_FUNCTION            0
             100 LOAD_FAST                2 (output)
             102 GET_ITER
             104 CALL_FUNCTION            1
             106 CALL_METHOD              1
             108 STORE_FAST               2 (output)
             110 POP_BLOCK
             112 JUMP_ABSOLUTE          146
 997     >>  114 DUP_TOP
             116 LOAD_GLOBAL             11 (subprocess)
             118 LOAD_ATTR               12 (CalledProcessError)
             120 COMPARE_OP              10 (exception match)
             122 POP_JUMP_IF_FALSE      138
             124 POP_TOP
             126 POP_TOP
             128 POP_TOP
 998         130 LOAD_CONST              10 ('')
             132 STORE_FAST               2 (output)
             134 POP_EXCEPT
             136 JUMP_ABSOLUTE          146
         >>  138 END_FINALLY
             140 JUMP_FORWARD             4 (to 146)
1000     >>  142 LOAD_CONST              10 ('')
             144 STORE_FAST               2 (output)
1001     >>  146 LOAD_FAST                2 (output)
             148 RETURN_VALUE
Disassembly of <code object <listcomp> at 0x1102d9b30, file "<dis>", line 995>:
995           0 BUILD_LIST               0
              2 LOAD_FAST                0 (.0)
        >>    4 FOR_ITER                22 (to 28)
              6 STORE_FAST               1 (x)
              8 LOAD_CONST               0 ('Capability')
             10 LOAD_FAST                1 (x)
             12 COMPARE_OP               6 (in)
             14 POP_JUMP_IF_FALSE        4
             16 LOAD_DEREF               0 (pattern)
             18 LOAD_METHOD              0 (search)
             20 LOAD_FAST                1 (x)
             22 CALL_METHOD              1
             24 LIST_APPEND              2
             26 JUMP_ABSOLUTE            4
        >>   28 RETURN_VALUE
Disassembly of <code object <genexpr> at 0x1102d9be0, file "<dis>", line 996>:
996           0 LOAD_FAST                0 (.0)
        >>    2 FOR_ITER                22 (to 26)
              4 STORE_FAST               1 (x)
              6 LOAD_FAST                1 (x)
              8 LOAD_CONST               0 (None)
             10 COMPARE_OP               9 (is not)
             12 POP_JUMP_IF_FALSE        2
             14 LOAD_FAST                1 (x)
             16 LOAD_METHOD              0 (group)
             18 CALL_METHOD              0
             20 YIELD_VALUE
             22 POP_TOP
             24 JUMP_ABSOLUTE            2
        >>   26 LOAD_CONST               0 (None)
             28 RETURN_VALUE
Disassembly of <code object set_tf_cuda_compute_capabilities at 0x1102d9df0, file "<dis>", line 1004>:
1007     >>    0 LOAD_GLOBAL              0 (get_native_cuda_compute_capabilities)
1008           2 LOAD_FAST                0 (environ_cp)
1007           4 CALL_FUNCTION            1
               6 STORE_FAST               1 (native_cuda_compute_capabilities)
1009           8 LOAD_FAST                1 (native_cuda_compute_capabilities)
              10 POP_JUMP_IF_TRUE        18
1010          12 LOAD_GLOBAL              1 (_DEFAULT_CUDA_COMPUTE_CAPABILITIES)
              14 STORE_FAST               2 (default_cuda_compute_capabilities)
              16 JUMP_FORWARD             4 (to 22)
1012     >>   18 LOAD_FAST                1 (native_cuda_compute_capabilities)
              20 STORE_FAST               2 (default_cuda_compute_capabilities)
1015     >>   22 LOAD_CONST               1 ('Please specify a list of comma-separated CUDA compute capabilities you want to build with.\nYou can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus. Each capability can be specified as "x.y" or "compute_xy" to include both virtual and binary GPU code, or as "sm_xy" to only include the binary code.\nPlease note that each additional compute capability significantly increases your build time and binary size, and that TensorFlow only supports compute capabilities >= 3.5 [Default is: %s]: ')
1023          24 LOAD_FAST                2 (default_cuda_compute_capabilities)
1015          26 BINARY_MODULO
1014          28 STORE_FAST               3 (ask_cuda_compute_capabilities)
1024          30 LOAD_GLOBAL              2 (get_from_env_or_user_or_default)
1025          32 LOAD_FAST                0 (environ_cp)
              34 LOAD_CONST               2 ('TF_CUDA_COMPUTE_CAPABILITIES')
1026          36 LOAD_FAST                3 (ask_cuda_compute_capabilities)
              38 LOAD_FAST                2 (default_cuda_compute_capabilities)
1024          40 CALL_FUNCTION            4
              42 STORE_FAST               4 (tf_cuda_compute_capabilities)
1028          44 LOAD_CONST               3 (True)
              46 STORE_FAST               5 (all_valid)
1031          48 LOAD_CONST               4 ('')
              50 LOAD_METHOD              3 (join)
              52 LOAD_FAST                4 (tf_cuda_compute_capabilities)
              54 LOAD_METHOD              4 (split)
              56 CALL_METHOD              0
              58 CALL_METHOD              1
              60 STORE_FAST               4 (tf_cuda_compute_capabilities)
1032          62 LOAD_FAST                4 (tf_cuda_compute_capabilities)
              64 LOAD_METHOD              4 (split)
              66 LOAD_CONST               5 (',')
              68 CALL_METHOD              1
              70 GET_ITER
         >>   72 FOR_ITER               164 (to 238)
              74 STORE_FAST               6 (compute_capability)
1033          76 LOAD_GLOBAL              5 (re)
              78 LOAD_METHOD              6 (match)
              80 LOAD_CONST               6 ('[0-9]+.[0-9]+')
              82 LOAD_FAST                6 (compute_capability)
              84 CALL_METHOD              2
              86 STORE_FAST               7 (m)
1034          88 LOAD_FAST                7 (m)
              90 POP_JUMP_IF_TRUE       182
1036          92 LOAD_GLOBAL              5 (re)
              94 LOAD_METHOD              6 (match)
              96 LOAD_CONST               7 ('(sm|compute)_?([0-9]+[0-9]+)')
1037          98 LOAD_FAST                6 (compute_capability)
1036         100 CALL_METHOD              2
             102 STORE_FAST               8 (sm_compute_match)
1038         104 LOAD_FAST                8 (sm_compute_match)
             106 POP_JUMP_IF_TRUE       126
1039         108 LOAD_GLOBAL              7 (print)
             110 LOAD_CONST               8 ('Invalid compute capability: %s')
             112 LOAD_FAST                6 (compute_capability)
             114 BINARY_MODULO
             116 CALL_FUNCTION            1
             118 POP_TOP
1040         120 LOAD_CONST               9 (False)
             122 STORE_FAST               5 (all_valid)
             124 JUMP_ABSOLUTE          236
1042     >>  126 LOAD_GLOBAL              8 (int)
             128 LOAD_FAST                8 (sm_compute_match)
             130 LOAD_METHOD              9 (group)
             132 LOAD_CONST              10 (2)
             134 CALL_METHOD              1
             136 CALL_FUNCTION            1
             138 STORE_FAST               9 (ver)
1043         140 LOAD_FAST                9 (ver)
             142 LOAD_CONST              11 (30)
             144 COMPARE_OP               0 (<)
             146 POP_JUMP_IF_FALSE      164
1044         148 LOAD_GLOBAL              7 (print)
1045         150 LOAD_CONST              12 ('ERROR: TensorFlow only supports small CUDA compute capabilities of sm_30 and higher. Please re-specify the list of compute capabilities excluding version %s.')
1047         152 LOAD_FAST                9 (ver)
1045         154 BINARY_MODULO
1044         156 CALL_FUNCTION            1
             158 POP_TOP
1048         160 LOAD_CONST               9 (False)
             162 STORE_FAST               5 (all_valid)
1049     >>  164 LOAD_FAST                9 (ver)
             166 LOAD_CONST              13 (35)
             168 COMPARE_OP               0 (<)
             170 POP_JUMP_IF_FALSE      236
1050         172 LOAD_GLOBAL              7 (print)
             174 LOAD_CONST              14 ('WARNING: XLA does not support CUDA compute capabilities lower than sm_35. Disable XLA when running on older GPUs.')
             176 CALL_FUNCTION            1
             178 POP_TOP
             180 JUMP_ABSOLUTE           72
1053     >>  182 LOAD_GLOBAL             10 (float)
             184 LOAD_FAST                7 (m)
             186 LOAD_METHOD              9 (group)
             188 LOAD_CONST              15 (0)
             190 CALL_METHOD              1
             192 CALL_FUNCTION            1
             194 STORE_FAST               9 (ver)
1054         196 LOAD_FAST                9 (ver)
             198 LOAD_CONST              16 (3.0)
             200 COMPARE_OP               0 (<)
             202 POP_JUMP_IF_FALSE      220
1055         204 LOAD_GLOBAL              7 (print)
             206 LOAD_CONST              17 ('ERROR: TensorFlow only supports CUDA compute capabilities 3.0 and higher. Please re-specify the list of compute capabilities excluding version %s.')
1057         208 LOAD_FAST                9 (ver)
1055         210 BINARY_MODULO
             212 CALL_FUNCTION            1
             214 POP_TOP
1058         216 LOAD_CONST               9 (False)
             218 STORE_FAST               5 (all_valid)
1059     >>  220 LOAD_FAST                9 (ver)
             222 LOAD_CONST              18 (3.5)
             224 COMPARE_OP               0 (<)
             226 POP_JUMP_IF_FALSE       72
1060         228 LOAD_GLOBAL              7 (print)
             230 LOAD_CONST              19 ('WARNING: XLA does not support CUDA compute capabilities lower than 3.5. Disable XLA when running on older GPUs.')
             232 CALL_FUNCTION            1
             234 POP_TOP
         >>  236 JUMP_ABSOLUTE           72
1063     >>  238 LOAD_FAST                5 (all_valid)
             240 POP_JUMP_IF_FALSE      244
1064         242 JUMP_ABSOLUTE          254
1067     >>  244 LOAD_CONST               4 ('')
             246 LOAD_FAST                0 (environ_cp)
             248 LOAD_CONST               2 ('TF_CUDA_COMPUTE_CAPABILITIES')
             250 STORE_SUBSCR
             252 JUMP_ABSOLUTE            0
1070     >>  254 LOAD_FAST                4 (tf_cuda_compute_capabilities)
             256 LOAD_FAST                0 (environ_cp)
             258 LOAD_CONST               2 ('TF_CUDA_COMPUTE_CAPABILITIES')
             260 STORE_SUBSCR
1071         262 LOAD_GLOBAL             11 (write_action_env_to_bazelrc)
             264 LOAD_CONST               2 ('TF_CUDA_COMPUTE_CAPABILITIES')
1072         266 LOAD_FAST                4 (tf_cuda_compute_capabilities)
1071         268 CALL_FUNCTION            2
             270 POP_TOP
             272 LOAD_CONST              20 (None)
             274 RETURN_VALUE
Disassembly of <code object set_other_cuda_vars at 0x1102d9ea0, file "<dis>", line 1075>:
1078           0 LOAD_FAST                0 (environ_cp)
               2 LOAD_METHOD              0 (get)
               4 LOAD_CONST               1 ('TF_CUDA_CLANG')
               6 CALL_METHOD              1
               8 LOAD_CONST               2 ('1')
              10 COMPARE_OP               2 (==)
              12 POP_JUMP_IF_FALSE       24
1079          14 LOAD_GLOBAL              1 (write_to_bazelrc)
              16 LOAD_CONST               3 ('build --config=cuda_clang')
              18 CALL_FUNCTION            1
              20 POP_TOP
              22 JUMP_FORWARD             8 (to 32)
1081     >>   24 LOAD_GLOBAL              1 (write_to_bazelrc)
              26 LOAD_CONST               4 ('build --config=cuda')
              28 CALL_FUNCTION            1
              30 POP_TOP
         >>   32 LOAD_CONST               5 (None)
              34 RETURN_VALUE
Disassembly of <code object set_host_cxx_compiler at 0x1102d9f50, file "<dis>", line 1084>:
1086           0 LOAD_GLOBAL              0 (which)
               2 LOAD_CONST               1 ('g++')
               4 CALL_FUNCTION            1
               6 JUMP_IF_TRUE_OR_POP     10
               8 LOAD_CONST               2 ('')
         >>   10 STORE_FAST               1 (default_cxx_host_compiler)
1088          12 LOAD_GLOBAL              1 (prompt_loop_or_load_from_env)
1089          14 LOAD_FAST                0 (environ_cp)
1090          16 LOAD_CONST               3 ('HOST_CXX_COMPILER')
1091          18 LOAD_FAST                1 (default_cxx_host_compiler)
1092          20 LOAD_CONST               4 ('Please specify which C++ compiler should be used as the host C++ compiler.')
1094          22 LOAD_GLOBAL              2 (os)
              24 LOAD_ATTR                3 (path)
              26 LOAD_ATTR                4 (exists)
1095          28 LOAD_CONST               5 ('Invalid C++ compiler path. %s cannot be found.')
1088          30 LOAD_CONST               6 (('var_name', 'var_default', 'ask_for_var', 'check_success', 'error_msg'))
              32 CALL_FUNCTION_KW         6
              34 STORE_FAST               2 (host_cxx_compiler)
1098          36 LOAD_GLOBAL              5 (write_action_env_to_bazelrc)
              38 LOAD_CONST               3 ('HOST_CXX_COMPILER')
              40 LOAD_FAST                2 (host_cxx_compiler)
              42 CALL_FUNCTION            2
              44 POP_TOP
              46 LOAD_CONST               7 (None)
              48 RETURN_VALUE
Disassembly of <code object set_host_c_compiler at 0x1102db030, file "<dis>", line 1101>:
1103           0 LOAD_GLOBAL              0 (which)
               2 LOAD_CONST               1 ('gcc')
               4 CALL_FUNCTION            1
               6 JUMP_IF_TRUE_OR_POP     10
               8 LOAD_CONST               2 ('')
         >>   10 STORE_FAST               1 (default_c_host_compiler)
1105          12 LOAD_GLOBAL              1 (prompt_loop_or_load_from_env)
1106          14 LOAD_FAST                0 (environ_cp)
1107          16 LOAD_CONST               3 ('HOST_C_COMPILER')
1108          18 LOAD_FAST                1 (default_c_host_compiler)
1109          20 LOAD_CONST               4 ('Please specify which C compiler should be used as the host C compiler.')
1111          22 LOAD_GLOBAL              2 (os)
              24 LOAD_ATTR                3 (path)
              26 LOAD_ATTR                4 (exists)
1112          28 LOAD_CONST               5 ('Invalid C compiler path. %s cannot be found.')
1105          30 LOAD_CONST               6 (('var_name', 'var_default', 'ask_for_var', 'check_success', 'error_msg'))
              32 CALL_FUNCTION_KW         6
              34 STORE_FAST               2 (host_c_compiler)
1115          36 LOAD_GLOBAL              5 (write_action_env_to_bazelrc)
              38 LOAD_CONST               3 ('HOST_C_COMPILER')
              40 LOAD_FAST                2 (host_c_compiler)
              42 CALL_FUNCTION            2
              44 POP_TOP
              46 LOAD_CONST               7 (None)
              48 RETURN_VALUE
Disassembly of <code object system_specific_test_config at 0x1102db0e0, file "<dis>", line 1118>:
1120           0 LOAD_GLOBAL              0 (write_to_bazelrc)
               2 LOAD_CONST               1 ('test --flaky_test_attempts=3')
               4 CALL_FUNCTION            1
               6 POP_TOP
1121           8 LOAD_GLOBAL              0 (write_to_bazelrc)
              10 LOAD_CONST               2 ('test --test_size_filters=small,medium')
              12 CALL_FUNCTION            1
              14 POP_TOP
1128          16 LOAD_CONST               3 ('-benchmark-test')
              18 LOAD_CONST               4 ('-no_oss')
              20 BUILD_LIST               2
              22 STORE_FAST               1 (test_and_build_filters)
1131          24 LOAD_CONST               5 ('-oss_serial')
              26 BUILD_LIST               1
              28 STORE_FAST               2 (test_only_filters)
1132          30 LOAD_GLOBAL              1 (is_windows)
              32 CALL_FUNCTION            0
              34 POP_JUMP_IF_FALSE      104
1133          36 LOAD_FAST                1 (test_and_build_filters)
              38 LOAD_METHOD              2 (append)
              40 LOAD_CONST               6 ('-no_windows')
              42 CALL_METHOD              1
              44 POP_TOP
1134          46 LOAD_FAST                0 (environ_cp)
              48 LOAD_METHOD              3 (get)
              50 LOAD_CONST               7 ('TF_NEED_CUDA')
              52 LOAD_CONST               8 (None)
              54 CALL_METHOD              2
              56 LOAD_CONST               9 ('1')
              58 COMPARE_OP               2 (==)
              60 POP_JUMP_IF_TRUE        78
1135          62 LOAD_FAST                0 (environ_cp)
              64 LOAD_METHOD              3 (get)
              66 LOAD_CONST              10 ('TF_NEED_ROCM')
              68 LOAD_CONST               8 (None)
              70 CALL_METHOD              2
              72 LOAD_CONST               9 ('1')
              74 COMPARE_OP               2 (==)
1134          76 POP_JUMP_IF_FALSE       92
1136     >>   78 LOAD_FAST                1 (test_and_build_filters)
              80 LOAD_CONST              11 ('-no_windows_gpu')
              82 LOAD_CONST              12 ('-no_gpu')
              84 BUILD_LIST               2
              86 INPLACE_ADD
              88 STORE_FAST               1 (test_and_build_filters)
              90 JUMP_ABSOLUTE          194
1138     >>   92 LOAD_FAST                1 (test_and_build_filters)
              94 LOAD_METHOD              2 (append)
              96 LOAD_CONST              13 ('-gpu')
              98 CALL_METHOD              1
             100 POP_TOP
             102 JUMP_FORWARD            90 (to 194)
1139     >>  104 LOAD_GLOBAL              4 (is_macos)
             106 CALL_FUNCTION            0
             108 POP_JUMP_IF_FALSE      126
1140         110 LOAD_FAST                1 (test_and_build_filters)
             112 LOAD_CONST              13 ('-gpu')
             114 LOAD_CONST              14 ('-nomac')
             116 LOAD_CONST              15 ('-no_mac')
             118 BUILD_LIST               3
             120 INPLACE_ADD
             122 STORE_FAST               1 (test_and_build_filters)
             124 JUMP_FORWARD            68 (to 194)
1141     >>  126 LOAD_GLOBAL              5 (is_linux)
             128 CALL_FUNCTION            0
             130 POP_JUMP_IF_FALSE      194
1142         132 LOAD_FAST                0 (environ_cp)
             134 LOAD_METHOD              3 (get)
             136 LOAD_CONST               7 ('TF_NEED_CUDA')
             138 LOAD_CONST               8 (None)
             140 CALL_METHOD              2
             142 LOAD_CONST               9 ('1')
             144 COMPARE_OP               2 (==)
             146 POP_JUMP_IF_TRUE       164
1143         148 LOAD_FAST                0 (environ_cp)
             150 LOAD_METHOD              3 (get)
             152 LOAD_CONST              10 ('TF_NEED_ROCM')
             154 LOAD_CONST               8 (None)
             156 CALL_METHOD              2
             158 LOAD_CONST               9 ('1')
             160 COMPARE_OP               2 (==)
1142         162 POP_JUMP_IF_FALSE      184
1144     >>  164 LOAD_FAST                1 (test_and_build_filters)
             166 LOAD_METHOD              2 (append)
             168 LOAD_CONST              12 ('-no_gpu')
             170 CALL_METHOD              1
             172 POP_TOP
1145         174 LOAD_GLOBAL              0 (write_to_bazelrc)
             176 LOAD_CONST              16 ('test --test_env=LD_LIBRARY_PATH')
             178 CALL_FUNCTION            1
             180 POP_TOP
             182 JUMP_FORWARD            10 (to 194)
1147     >>  184 LOAD_FAST                1 (test_and_build_filters)
             186 LOAD_METHOD              2 (append)
             188 LOAD_CONST              13 ('-gpu')
             190 CALL_METHOD              1
             192 POP_TOP
1150     >>  194 LOAD_GLOBAL              0 (write_to_bazelrc)
             196 LOAD_CONST              17 ('test:v1 --test_tag_filters=%s')
1151         198 LOAD_CONST              18 (',')
             200 LOAD_METHOD              6 (join)
             202 LOAD_FAST                1 (test_and_build_filters)
             204 LOAD_FAST                2 (test_only_filters)
             206 BINARY_ADD
             208 CALL_METHOD              1
1150         210 BINARY_MODULO
             212 CALL_FUNCTION            1
             214 POP_TOP
1152         216 LOAD_GLOBAL              0 (write_to_bazelrc)
             218 LOAD_CONST              19 ('test:v1 --build_tag_filters=%s')
1153         220 LOAD_CONST              18 (',')
             222 LOAD_METHOD              6 (join)
             224 LOAD_FAST                1 (test_and_build_filters)
             226 CALL_METHOD              1
1152         228 BINARY_MODULO
             230 CALL_FUNCTION            1
             232 POP_TOP
1154         234 LOAD_GLOBAL              0 (write_to_bazelrc)
1155         236 LOAD_CONST              20 ('test:v2 --test_tag_filters=%s')
1156         238 LOAD_CONST              18 (',')
             240 LOAD_METHOD              6 (join)
             242 LOAD_FAST                1 (test_and_build_filters)
             244 LOAD_FAST                2 (test_only_filters)
             246 BINARY_ADD
             248 LOAD_CONST              21 ('-v1only')
             250 BUILD_LIST               1
             252 BINARY_ADD
             254 CALL_METHOD              1
1155         256 BINARY_MODULO
1154         258 CALL_FUNCTION            1
             260 POP_TOP
1157         262 LOAD_GLOBAL              0 (write_to_bazelrc)
             264 LOAD_CONST              22 ('test:v2 --build_tag_filters=%s')
1158         266 LOAD_CONST              18 (',')
             268 LOAD_METHOD              6 (join)
             270 LOAD_FAST                1 (test_and_build_filters)
             272 LOAD_CONST              21 ('-v1only')
             274 BUILD_LIST               1
             276 BINARY_ADD
             278 CALL_METHOD              1
1157         280 BINARY_MODULO
             282 CALL_FUNCTION            1
             284 POP_TOP
             286 LOAD_CONST               8 (None)
             288 RETURN_VALUE
Disassembly of <code object set_system_libs_flag at 0x1102db240, file "<dis>", line 1161>:
1162           0 LOAD_FAST                0 (environ_cp)
               2 LOAD_METHOD              0 (get)
               4 LOAD_CONST               1 ('TF_SYSTEM_LIBS')
               6 LOAD_CONST               2 ('')
               8 CALL_METHOD              2
              10 STORE_FAST               1 (syslibs)
1163          12 LOAD_FAST                1 (syslibs)
              14 POP_JUMP_IF_FALSE       74
1164          16 LOAD_CONST               3 (',')
              18 LOAD_FAST                1 (syslibs)
              20 COMPARE_OP               6 (in)
              22 POP_JUMP_IF_FALSE       46
1165          24 LOAD_CONST               3 (',')
              26 LOAD_METHOD              1 (join)
              28 LOAD_GLOBAL              2 (sorted)
              30 LOAD_FAST                1 (syslibs)
              32 LOAD_METHOD              3 (split)
              34 LOAD_CONST               3 (',')
              36 CALL_METHOD              1
              38 CALL_FUNCTION            1
              40 CALL_METHOD              1
              42 STORE_FAST               1 (syslibs)
              44 JUMP_FORWARD            18 (to 64)
1167     >>   46 LOAD_CONST               3 (',')
              48 LOAD_METHOD              1 (join)
              50 LOAD_GLOBAL              2 (sorted)
              52 LOAD_FAST                1 (syslibs)
              54 LOAD_METHOD              3 (split)
              56 CALL_METHOD              0
              58 CALL_FUNCTION            1
              60 CALL_METHOD              1
              62 STORE_FAST               1 (syslibs)
1168     >>   64 LOAD_GLOBAL              4 (write_action_env_to_bazelrc)
              66 LOAD_CONST               1 ('TF_SYSTEM_LIBS')
              68 LOAD_FAST                1 (syslibs)
              70 CALL_FUNCTION            2
              72 POP_TOP
1170     >>   74 LOAD_CONST               4 (('PREFIX', 'LIBDIR', 'INCLUDEDIR', 'PROTOBUF_INCLUDE_PATH'))
              76 GET_ITER
         >>   78 FOR_ITER                32 (to 112)
              80 STORE_FAST               2 (varname)
1171          82 LOAD_FAST                2 (varname)
              84 LOAD_FAST                0 (environ_cp)
              86 COMPARE_OP               6 (in)
              88 POP_JUMP_IF_FALSE       78
1172          90 LOAD_GLOBAL              5 (write_to_bazelrc)
              92 LOAD_CONST               5 ('build --define=%s=%s')
              94 LOAD_FAST                2 (varname)
              96 LOAD_FAST                0 (environ_cp)
              98 LOAD_FAST                2 (varname)
             100 BINARY_SUBSCR
             102 BUILD_TUPLE              2
             104 BINARY_MODULO
             106 CALL_FUNCTION            1
             108 POP_TOP
             110 JUMP_ABSOLUTE           78
         >>  112 LOAD_CONST               0 (None)
             114 RETURN_VALUE
Disassembly of <code object set_windows_build_flags at 0x1102db190, file "<dis>", line 1175>:
1181           0 LOAD_GLOBAL              0 (write_to_bazelrc)
1182           2 LOAD_CONST               1 ('build --copt=/d2ReducedOptimizeHugeFunctions --host_copt=/d2ReducedOptimizeHugeFunctions')
1181           4 CALL_FUNCTION            1
               6 POP_TOP
1185           8 LOAD_GLOBAL              1 (get_var)
1186          10 LOAD_FAST                0 (environ_cp)
              12 LOAD_CONST               2 ('TF_OVERRIDE_EIGEN_STRONG_INLINE')
              14 LOAD_CONST               3 ('Eigen strong inline')
1187          16 LOAD_CONST               4 (True)
              18 LOAD_CONST               5 ('Would you like to override eigen strong inline for some C++ compilation to reduce the compilation time?')
1189          20 LOAD_CONST               6 ('Eigen strong inline overridden.')
              22 LOAD_CONST               7 ('Not overriding eigen strong inline, some compilations could take more than 20 mins.')
1185          24 CALL_FUNCTION            7
              26 POP_JUMP_IF_FALSE       36
1196          28 LOAD_GLOBAL              0 (write_to_bazelrc)
              30 LOAD_CONST               8 ('build --define=override_eigen_strong_inline=true')
              32 CALL_FUNCTION            1
              34 POP_TOP
         >>   36 LOAD_CONST               9 (None)
              38 RETURN_VALUE
Disassembly of <code object config_info_line at 0x1102db2f0, file "<dis>", line 1199>:
1201           0 LOAD_GLOBAL              0 (print)
               2 LOAD_CONST               1 ('\t--config=%-12s\t# %s')
               4 LOAD_FAST                0 (name)
               6 LOAD_FAST                1 (help_text)
               8 BUILD_TUPLE              2
              10 BINARY_MODULO
              12 CALL_FUNCTION            1
              14 POP_TOP
              16 LOAD_CONST               2 (None)
              18 RETURN_VALUE
Disassembly of <code object configure_ios at 0x1102db500, file "<dis>", line 1204>:
1206           0 LOAD_GLOBAL              0 (is_macos)
               2 CALL_FUNCTION            0
               4 POP_JUMP_IF_TRUE        10
1207           6 LOAD_CONST               1 (None)
               8 RETURN_VALUE
1208     >>   10 LOAD_GLOBAL              1 (get_var)
              12 LOAD_FAST                0 (environ_cp)
              14 LOAD_CONST               2 ('TF_CONFIGURE_IOS')
              16 LOAD_CONST               3 ('iOS')
              18 LOAD_CONST               4 (False)
              20 CALL_FUNCTION            4
              22 POP_JUMP_IF_TRUE        28
1209          24 LOAD_CONST               1 (None)
              26 RETURN_VALUE
1210     >>   28 LOAD_GLOBAL              2 (APPLE_BAZEL_FILES)
              30 GET_ITER
         >>   32 FOR_ITER                46 (to 80)
              34 STORE_FAST               1 (filepath)
1211          36 LOAD_GLOBAL              3 (os)
              38 LOAD_ATTR                4 (path)
              40 LOAD_METHOD              5 (join)
              42 LOAD_GLOBAL              6 (_TF_WORKSPACE_ROOT)
              44 LOAD_FAST                1 (filepath)
              46 LOAD_CONST               5 ('.apple')
              48 BINARY_ADD
              50 CALL_METHOD              2
              52 STORE_FAST               2 (existing_filepath)
1212          54 LOAD_GLOBAL              3 (os)
              56 LOAD_ATTR                4 (path)
              58 LOAD_METHOD              5 (join)
              60 LOAD_GLOBAL              6 (_TF_WORKSPACE_ROOT)
              62 LOAD_FAST                1 (filepath)
              64 CALL_METHOD              2
              66 STORE_FAST               3 (renamed_filepath)
1213          68 LOAD_GLOBAL              7 (symlink_force)
              70 LOAD_FAST                2 (existing_filepath)
              72 LOAD_FAST                3 (renamed_filepath)
              74 CALL_FUNCTION            2
              76 POP_TOP
              78 JUMP_ABSOLUTE           32
1214     >>   80 LOAD_GLOBAL              8 (IOS_FILES)
              82 GET_ITER
         >>   84 FOR_ITER                40 (to 126)
              86 STORE_FAST               1 (filepath)
1215          88 LOAD_GLOBAL              3 (os)
              90 LOAD_ATTR                4 (path)
              92 LOAD_METHOD              9 (basename)
              94 LOAD_FAST                1 (filepath)
              96 CALL_METHOD              1
              98 STORE_FAST               4 (filename)
1216         100 LOAD_GLOBAL              3 (os)
             102 LOAD_ATTR                4 (path)
             104 LOAD_METHOD              5 (join)
             106 LOAD_GLOBAL              6 (_TF_WORKSPACE_ROOT)
             108 LOAD_FAST                4 (filename)
             110 CALL_METHOD              2
             112 STORE_FAST               5 (new_filepath)
1217         114 LOAD_GLOBAL              7 (symlink_force)
             116 LOAD_FAST                1 (filepath)
             118 LOAD_FAST                5 (new_filepath)
             120 CALL_FUNCTION            2
             122 POP_TOP
             124 JUMP_ABSOLUTE           84
         >>  126 LOAD_CONST               1 (None)
             128 RETURN_VALUE
Disassembly of <code object validate_cuda_config at 0x1102db660, file "<dis>", line 1220>:
1223           0 LOAD_CONST               1 (<code object maybe_encode_env at 0x1102db3a0, file "<dis>", line 1223>)
               2 LOAD_CONST               2 ('validate_cuda_config.<locals>.maybe_encode_env')
               4 MAKE_FUNCTION            0
               6 STORE_FAST               1 (maybe_encode_env)
1235           8 LOAD_CONST               3 ('cuda')
              10 LOAD_CONST               4 ('cudnn')
              12 BUILD_LIST               2
              14 STORE_FAST               2 (cuda_libraries)
1236          16 LOAD_GLOBAL              0 (is_linux)
              18 CALL_FUNCTION            0
              20 POP_JUMP_IF_FALSE       70
1237          22 LOAD_GLOBAL              1 (int)
              24 LOAD_FAST                0 (environ_cp)
              26 LOAD_METHOD              2 (get)
              28 LOAD_CONST               5 ('TF_NEED_TENSORRT')
              30 LOAD_CONST               6 (False)
              32 CALL_METHOD              2
              34 CALL_FUNCTION            1
              36 POP_JUMP_IF_FALSE       48
1238          38 LOAD_FAST                2 (cuda_libraries)
              40 LOAD_METHOD              3 (append)
              42 LOAD_CONST               7 ('tensorrt')
              44 CALL_METHOD              1
              46 POP_TOP
1239     >>   48 LOAD_FAST                0 (environ_cp)
              50 LOAD_METHOD              2 (get)
              52 LOAD_CONST               8 ('TF_NCCL_VERSION')
              54 LOAD_CONST               9 (None)
              56 CALL_METHOD              2
              58 POP_JUMP_IF_FALSE       70
1240          60 LOAD_FAST                2 (cuda_libraries)
              62 LOAD_METHOD              3 (append)
              64 LOAD_CONST              10 ('nccl')
              66 CALL_METHOD              1
              68 POP_TOP
1241     >>   70 LOAD_GLOBAL              4 (is_windows)
              72 CALL_FUNCTION            0
              74 POP_JUMP_IF_FALSE      110
1242          76 LOAD_GLOBAL              1 (int)
              78 LOAD_FAST                0 (environ_cp)
              80 LOAD_METHOD              2 (get)
              82 LOAD_CONST               5 ('TF_NEED_TENSORRT')
              84 LOAD_CONST               6 (False)
              86 CALL_METHOD              2
              88 CALL_FUNCTION            1
              90 POP_JUMP_IF_FALSE      110
1243          92 LOAD_FAST                2 (cuda_libraries)
              94 LOAD_METHOD              3 (append)
              96 LOAD_CONST               7 ('tensorrt')
              98 CALL_METHOD              1
             100 POP_TOP
1244         102 LOAD_GLOBAL              5 (print)
             104 LOAD_CONST              11 ('WARNING: TensorRT support on Windows is experimental\n')
             106 CALL_FUNCTION            1
             108 POP_TOP
1246     >>  110 LOAD_GLOBAL              6 (glob)
             112 LOAD_ATTR                6 (glob)
             114 LOAD_CONST              12 ('**/third_party/gpus/find_cuda_config.py')
             116 LOAD_CONST              13 (True)
             118 LOAD_CONST              14 (('recursive',))
             120 CALL_FUNCTION_KW         2
             122 STORE_FAST               3 (paths)
1247         124 LOAD_FAST                3 (paths)
             126 POP_JUMP_IF_TRUE       136
1248         128 LOAD_GLOBAL              7 (FileNotFoundError)
1249         130 LOAD_CONST              15 ("Can't find 'find_cuda_config.py' script inside working directory")
1248         132 CALL_FUNCTION            1
             134 RAISE_VARARGS            1
1250     >>  136 LOAD_GLOBAL              8 (subprocess)
             138 LOAD_ATTR                9 (Popen)
1251         140 LOAD_FAST                0 (environ_cp)
             142 LOAD_CONST              16 ('PYTHON_BIN_PATH')
             144 BINARY_SUBSCR
             146 LOAD_FAST                3 (paths)
             148 LOAD_CONST              17 (0)
             150 BINARY_SUBSCR
             152 BUILD_LIST               2
             154 LOAD_FAST                2 (cuda_libraries)
             156 BINARY_ADD
1252         158 LOAD_GLOBAL              8 (subprocess)
             160 LOAD_ATTR               10 (PIPE)
1253         162 LOAD_FAST                1 (maybe_encode_env)
             164 LOAD_FAST                0 (environ_cp)
             166 CALL_FUNCTION            1
1250         168 LOAD_CONST              18 (('stdout', 'env'))
             170 CALL_FUNCTION_KW         3
             172 STORE_FAST               4 (proc)
1255         174 LOAD_FAST                4 (proc)
             176 LOAD_METHOD             11 (wait)
             178 CALL_METHOD              0
             180 POP_JUMP_IF_FALSE      194
1257         182 LOAD_GLOBAL              5 (print)
             184 LOAD_CONST              19 ('Asking for detailed CUDA configuration...\n')
             186 CALL_FUNCTION            1
             188 POP_TOP
1258         190 LOAD_CONST               6 (False)
             192 RETURN_VALUE
1260     >>  194 LOAD_GLOBAL             12 (dict)
             196 LOAD_CONST              20 (<code object <genexpr> at 0x1102db5b0, file "<dis>", line 1260>)
             198 LOAD_CONST              21 ('validate_cuda_config.<locals>.<genexpr>')
             200 MAKE_FUNCTION            0
1261         202 LOAD_FAST                4 (proc)
             204 LOAD_ATTR               13 (stdout)
1260         206 GET_ITER
             208 CALL_FUNCTION            1
             210 CALL_FUNCTION            1
             212 STORE_FAST               5 (config)
1263         214 LOAD_GLOBAL              5 (print)
             216 LOAD_CONST              22 ('Found CUDA %s in:')
             218 LOAD_FAST                5 (config)
             220 LOAD_CONST              23 ('cuda_version')
             222 BINARY_SUBSCR
             224 BINARY_MODULO
             226 CALL_FUNCTION            1
             228 POP_TOP
1264         230 LOAD_GLOBAL              5 (print)
             232 LOAD_CONST              24 ('    %s')
             234 LOAD_FAST                5 (config)
             236 LOAD_CONST              25 ('cuda_library_dir')
             238 BINARY_SUBSCR
             240 BINARY_MODULO
             242 CALL_FUNCTION            1
             244 POP_TOP
1265         246 LOAD_GLOBAL              5 (print)
             248 LOAD_CONST              24 ('    %s')
             250 LOAD_FAST                5 (config)
             252 LOAD_CONST              26 ('cuda_include_dir')
             254 BINARY_SUBSCR
             256 BINARY_MODULO
             258 CALL_FUNCTION            1
             260 POP_TOP
1267         262 LOAD_GLOBAL              5 (print)
             264 LOAD_CONST              27 ('Found cuDNN %s in:')
             266 LOAD_FAST                5 (config)
             268 LOAD_CONST              28 ('cudnn_version')
             270 BINARY_SUBSCR
             272 BINARY_MODULO
             274 CALL_FUNCTION            1
             276 POP_TOP
1268         278 LOAD_GLOBAL              5 (print)
             280 LOAD_CONST              24 ('    %s')
             282 LOAD_FAST                5 (config)
             284 LOAD_CONST              29 ('cudnn_library_dir')
             286 BINARY_SUBSCR
             288 BINARY_MODULO
             290 CALL_FUNCTION            1
             292 POP_TOP
1269         294 LOAD_GLOBAL              5 (print)
             296 LOAD_CONST              24 ('    %s')
             298 LOAD_FAST                5 (config)
             300 LOAD_CONST              30 ('cudnn_include_dir')
             302 BINARY_SUBSCR
             304 BINARY_MODULO
             306 CALL_FUNCTION            1
             308 POP_TOP
1271         310 LOAD_CONST              31 ('tensorrt_version')
             312 LOAD_FAST                5 (config)
             314 COMPARE_OP               6 (in)
             316 EXTENDED_ARG             1
             318 POP_JUMP_IF_FALSE      368
1272         320 LOAD_GLOBAL              5 (print)
             322 LOAD_CONST              32 ('Found TensorRT %s in:')
             324 LOAD_FAST                5 (config)
             326 LOAD_CONST              31 ('tensorrt_version')
             328 BINARY_SUBSCR
             330 BINARY_MODULO
             332 CALL_FUNCTION            1
             334 POP_TOP
1273         336 LOAD_GLOBAL              5 (print)
             338 LOAD_CONST              24 ('    %s')
             340 LOAD_FAST                5 (config)
             342 LOAD_CONST              33 ('tensorrt_library_dir')
             344 BINARY_SUBSCR
             346 BINARY_MODULO
             348 CALL_FUNCTION            1
             350 POP_TOP
1274         352 LOAD_GLOBAL              5 (print)
             354 LOAD_CONST              24 ('    %s')
             356 LOAD_FAST                5 (config)
             358 LOAD_CONST              34 ('tensorrt_include_dir')
             360 BINARY_SUBSCR
             362 BINARY_MODULO
             364 CALL_FUNCTION            1
             366 POP_TOP
1276     >>  368 LOAD_FAST                5 (config)
             370 LOAD_METHOD              2 (get)
             372 LOAD_CONST              35 ('nccl_version')
             374 LOAD_CONST               9 (None)
             376 CALL_METHOD              2
             378 EXTENDED_ARG             1
             380 POP_JUMP_IF_FALSE      430
1277         382 LOAD_GLOBAL              5 (print)
             384 LOAD_CONST              36 ('Found NCCL %s in:')
             386 LOAD_FAST                5 (config)
             388 LOAD_CONST              35 ('nccl_version')
             390 BINARY_SUBSCR
             392 BINARY_MODULO
             394 CALL_FUNCTION            1
             396 POP_TOP
1278         398 LOAD_GLOBAL              5 (print)
             400 LOAD_CONST              24 ('    %s')
             402 LOAD_FAST                5 (config)
             404 LOAD_CONST              37 ('nccl_library_dir')
             406 BINARY_SUBSCR
             408 BINARY_MODULO
             410 CALL_FUNCTION            1
             412 POP_TOP
1279         414 LOAD_GLOBAL              5 (print)
             416 LOAD_CONST              24 ('    %s')
             418 LOAD_FAST                5 (config)
             420 LOAD_CONST              38 ('nccl_include_dir')
             422 BINARY_SUBSCR
             424 BINARY_MODULO
             426 CALL_FUNCTION            1
             428 POP_TOP
1281     >>  430 LOAD_GLOBAL              5 (print)
             432 LOAD_CONST              39 ('\n')
             434 CALL_FUNCTION            1
             436 POP_TOP
1283         438 LOAD_FAST                5 (config)
             440 LOAD_CONST              40 ('cuda_toolkit_path')
             442 BINARY_SUBSCR
             444 LOAD_FAST                0 (environ_cp)
             446 LOAD_CONST              41 ('CUDA_TOOLKIT_PATH')
             448 STORE_SUBSCR
1284         450 LOAD_CONST              13 (True)
             452 RETURN_VALUE
Disassembly of <code object maybe_encode_env at 0x1102db3a0, file "<dis>", line 1223>:
1225           0 LOAD_GLOBAL              0 (is_windows)
               2 CALL_FUNCTION            0
               4 POP_JUMP_IF_FALSE       20
               6 LOAD_GLOBAL              1 (sys)
               8 LOAD_ATTR                2 (version_info)
              10 LOAD_CONST               1 (0)
              12 BINARY_SUBSCR
              14 LOAD_CONST               2 (2)
              16 COMPARE_OP               3 (!=)
              18 POP_JUMP_IF_FALSE       24
1226     >>   20 LOAD_FAST                0 (env)
              22 RETURN_VALUE
1227     >>   24 LOAD_FAST                0 (env)
              26 LOAD_METHOD              3 (items)
              28 CALL_METHOD              0
              30 GET_ITER
         >>   32 FOR_ITER                56 (to 90)
              34 UNPACK_SEQUENCE          2
              36 STORE_FAST               1 (k)
              38 STORE_FAST               2 (v)
1228          40 LOAD_GLOBAL              4 (isinstance)
              42 LOAD_FAST                1 (k)
              44 LOAD_GLOBAL              5 (unicode)
              46 CALL_FUNCTION            2
              48 POP_JUMP_IF_FALSE       60
1229          50 LOAD_FAST                1 (k)
              52 LOAD_METHOD              6 (encode)
              54 LOAD_CONST               3 ('ascii')
              56 CALL_METHOD              1
              58 STORE_FAST               1 (k)
1230     >>   60 LOAD_GLOBAL              4 (isinstance)
              62 LOAD_FAST                2 (v)
              64 LOAD_GLOBAL              5 (unicode)
              66 CALL_FUNCTION            2
              68 POP_JUMP_IF_FALSE       80
1231          70 LOAD_FAST                2 (v)
              72 LOAD_METHOD              6 (encode)
              74 LOAD_CONST               3 ('ascii')
              76 CALL_METHOD              1
              78 STORE_FAST               2 (v)
1232     >>   80 LOAD_FAST                2 (v)
              82 LOAD_FAST                0 (env)
              84 LOAD_FAST                1 (k)
              86 STORE_SUBSCR
              88 JUMP_ABSOLUTE           32
1233     >>   90 LOAD_FAST                0 (env)
              92 RETURN_VALUE
Disassembly of <code object <genexpr> at 0x1102db5b0, file "<dis>", line 1260>:
1260           0 LOAD_FAST                0 (.0)
         >>    2 FOR_ITER                30 (to 34)
1261           4 STORE_FAST               1 (line)
               6 LOAD_GLOBAL              0 (tuple)
               8 LOAD_FAST                1 (line)
              10 LOAD_METHOD              1 (decode)
              12 LOAD_CONST               0 ('ascii')
              14 CALL_METHOD              1
              16 LOAD_METHOD              2 (rstrip)
              18 CALL_METHOD              0
              20 LOAD_METHOD              3 (split)
              22 LOAD_CONST               1 (': ')
              24 CALL_METHOD              1
              26 CALL_FUNCTION            1
              28 YIELD_VALUE
              30 POP_TOP
              32 JUMP_ABSOLUTE            2
         >>   34 LOAD_CONST               2 (None)
              36 RETURN_VALUE
Disassembly of <code object main at 0x1102db710, file "<dis>", line 1287>:
1292           0 LOAD_GLOBAL              0 (argparse)
               2 LOAD_METHOD              1 (ArgumentParser)
               4 CALL_METHOD              0
               6 STORE_FAST               0 (parser)
1293           8 LOAD_FAST                0 (parser)
              10 LOAD_ATTR                2 (add_argument)
1294          12 LOAD_CONST               1 ('--workspace')
1295          14 LOAD_GLOBAL              3 (str)
1296          16 LOAD_GLOBAL              4 (os)
              18 LOAD_ATTR                5 (path)
              20 LOAD_METHOD              6 (abspath)
              22 LOAD_GLOBAL              4 (os)
              24 LOAD_ATTR                5 (path)
              26 LOAD_METHOD              7 (dirname)
              28 LOAD_GLOBAL              8 (__file__)
              30 CALL_METHOD              1
              32 CALL_METHOD              1
1297          34 LOAD_CONST               2 ('The absolute path to your active Bazel workspace.')
1293          36 LOAD_CONST               3 (('type', 'default', 'help'))
              38 CALL_FUNCTION_KW         4
              40 POP_TOP
1298          42 LOAD_FAST                0 (parser)
              44 LOAD_METHOD              9 (parse_args)
              46 CALL_METHOD              0
              48 STORE_FAST               1 (args)
1300          50 LOAD_FAST                1 (args)
              52 LOAD_ATTR               10 (workspace)
              54 STORE_GLOBAL            11 (_TF_WORKSPACE_ROOT)
1301          56 LOAD_GLOBAL              4 (os)
              58 LOAD_ATTR                5 (path)
              60 LOAD_METHOD             12 (join)
              62 LOAD_GLOBAL             11 (_TF_WORKSPACE_ROOT)
              64 LOAD_GLOBAL             13 (_TF_BAZELRC_FILENAME)
              66 CALL_METHOD              2
              68 STORE_GLOBAL            14 (_TF_BAZELRC)
1305          70 LOAD_GLOBAL             15 (dict)
              72 LOAD_GLOBAL              4 (os)
              74 LOAD_ATTR               16 (environ)
              76 CALL_FUNCTION            1
              78 STORE_FAST               2 (environ_cp)
1307          80 SETUP_FINALLY           14 (to 96)
1308          82 LOAD_GLOBAL             17 (check_bazel_version)
              84 LOAD_GLOBAL             18 (_TF_MIN_BAZEL_VERSION)
1309          86 LOAD_GLOBAL             19 (_TF_MAX_BAZEL_VERSION)
1308          88 CALL_FUNCTION            2
              90 STORE_FAST               3 (current_bazel_version)
              92 POP_BLOCK
              94 JUMP_FORWARD            62 (to 158)
1310     >>   96 DUP_TOP
              98 LOAD_GLOBAL             20 (subprocess)
             100 LOAD_ATTR               21 (CalledProcessError)
             102 COMPARE_OP              10 (exception match)
             104 POP_JUMP_IF_FALSE      156
             106 POP_TOP
             108 STORE_FAST               4 (e)
             110 POP_TOP
             112 SETUP_FINALLY           30 (to 144)
1311         114 LOAD_GLOBAL             22 (print)
             116 LOAD_CONST               4 ('Error checking bazel version: ')
             118 LOAD_FAST                4 (e)
             120 LOAD_ATTR               23 (output)
             122 LOAD_METHOD             24 (decode)
             124 LOAD_CONST               5 ('UTF-8')
             126 CALL_METHOD              1
             128 LOAD_METHOD             25 (strip)
             130 CALL_METHOD              0
             132 CALL_FUNCTION            2
             134 POP_TOP
1312         136 LOAD_FAST                4 (e)
             138 RAISE_VARARGS            1
             140 POP_BLOCK
             142 BEGIN_FINALLY
         >>  144 LOAD_CONST               0 (None)
             146 STORE_FAST               4 (e)
             148 DELETE_FAST              4 (e)
             150 END_FINALLY
             152 POP_EXCEPT
             154 JUMP_FORWARD             2 (to 158)
         >>  156 END_FINALLY
1314     >>  158 LOAD_GLOBAL             26 (convert_version_to_int)
             160 LOAD_FAST                3 (current_bazel_version)
             162 CALL_FUNCTION            1
             164 STORE_GLOBAL            27 (_TF_CURRENT_BAZEL_VERSION)
1316         166 LOAD_GLOBAL             28 (reset_tf_configure_bazelrc)
             168 CALL_FUNCTION            0
             170 POP_TOP
1318         172 LOAD_GLOBAL             29 (cleanup_makefile)
             174 CALL_FUNCTION            0
             176 POP_TOP
1319         178 LOAD_GLOBAL             30 (setup_python)
             180 LOAD_FAST                2 (environ_cp)
             182 CALL_FUNCTION            1
             184 POP_TOP
1321         186 LOAD_GLOBAL             31 (is_windows)
             188 CALL_FUNCTION            0
             190 POP_JUMP_IF_FALSE      224
1322         192 LOAD_CONST               6 ('0')
             194 LOAD_FAST                2 (environ_cp)
             196 LOAD_CONST               7 ('TF_NEED_OPENCL')
             198 STORE_SUBSCR
1323         200 LOAD_CONST               6 ('0')
             202 LOAD_FAST                2 (environ_cp)
             204 LOAD_CONST               8 ('TF_CUDA_CLANG')
             206 STORE_SUBSCR
1326         208 LOAD_CONST               6 ('0')
             210 LOAD_FAST                2 (environ_cp)
             212 LOAD_CONST               9 ('TF_DOWNLOAD_CLANG')
             214 STORE_SUBSCR
1327         216 LOAD_CONST               6 ('0')
             218 LOAD_FAST                2 (environ_cp)
             220 LOAD_CONST              10 ('TF_NEED_MPI')
             222 STORE_SUBSCR
1329     >>  224 LOAD_GLOBAL             32 (is_macos)
             226 CALL_FUNCTION            0
             228 POP_JUMP_IF_FALSE      238
1330         230 LOAD_CONST               6 ('0')
             232 LOAD_FAST                2 (environ_cp)
             234 LOAD_CONST              11 ('TF_NEED_TENSORRT')
             236 STORE_SUBSCR
1332     >>  238 LOAD_FAST                2 (environ_cp)
             240 LOAD_METHOD             33 (get)
             242 LOAD_CONST              12 ('TF_ENABLE_XLA')
             244 LOAD_CONST               0 (None)
             246 CALL_METHOD              2
             248 STORE_FAST               5 (with_xla_support)
1333         250 LOAD_FAST                5 (with_xla_support)
             252 LOAD_CONST               0 (None)
             254 COMPARE_OP               9 (is not)
             256 EXTENDED_ARG             1
             258 POP_JUMP_IF_FALSE      286
1334         260 LOAD_GLOBAL             34 (write_to_bazelrc)
             262 LOAD_CONST              13 ('build --define=with_xla_support=%s')
1335         264 LOAD_GLOBAL             35 (int)
             266 LOAD_FAST                5 (with_xla_support)
             268 CALL_FUNCTION            1
             270 EXTENDED_ARG             1
             272 POP_JUMP_IF_FALSE      278
             274 LOAD_CONST              14 ('true')
             276 JUMP_FORWARD             2 (to 280)
         >>  278 LOAD_CONST              15 ('false')
1334     >>  280 BINARY_MODULO
             282 CALL_FUNCTION            1
             284 POP_TOP
1337     >>  286 LOAD_GLOBAL             36 (set_action_env_var)
1338         288 LOAD_FAST                2 (environ_cp)
             290 LOAD_CONST              16 ('TF_NEED_ROCM')
             292 LOAD_CONST              17 ('ROCm')
             294 LOAD_CONST              18 (False)
             296 LOAD_CONST              19 ('rocm')
1337         298 LOAD_CONST              20 (('bazel_config_name',))
             300 CALL_FUNCTION_KW         5
             302 POP_TOP
1339         304 LOAD_FAST                2 (environ_cp)
             306 LOAD_METHOD             33 (get)
             308 LOAD_CONST              16 ('TF_NEED_ROCM')
             310 CALL_METHOD              1
             312 LOAD_CONST              21 ('1')
             314 COMPARE_OP               2 (==)
             316 EXTENDED_ARG             1
             318 POP_JUMP_IF_FALSE      362
1340         320 LOAD_CONST              22 ('LD_LIBRARY_PATH')
             322 LOAD_FAST                2 (environ_cp)
             324 COMPARE_OP               6 (in)
1339         326 EXTENDED_ARG             1
             328 POP_JUMP_IF_FALSE      362
1341         330 LOAD_FAST                2 (environ_cp)
             332 LOAD_METHOD             33 (get)
             334 LOAD_CONST              22 ('LD_LIBRARY_PATH')
             336 CALL_METHOD              1
             338 LOAD_CONST              21 ('1')
             340 COMPARE_OP               3 (!=)
1339         342 EXTENDED_ARG             1
             344 POP_JUMP_IF_FALSE      362
1342         346 LOAD_GLOBAL             37 (write_action_env_to_bazelrc)
             348 LOAD_CONST              22 ('LD_LIBRARY_PATH')
1343         350 LOAD_FAST                2 (environ_cp)
             352 LOAD_METHOD             33 (get)
             354 LOAD_CONST              22 ('LD_LIBRARY_PATH')
             356 CALL_METHOD              1
1342         358 CALL_FUNCTION            2
             360 POP_TOP
1345     >>  362 LOAD_FAST                2 (environ_cp)
             364 LOAD_METHOD             33 (get)
             366 LOAD_CONST              16 ('TF_NEED_ROCM')
             368 CALL_METHOD              1
             370 LOAD_CONST              21 ('1')
             372 COMPARE_OP               2 (==)
             374 EXTENDED_ARG             1
             376 POP_JUMP_IF_FALSE      426
             378 LOAD_FAST                2 (environ_cp)
             380 LOAD_METHOD             33 (get)
             382 LOAD_CONST              23 ('ROCM_PATH')
             384 CALL_METHOD              1
             386 EXTENDED_ARG             1
             388 POP_JUMP_IF_FALSE      426
1346         390 LOAD_GLOBAL             37 (write_action_env_to_bazelrc)
             392 LOAD_CONST              23 ('ROCM_PATH')
             394 LOAD_FAST                2 (environ_cp)
             396 LOAD_METHOD             33 (get)
             398 LOAD_CONST              23 ('ROCM_PATH')
             400 CALL_METHOD              1
             402 CALL_FUNCTION            2
             404 POP_TOP
1347         406 LOAD_GLOBAL             37 (write_action_env_to_bazelrc)
             408 LOAD_CONST              24 ('ROCBLAS_TENSILE_LIBPATH')
1348         410 LOAD_FAST                2 (environ_cp)
             412 LOAD_METHOD             33 (get)
             414 LOAD_CONST              23 ('ROCM_PATH')
             416 CALL_METHOD              1
             418 LOAD_CONST              25 ('/lib/library')
             420 BINARY_ADD
1347         422 CALL_FUNCTION            2
             424 POP_TOP
1350     >>  426 LOAD_FAST                2 (environ_cp)
             428 LOAD_METHOD             33 (get)
             430 LOAD_CONST              16 ('TF_NEED_ROCM')
             432 CALL_METHOD              1
             434 LOAD_CONST              21 ('1')
             436 COMPARE_OP               2 (==)
             438 EXTENDED_ARG             1
             440 POP_JUMP_IF_FALSE      470
             442 LOAD_FAST                2 (environ_cp)
             444 LOAD_METHOD             33 (get)
             446 LOAD_CONST              26 ('HIP_PLATFORM')
             448 CALL_METHOD              1
             450 EXTENDED_ARG             1
             452 POP_JUMP_IF_FALSE      470
1351         454 LOAD_GLOBAL             37 (write_action_env_to_bazelrc)
             456 LOAD_CONST              26 ('HIP_PLATFORM')
             458 LOAD_FAST                2 (environ_cp)
             460 LOAD_METHOD             33 (get)
             462 LOAD_CONST              26 ('HIP_PLATFORM')
             464 CALL_METHOD              1
             466 CALL_FUNCTION            2
             468 POP_TOP
1353     >>  470 LOAD_GLOBAL              3 (str)
1354         472 LOAD_GLOBAL             35 (int)
             474 LOAD_GLOBAL             38 (get_var)
             476 LOAD_FAST                2 (environ_cp)
             478 LOAD_CONST              27 ('TF_NEED_CUDA')
             480 LOAD_CONST              28 ('CUDA')
             482 LOAD_CONST              18 (False)
             484 CALL_FUNCTION            4
             486 CALL_FUNCTION            1
1353         488 CALL_FUNCTION            1
             490 LOAD_FAST                2 (environ_cp)
             492 LOAD_CONST              27 ('TF_NEED_CUDA')
             494 STORE_SUBSCR
1355         496 LOAD_FAST                2 (environ_cp)
             498 LOAD_METHOD             33 (get)
             500 LOAD_CONST              27 ('TF_NEED_CUDA')
             502 CALL_METHOD              1
             504 LOAD_CONST              21 ('1')
             506 COMPARE_OP               2 (==)
             508 EXTENDED_ARG             3
             510 POP_JUMP_IF_FALSE      870
1356         512 LOAD_CONST              29 ('TF_CUDA_CONFIG_REPO')
             514 LOAD_FAST                2 (environ_cp)
             516 COMPARE_OP               7 (not in)
1355         518 EXTENDED_ARG             3
             520 POP_JUMP_IF_FALSE      870
1358         522 LOAD_GLOBAL             36 (set_action_env_var)
1359         524 LOAD_FAST                2 (environ_cp)
1360         526 LOAD_CONST              11 ('TF_NEED_TENSORRT')
1361         528 LOAD_CONST              30 ('TensorRT')
1362         530 LOAD_CONST              18 (False)
1363         532 LOAD_CONST              31 ('tensorrt')
1358         534 LOAD_CONST              20 (('bazel_config_name',))
             536 CALL_FUNCTION_KW         5
             538 POP_TOP
1365         540 LOAD_GLOBAL             15 (dict)
             542 LOAD_FAST                2 (environ_cp)
             544 CALL_FUNCTION            1
             546 STORE_FAST               6 (environ_save)
1366         548 LOAD_GLOBAL             39 (range)
             550 LOAD_GLOBAL             40 (_DEFAULT_PROMPT_ASK_ATTEMPTS)
             552 CALL_FUNCTION            1
             554 GET_ITER
         >>  556 FOR_ITER               156 (to 714)
             558 STORE_FAST               7 (_)
1368         560 LOAD_GLOBAL             41 (validate_cuda_config)
             562 LOAD_FAST                2 (environ_cp)
             564 CALL_FUNCTION            1
             566 EXTENDED_ARG             2
             568 POP_JUMP_IF_FALSE      638
1370         570 LOAD_CONST              32 ('TF_CUDA_VERSION')
1371         572 LOAD_CONST              33 ('TF_CUBLAS_VERSION')
1372         574 LOAD_CONST              34 ('TF_CUDNN_VERSION')
1373         576 LOAD_CONST              35 ('TF_TENSORRT_VERSION')
1374         578 LOAD_CONST              36 ('TF_NCCL_VERSION')
1375         580 LOAD_CONST              37 ('TF_CUDA_PATHS')
1378         582 LOAD_CONST              38 ('CUDA_TOOLKIT_PATH')
1379         584 LOAD_CONST              39 ('CUDNN_INSTALL_PATH')
1380         586 LOAD_CONST              40 ('NCCL_INSTALL_PATH')
1381         588 LOAD_CONST              41 ('NCCL_HDR_PATH')
1382         590 LOAD_CONST              42 ('TENSORRT_INSTALL_PATH')
1369         592 BUILD_LIST              11
             594 STORE_FAST               8 (cuda_env_names)
1385         596 LOAD_FAST                8 (cuda_env_names)
             598 GET_ITER
         >>  600 FOR_ITER                30 (to 632)
             602 STORE_FAST               9 (name)
1386         604 LOAD_FAST                9 (name)
             606 LOAD_FAST                2 (environ_cp)
             608 COMPARE_OP               6 (in)
             610 EXTENDED_ARG             2
             612 POP_JUMP_IF_FALSE      600
1387         614 LOAD_GLOBAL             37 (write_action_env_to_bazelrc)
             616 LOAD_FAST                9 (name)
             618 LOAD_FAST                2 (environ_cp)
             620 LOAD_FAST                9 (name)
             622 BINARY_SUBSCR
             624 CALL_FUNCTION            2
             626 POP_TOP
             628 EXTENDED_ARG             2
             630 JUMP_ABSOLUTE          600
1388     >>  632 POP_TOP
             634 EXTENDED_ARG             2
             636 JUMP_ABSOLUTE          726
1391     >>  638 LOAD_GLOBAL             15 (dict)
             640 LOAD_FAST                6 (environ_save)
             642 CALL_FUNCTION            1
             644 STORE_FAST               2 (environ_cp)
1393         646 LOAD_GLOBAL             42 (set_tf_cuda_version)
             648 LOAD_FAST                2 (environ_cp)
             650 CALL_FUNCTION            1
             652 POP_TOP
1394         654 LOAD_GLOBAL             43 (set_tf_cudnn_version)
             656 LOAD_FAST                2 (environ_cp)
             658 CALL_FUNCTION            1
             660 POP_TOP
1395         662 LOAD_GLOBAL             31 (is_windows)
             664 CALL_FUNCTION            0
             666 EXTENDED_ARG             2
             668 POP_JUMP_IF_FALSE      678
1396         670 LOAD_GLOBAL             44 (set_tf_tensorrt_version)
             672 LOAD_FAST                2 (environ_cp)
             674 CALL_FUNCTION            1
             676 POP_TOP
1397     >>  678 LOAD_GLOBAL             45 (is_linux)
             680 CALL_FUNCTION            0
             682 EXTENDED_ARG             2
             684 POP_JUMP_IF_FALSE      702
1398         686 LOAD_GLOBAL             44 (set_tf_tensorrt_version)
             688 LOAD_FAST                2 (environ_cp)
             690 CALL_FUNCTION            1
             692 POP_TOP
1399         694 LOAD_GLOBAL             46 (set_tf_nccl_version)
             696 LOAD_FAST                2 (environ_cp)
             698 CALL_FUNCTION            1
             700 POP_TOP
1401     >>  702 LOAD_GLOBAL             47 (set_tf_cuda_paths)
             704 LOAD_FAST                2 (environ_cp)
             706 CALL_FUNCTION            1
             708 POP_TOP
             710 EXTENDED_ARG             2
             712 JUMP_ABSOLUTE          556
1404     >>  714 LOAD_GLOBAL             48 (UserInputError)
1405         716 LOAD_CONST              43 ('Invalid CUDA setting were provided %d times in a row. Assuming to be a scripting mistake.')
1407         718 LOAD_GLOBAL             40 (_DEFAULT_PROMPT_ASK_ATTEMPTS)
1405         720 BINARY_MODULO
1404         722 CALL_FUNCTION            1
             724 RAISE_VARARGS            1
1409     >>  726 LOAD_GLOBAL             49 (set_tf_cuda_compute_capabilities)
             728 LOAD_FAST                2 (environ_cp)
             730 CALL_FUNCTION            1
             732 POP_TOP
1410         734 LOAD_CONST              22 ('LD_LIBRARY_PATH')
             736 LOAD_FAST                2 (environ_cp)
             738 COMPARE_OP               6 (in)
             740 EXTENDED_ARG             3
             742 POP_JUMP_IF_FALSE      776
             744 LOAD_FAST                2 (environ_cp)
             746 LOAD_METHOD             33 (get)
1411         748 LOAD_CONST              22 ('LD_LIBRARY_PATH')
1410         750 CALL_METHOD              1
1411         752 LOAD_CONST              21 ('1')
1410         754 COMPARE_OP               3 (!=)
             756 EXTENDED_ARG             3
             758 POP_JUMP_IF_FALSE      776
1412         760 LOAD_GLOBAL             37 (write_action_env_to_bazelrc)
             762 LOAD_CONST              22 ('LD_LIBRARY_PATH')
1413         764 LOAD_FAST                2 (environ_cp)
             766 LOAD_METHOD             33 (get)
             768 LOAD_CONST              22 ('LD_LIBRARY_PATH')
             770 CALL_METHOD              1
1412         772 CALL_FUNCTION            2
             774 POP_TOP
1415     >>  776 LOAD_GLOBAL             50 (set_tf_cuda_clang)
             778 LOAD_FAST                2 (environ_cp)
             780 CALL_FUNCTION            1
             782 POP_TOP
1416         784 LOAD_FAST                2 (environ_cp)
             786 LOAD_METHOD             33 (get)
             788 LOAD_CONST               8 ('TF_CUDA_CLANG')
             790 CALL_METHOD              1
             792 LOAD_CONST              21 ('1')
             794 COMPARE_OP               2 (==)
             796 EXTENDED_ARG             3
             798 POP_JUMP_IF_FALSE      844
1418         800 LOAD_GLOBAL             51 (set_tf_download_clang)
             802 LOAD_FAST                2 (environ_cp)
             804 CALL_FUNCTION            1
             806 POP_TOP
1419         808 LOAD_FAST                2 (environ_cp)
             810 LOAD_METHOD             33 (get)
             812 LOAD_CONST               9 ('TF_DOWNLOAD_CLANG')
             814 CALL_METHOD              1
             816 LOAD_CONST              21 ('1')
             818 COMPARE_OP               3 (!=)
             820 EXTENDED_ARG             3
             822 POP_JUMP_IF_FALSE      834
1421         824 LOAD_GLOBAL             52 (set_clang_cuda_compiler_path)
             826 LOAD_FAST                2 (environ_cp)
             828 CALL_FUNCTION            1
             830 POP_TOP
             832 JUMP_FORWARD             8 (to 842)
1424     >>  834 LOAD_GLOBAL             34 (write_to_bazelrc)
             836 LOAD_CONST              44 ('build:cuda_clang --config=download_clang_use_lld')
             838 CALL_FUNCTION            1
             840 POP_TOP
         >>  842 JUMP_FORWARD            16 (to 860)
1428     >>  844 LOAD_GLOBAL             31 (is_windows)
             846 CALL_FUNCTION            0
             848 EXTENDED_ARG             3
             850 POP_JUMP_IF_TRUE       860
1429         852 LOAD_GLOBAL             53 (set_gcc_host_compiler_path)
             854 LOAD_FAST                2 (environ_cp)
             856 CALL_FUNCTION            1
             858 POP_TOP
1430     >>  860 LOAD_GLOBAL             54 (set_other_cuda_vars)
             862 LOAD_FAST                2 (environ_cp)
             864 CALL_FUNCTION            1
             866 POP_TOP
             868 JUMP_FORWARD             8 (to 878)
1434     >>  870 LOAD_GLOBAL             51 (set_tf_download_clang)
             872 LOAD_FAST                2 (environ_cp)
             874 CALL_FUNCTION            1
             876 POP_TOP
1438     >>  878 LOAD_CONST              45 (0)
             880 STORE_FAST              10 (gpu_platform_count)
1439         882 LOAD_FAST                2 (environ_cp)
             884 LOAD_METHOD             33 (get)
             886 LOAD_CONST              16 ('TF_NEED_ROCM')
             888 CALL_METHOD              1
             890 LOAD_CONST              21 ('1')
             892 COMPARE_OP               2 (==)
             894 EXTENDED_ARG             3
             896 POP_JUMP_IF_FALSE      906
1440         898 LOAD_FAST               10 (gpu_platform_count)
             900 LOAD_CONST              46 (1)
             902 INPLACE_ADD
             904 STORE_FAST              10 (gpu_platform_count)
1441     >>  906 LOAD_FAST                2 (environ_cp)
             908 LOAD_METHOD             33 (get)
             910 LOAD_CONST              27 ('TF_NEED_CUDA')
             912 CALL_METHOD              1
             914 LOAD_CONST              21 ('1')
             916 COMPARE_OP               2 (==)
             918 EXTENDED_ARG             3
             920 POP_JUMP_IF_FALSE      930
1442         922 LOAD_FAST               10 (gpu_platform_count)
             924 LOAD_CONST              46 (1)
             926 INPLACE_ADD
             928 STORE_FAST              10 (gpu_platform_count)
1443     >>  930 LOAD_FAST               10 (gpu_platform_count)
             932 LOAD_CONST              47 (2)
             934 COMPARE_OP               5 (>=)
             936 EXTENDED_ARG             3
             938 POP_JUMP_IF_FALSE      948
1444         940 LOAD_GLOBAL             48 (UserInputError)
             942 LOAD_CONST              48 ('CUDA / ROCm are mututally exclusive. At most 1 GPU platform can be configured.')
             944 CALL_FUNCTION            1
             946 RAISE_VARARGS            1
1447     >>  948 LOAD_GLOBAL             55 (set_cc_opt_flags)
             950 LOAD_FAST                2 (environ_cp)
             952 CALL_FUNCTION            1
             954 POP_TOP
1448         956 LOAD_GLOBAL             56 (set_system_libs_flag)
             958 LOAD_FAST                2 (environ_cp)
             960 CALL_FUNCTION            1
             962 POP_TOP
1449         964 LOAD_GLOBAL             31 (is_windows)
             966 CALL_FUNCTION            0
             968 EXTENDED_ARG             3
             970 POP_JUMP_IF_FALSE      980
1450         972 LOAD_GLOBAL             57 (set_windows_build_flags)
             974 LOAD_FAST                2 (environ_cp)
             976 CALL_FUNCTION            1
             978 POP_TOP
1452     >>  980 LOAD_GLOBAL             38 (get_var)
             982 LOAD_FAST                2 (environ_cp)
             984 LOAD_CONST              49 ('TF_SET_ANDROID_WORKSPACE')
             986 LOAD_CONST              50 ('android workspace')
             988 LOAD_CONST              18 (False)
1453         990 LOAD_CONST              51 ('Would you like to interactively configure ./WORKSPACE for Android builds?')
1454         992 LOAD_CONST              52 ('Searching for NDK and SDK installations.')
1455         994 LOAD_CONST              53 ('Not configuring the WORKSPACE for Android builds.')
1452         996 CALL_FUNCTION            7
             998 EXTENDED_ARG             3
            1000 POP_JUMP_IF_FALSE     1018
1456        1002 LOAD_GLOBAL             58 (create_android_ndk_rule)
            1004 LOAD_FAST                2 (environ_cp)
            1006 CALL_FUNCTION            1
            1008 POP_TOP
1457        1010 LOAD_GLOBAL             59 (create_android_sdk_rule)
            1012 LOAD_FAST                2 (environ_cp)
            1014 CALL_FUNCTION            1
            1016 POP_TOP
1459     >> 1018 LOAD_GLOBAL             60 (system_specific_test_config)
            1020 LOAD_FAST                2 (environ_cp)
            1022 CALL_FUNCTION            1
            1024 POP_TOP
1461        1026 LOAD_GLOBAL             61 (configure_ios)
            1028 LOAD_FAST                2 (environ_cp)
            1030 CALL_FUNCTION            1
            1032 POP_TOP
1463        1034 LOAD_GLOBAL             22 (print)
            1036 LOAD_CONST              54 ('Preconfigured Bazel build configs. You can use any of the below by adding "--config=<>" to your build command. See .bazelrc for more details.')
            1038 CALL_FUNCTION            1
            1040 POP_TOP
1466        1042 LOAD_GLOBAL             62 (config_info_line)
            1044 LOAD_CONST              55 ('mkl')
            1046 LOAD_CONST              56 ('Build with MKL support.')
            1048 CALL_FUNCTION            2
            1050 POP_TOP
1467        1052 LOAD_GLOBAL             62 (config_info_line)
1468        1054 LOAD_CONST              57 ('mkl_aarch64')
1469        1056 LOAD_CONST              58 ('Build with oneDNN and Compute Library for the Arm Architecture (ACL).')
1467        1058 CALL_FUNCTION            2
            1060 POP_TOP
1470        1062 LOAD_GLOBAL             62 (config_info_line)
            1064 LOAD_CONST              59 ('monolithic')
            1066 LOAD_CONST              60 ('Config for mostly static monolithic build.')
            1068 CALL_FUNCTION            2
            1070 POP_TOP
1471        1072 LOAD_GLOBAL             62 (config_info_line)
            1074 LOAD_CONST              61 ('numa')
            1076 LOAD_CONST              62 ('Build with NUMA support.')
            1078 CALL_FUNCTION            2
            1080 POP_TOP
1472        1082 LOAD_GLOBAL             62 (config_info_line)
1473        1084 LOAD_CONST              63 ('dynamic_kernels')
1474        1086 LOAD_CONST              64 ('(Experimental) Build kernels into separate shared objects.')
1472        1088 CALL_FUNCTION            2
            1090 POP_TOP
1475        1092 LOAD_GLOBAL             62 (config_info_line)
            1094 LOAD_CONST              65 ('v1')
            1096 LOAD_CONST              66 ('Build with TensorFlow 1 API instead of TF 2 API.')
            1098 CALL_FUNCTION            2
            1100 POP_TOP
1477        1102 LOAD_GLOBAL             22 (print)
            1104 LOAD_CONST              67 ('Preconfigured Bazel build configs to DISABLE default on features:')
            1106 CALL_FUNCTION            1
            1108 POP_TOP
1478        1110 LOAD_GLOBAL             62 (config_info_line)
            1112 LOAD_CONST              68 ('nogcp')
            1114 LOAD_CONST              69 ('Disable GCP support.')
            1116 CALL_FUNCTION            2
            1118 POP_TOP
1479        1120 LOAD_GLOBAL             62 (config_info_line)
            1122 LOAD_CONST              70 ('nonccl')
            1124 LOAD_CONST              71 ('Disable NVIDIA NCCL support.')
            1126 CALL_FUNCTION            2
            1128 POP_TOP
            1130 LOAD_CONST               0 (None)
            1132 RETURN_VALUE
