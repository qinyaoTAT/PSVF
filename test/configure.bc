  15           0 LOAD_CONST               0 ('configure script to get build parameters from user.')
               2 STORE_NAME               0 (__doc__)
  17           4 LOAD_CONST               1 (0)
               6 LOAD_CONST               2 (None)
               8 IMPORT_NAME              1 (argparse)
              10 STORE_NAME               1 (argparse)
  18          12 LOAD_CONST               1 (0)
              14 LOAD_CONST               2 (None)
              16 IMPORT_NAME              2 (errno)
              18 STORE_NAME               2 (errno)
  19          20 LOAD_CONST               1 (0)
              22 LOAD_CONST               2 (None)
              24 IMPORT_NAME              3 (glob)
              26 STORE_NAME               3 (glob)
  20          28 LOAD_CONST               1 (0)
              30 LOAD_CONST               2 (None)
              32 IMPORT_NAME              4 (os)
              34 STORE_NAME               4 (os)
  21          36 LOAD_CONST               1 (0)
              38 LOAD_CONST               2 (None)
              40 IMPORT_NAME              5 (platform)
              42 STORE_NAME               5 (platform)
  22          44 LOAD_CONST               1 (0)
              46 LOAD_CONST               2 (None)
              48 IMPORT_NAME              6 (re)
              50 STORE_NAME               6 (re)
  23          52 LOAD_CONST               1 (0)
              54 LOAD_CONST               2 (None)
              56 IMPORT_NAME              7 (subprocess)
              58 STORE_NAME               7 (subprocess)
  24          60 LOAD_CONST               1 (0)
              62 LOAD_CONST               2 (None)
              64 IMPORT_NAME              8 (sys)
              66 STORE_NAME               8 (sys)
  27          68 SETUP_FINALLY           16 (to 86)
  28          70 LOAD_CONST               1 (0)
              72 LOAD_CONST               3 (('which',))
              74 IMPORT_NAME              9 (shutil)
              76 IMPORT_FROM             10 (which)
              78 STORE_NAME              10 (which)
              80 POP_TOP
              82 POP_BLOCK
              84 JUMP_FORWARD            32 (to 118)
  29     >>   86 DUP_TOP
              88 LOAD_NAME               11 (ImportError)
              90 COMPARE_OP              10 (exception match)
              92 POP_JUMP_IF_FALSE      116
              94 POP_TOP
              96 POP_TOP
              98 POP_TOP
  30         100 LOAD_CONST               1 (0)
             102 LOAD_CONST               4 (('find_executable',))
             104 IMPORT_NAME             12 (distutils.spawn)
             106 IMPORT_FROM             13 (find_executable)
             108 STORE_NAME              10 (which)
             110 POP_TOP
             112 POP_EXCEPT
             114 JUMP_FORWARD             2 (to 118)
         >>  116 END_FINALLY
  33     >>  118 LOAD_CONST               5 ('10')
             120 STORE_NAME              14 (_DEFAULT_CUDA_VERSION)
  34         122 LOAD_CONST               6 ('7')
             124 STORE_NAME              15 (_DEFAULT_CUDNN_VERSION)
  35         126 LOAD_CONST               7 ('6')
             128 STORE_NAME              16 (_DEFAULT_TENSORRT_VERSION)
  36         130 LOAD_CONST               8 ('3.5,7.0')
             132 STORE_NAME              17 (_DEFAULT_CUDA_COMPUTE_CAPABILITIES)
  39         134 LOAD_CONST               9 (10)
             136 LOAD_CONST              10 (11)
             138 LOAD_CONST              11 (12)
             140 LOAD_CONST              12 (13)
             142 LOAD_CONST              13 (14)
             144 LOAD_CONST              14 (15)
             146 LOAD_CONST              15 (16)
             148 LOAD_CONST              16 (17)
             150 LOAD_CONST              17 (18)
             152 LOAD_CONST              18 (19)
             154 LOAD_CONST              19 (20)
             156 LOAD_CONST              20 (21)
  38         158 BUILD_LIST              12
             160 STORE_NAME              18 (_SUPPORTED_ANDROID_NDK_VERSIONS)
  42         162 LOAD_CONST               9 (10)
             164 STORE_NAME              19 (_DEFAULT_PROMPT_ASK_ATTEMPTS)
  44         166 LOAD_CONST              21 ('.tf_configure.bazelrc')
             168 STORE_NAME              20 (_TF_BAZELRC_FILENAME)
  45         170 LOAD_CONST              22 ('')
             172 STORE_GLOBAL            21 (_TF_WORKSPACE_ROOT)
  46         174 LOAD_CONST              22 ('')
             176 STORE_GLOBAL            22 (_TF_BAZELRC)
  47         178 LOAD_CONST               2 (None)
             180 STORE_GLOBAL            23 (_TF_CURRENT_BAZEL_VERSION)
  48         182 LOAD_CONST              23 ('4.2.1')
             184 STORE_NAME              24 (_TF_MIN_BAZEL_VERSION)
  49         186 LOAD_CONST              24 ('4.99.0')
             188 STORE_NAME              25 (_TF_MAX_BAZEL_VERSION)
  50         190 LOAD_NAME               25 (_TF_MAX_BAZEL_VERSION)
             192 STORE_NAME              26 (_TF_MAX_BAZEL_VERSION_1)
  54         194 LOAD_CONST              25 ('lib64/')
             196 LOAD_CONST              26 ('src/powerpc64le-linux-gnu/')
             198 LOAD_CONST              27 ('src/x86_64-linux-gnu/')
             200 LOAD_NAME               26 (_TF_MAX_BAZEL_VERSION_1)
  53         202 BUILD_LIST               4
             204 STORE_NAME              27 (NCCL_LIB_PATHS)
  59         206 LOAD_CONST              28 ('tensorflow/lite/ios/BUILD')
             208 LOAD_CONST              29 ('tensorflow/lite/objc/BUILD')
  60         210 LOAD_CONST              30 ('tensorflow/lite/swift/BUILD')
  61         212 LOAD_CONST              31 ('tensorflow/lite/tools/benchmark/experimental/ios/BUILD')
  58         214 BUILD_LIST               4
             216 STORE_NAME              28 (APPLE_BAZEL_FILES)
  66         218 LOAD_CONST              32 ('tensorflow/lite/objc/TensorFlowLiteObjC.podspec')
  67         220 LOAD_CONST              33 ('tensorflow/lite/swift/TensorFlowLiteSwift.podspec')
  65         222 BUILD_LIST               2
             224 STORE_NAME              29 (IOS_FILES)
  71         226 LOAD_BUILD_CLASS
             228 LOAD_CONST              34 (<code object UserInputError at 0x000001857DB807C0, file "<dis>", line 71>)
             230 LOAD_CONST              35 ('UserInputError')
             232 MAKE_FUNCTION            0
             234 LOAD_CONST              35 ('UserInputError')
             236 LOAD_NAME               30 (Exception)
             238 CALL_FUNCTION            3
             240 STORE_NAME              31 (UserInputError)
  75         242 LOAD_CONST              36 (<code object is_windows at 0x000001857DB80870, file "<dis>", line 75>)
             244 LOAD_CONST              37 ('is_windows')
             246 MAKE_FUNCTION            0
             248 STORE_NAME              32 (is_windows)
  79         250 LOAD_CONST              38 (<code object is_linux at 0x000001857DB80920, file "<dis>", line 79>)
             252 LOAD_CONST              39 ('is_linux')
             254 MAKE_FUNCTION            0
             256 STORE_NAME              33 (is_linux)
  83         258 LOAD_CONST              40 (<code object is_macos at 0x000001857DB809D0, file "<dis>", line 83>)
             260 LOAD_CONST              41 ('is_macos')
             262 MAKE_FUNCTION            0
             264 STORE_NAME              34 (is_macos)
  87         266 LOAD_CONST              42 (<code object is_ppc64le at 0x000001857DB80A80, file "<dis>", line 87>)
             268 LOAD_CONST              43 ('is_ppc64le')
             270 MAKE_FUNCTION            0
             272 STORE_NAME              35 (is_ppc64le)
  91         274 LOAD_CONST              44 (<code object is_cygwin at 0x000001857DB80B30, file "<dis>", line 91>)
             276 LOAD_CONST              45 ('is_cygwin')
             278 MAKE_FUNCTION            0
             280 STORE_NAME              36 (is_cygwin)
  95         282 LOAD_CONST              46 (<code object get_input at 0x000001857DB80BE0, file "<dis>", line 95>)
             284 LOAD_CONST              47 ('get_input')
             286 MAKE_FUNCTION            0
             288 STORE_NAME              37 (get_input)
 106         290 LOAD_CONST              48 (<code object symlink_force at 0x000001857DB80C90, file "<dis>", line 106>)
             292 LOAD_CONST              49 ('symlink_force')
             294 MAKE_FUNCTION            0
             296 STORE_NAME              38 (symlink_force)
 123         298 LOAD_CONST              50 (<code object sed_in_place at 0x000001857DB80D40, file "<dis>", line 123>)
             300 LOAD_CONST              51 ('sed_in_place')
             302 MAKE_FUNCTION            0
             304 STORE_NAME              39 (sed_in_place)
 138         306 LOAD_CONST              52 (<code object write_to_bazelrc at 0x000001857DB80DF0, file "<dis>", line 138>)
             308 LOAD_CONST              53 ('write_to_bazelrc')
             310 MAKE_FUNCTION            0
             312 STORE_NAME              40 (write_to_bazelrc)
 143         314 LOAD_CONST              54 (<code object write_action_env_to_bazelrc at 0x000001857DB80EA0, file "<dis>", line 143>)
             316 LOAD_CONST              55 ('write_action_env_to_bazelrc')
             318 MAKE_FUNCTION            0
             320 STORE_NAME              41 (write_action_env_to_bazelrc)
 147         322 LOAD_CONST             140 ((False, None))
             324 LOAD_CONST              57 (<code object run_shell at 0x000001857DB8E030, file "<dis>", line 147>)
             326 LOAD_CONST              58 ('run_shell')
             328 MAKE_FUNCTION            1 (defaults)
             330 STORE_NAME              42 (run_shell)
 160         332 LOAD_CONST              59 (<code object cygpath at 0x000001857DB80F50, file "<dis>", line 160>)
             334 LOAD_CONST              60 ('cygpath')
             336 MAKE_FUNCTION            0
             338 STORE_NAME              43 (cygpath)
 165         340 LOAD_CONST              61 (<code object get_python_path at 0x000001857DB8E0E0, file "<dis>", line 165>)
             342 LOAD_CONST              62 ('get_python_path')
             344 MAKE_FUNCTION            0
             346 STORE_NAME              44 (get_python_path)
 197         348 LOAD_CONST              63 (<code object get_python_major_version at 0x000001857D8ACC90, file "<dis>", line 197>)
             350 LOAD_CONST              64 ('get_python_major_version')
             352 MAKE_FUNCTION            0
             354 STORE_NAME              45 (get_python_major_version)
 202         356 LOAD_CONST              65 (<code object setup_python at 0x000001857D7FA920, file "<dis>", line 202>)
             358 LOAD_CONST              66 ('setup_python')
             360 MAKE_FUNCTION            0
             362 STORE_NAME              46 (setup_python)
 272         364 LOAD_CONST              67 (<code object reset_tf_configure_bazelrc at 0x000001857D7F5A80, file "<dis>", line 272>)
             366 LOAD_CONST              68 ('reset_tf_configure_bazelrc')
             368 MAKE_FUNCTION            0
             370 STORE_NAME              47 (reset_tf_configure_bazelrc)
 277         372 LOAD_CONST              69 (<code object cleanup_makefile at 0x000001857D7FA7C0, file "<dis>", line 277>)
             374 LOAD_CONST              70 ('cleanup_makefile')
             376 MAKE_FUNCTION            0
             378 STORE_NAME              48 (cleanup_makefile)
 291         380 LOAD_CONST             141 ((None, None, None))
             382 LOAD_CONST              71 (<code object get_var at 0x000001857D7FA5B0, file "<dis>", line 291>)
             384 LOAD_CONST              72 ('get_var')
             386 MAKE_FUNCTION            1 (defaults)
             388 STORE_NAME              49 (get_var)
 376         390 LOAD_CONST             142 ((None,))
             392 LOAD_CONST              73 (<code object set_build_var at 0x000001857D7FA500, file "<dis>", line 376>)
             394 LOAD_CONST              74 ('set_build_var')
             396 MAKE_FUNCTION            1 (defaults)
             398 STORE_NAME              50 (set_build_var)
 410         400 LOAD_CONST             143 ((None, None, None, None))
             402 LOAD_CONST              75 (<code object set_action_env_var at 0x000001857D7FA660, file "<dis>", line 410>)
             404 LOAD_CONST              76 ('set_action_env_var')
             406 MAKE_FUNCTION            1 (defaults)
             408 STORE_NAME              51 (set_action_env_var)
 445         410 LOAD_CONST              77 (<code object convert_version_to_int at 0x000001857D7FA870, file "<dis>", line 445>)
             412 LOAD_CONST              78 ('convert_version_to_int')
             414 MAKE_FUNCTION            0
             416 STORE_NAME              52 (convert_version_to_int)
 470         418 LOAD_CONST              79 (<code object check_bazel_version at 0x000001857D0839D0, file "<dis>", line 470>)
             420 LOAD_CONST              80 ('check_bazel_version')
             422 MAKE_FUNCTION            0
             424 STORE_NAME              53 (check_bazel_version)
 518         426 LOAD_CONST              81 (<code object set_cc_opt_flags at 0x000001857D083A80, file "<dis>", line 518>)
             428 LOAD_CONST              82 ('set_cc_opt_flags')
             430 MAKE_FUNCTION            0
             432 STORE_NAME              54 (set_cc_opt_flags)
 548         434 LOAD_CONST              83 (<code object set_tf_cuda_clang at 0x000001857DB8E190, file "<dis>", line 548>)
             436 LOAD_CONST              84 ('set_tf_cuda_clang')
             438 MAKE_FUNCTION            0
             440 STORE_NAME              55 (set_tf_cuda_clang)
 568         442 LOAD_CONST              85 (<code object set_tf_download_clang at 0x000001857DB8E240, file "<dis>", line 568>)
             444 LOAD_CONST              86 ('set_tf_download_clang')
             446 MAKE_FUNCTION            0
             448 STORE_NAME              56 (set_tf_download_clang)
 584         450 LOAD_CONST              87 (<code object get_from_env_or_user_or_default at 0x000001857DB8E2F0, file "<dis>", line 584>)
             452 LOAD_CONST              88 ('get_from_env_or_user_or_default')
             454 MAKE_FUNCTION            0
             456 STORE_NAME              57 (get_from_env_or_user_or_default)
 609         458 LOAD_CONST              89 (<code object set_clang_cuda_compiler_path at 0x000001857DB8E3A0, file "<dis>", line 609>)
             460 LOAD_CONST              90 ('set_clang_cuda_compiler_path')
             462 MAKE_FUNCTION            0
             464 STORE_NAME              58 (set_clang_cuda_compiler_path)
 638         466 LOAD_CONST              56 (False)
 639         468 LOAD_CONST              56 (False)
 640         470 LOAD_NAME               19 (_DEFAULT_PROMPT_ASK_ATTEMPTS)
 632         472 BUILD_TUPLE              3
             474 LOAD_CONST              91 (<code object prompt_loop_or_load_from_env at 0x000001857DB8E450, file "<dis>", line 632>)
             476 LOAD_CONST              92 ('prompt_loop_or_load_from_env')
             478 MAKE_FUNCTION            1 (defaults)
             480 STORE_NAME              59 (prompt_loop_or_load_from_env)
 698         482 LOAD_CONST              93 (<code object create_android_ndk_rule at 0x000001857DB8E660, file "<dis>", line 698>)
             484 LOAD_CONST              94 ('create_android_ndk_rule')
             486 MAKE_FUNCTION            0
             488 STORE_NAME              60 (create_android_ndk_rule)
 726         490 LOAD_CONST              95 (<code object create_android_sdk_rule at 0x000001857DB8E920, file "<dis>", line 726>)
             492 LOAD_CONST              96 ('create_android_sdk_rule')
             494 MAKE_FUNCTION            0
             496 STORE_NAME              61 (create_android_sdk_rule)
 790         498 LOAD_CONST              97 (<code object get_ndk_api_level at 0x000001857DB8EB30, file "<dis>", line 790>)
             500 LOAD_CONST              98 ('get_ndk_api_level')
             502 MAKE_FUNCTION            0
             504 STORE_NAME              62 (get_ndk_api_level)
 838         506 LOAD_CONST              99 (<code object set_gcc_host_compiler_path at 0x000001857DB8EBE0, file "<dis>", line 838>)
             508 LOAD_CONST             100 ('set_gcc_host_compiler_path')
             510 MAKE_FUNCTION            0
             512 STORE_NAME              63 (set_gcc_host_compiler_path)
 861         514 LOAD_CONST             101 (<code object reformat_version_sequence at 0x000001857DB8EC90, file "<dis>", line 861>)
             516 LOAD_CONST             102 ('reformat_version_sequence')
             518 MAKE_FUNCTION            0
             520 STORE_NAME              64 (reformat_version_sequence)
 884         522 LOAD_CONST             103 (<code object set_tf_cuda_paths at 0x000001857DB8ED40, file "<dis>", line 884>)
             524 LOAD_CONST             104 ('set_tf_cuda_paths')
             526 MAKE_FUNCTION            0
             528 STORE_NAME              65 (set_tf_cuda_paths)
 895         530 LOAD_CONST             105 (<code object set_tf_cuda_version at 0x000001857DB8EDF0, file "<dis>", line 895>)
             532 LOAD_CONST             106 ('set_tf_cuda_version')
             534 MAKE_FUNCTION            0
             536 STORE_NAME              66 (set_tf_cuda_version)
 907         538 LOAD_CONST             107 (<code object set_tf_cudnn_version at 0x000001857DB8EEA0, file "<dis>", line 907>)
             540 LOAD_CONST             108 ('set_tf_cudnn_version')
             542 MAKE_FUNCTION            0
             544 STORE_NAME              67 (set_tf_cudnn_version)
 919         546 LOAD_CONST             109 (<code object is_cuda_compatible at 0x000001857DB8EF50, file "<dis>", line 919>)
             548 LOAD_CONST             110 ('is_cuda_compatible')
             550 MAKE_FUNCTION            0
             552 STORE_NAME              68 (is_cuda_compatible)
 948         554 LOAD_CONST             111 (<code object set_tf_tensorrt_version at 0x000001857DB93030, file "<dis>", line 948>)
             556 LOAD_CONST             112 ('set_tf_tensorrt_version')
             558 MAKE_FUNCTION            0
             560 STORE_NAME              69 (set_tf_tensorrt_version)
 965         562 LOAD_CONST             113 (<code object set_tf_nccl_version at 0x000001857DB930E0, file "<dis>", line 965>)
             564 LOAD_CONST             114 ('set_tf_nccl_version')
             566 MAKE_FUNCTION            0
             568 STORE_NAME              70 (set_tf_nccl_version)
 982         570 LOAD_CONST             115 (<code object get_native_cuda_compute_capabilities at 0x000001857DB932F0, file "<dis>", line 982>)
             572 LOAD_CONST             116 ('get_native_cuda_compute_capabilities')
             574 MAKE_FUNCTION            0
             576 STORE_NAME              71 (get_native_cuda_compute_capabilities)
1006         578 LOAD_CONST             117 (<code object set_tf_cuda_compute_capabilities at 0x000001857DB93450, file "<dis>", line 1006>)
             580 LOAD_CONST             118 ('set_tf_cuda_compute_capabilities')
             582 MAKE_FUNCTION            0
             584 STORE_NAME              72 (set_tf_cuda_compute_capabilities)
1077         586 LOAD_CONST             119 (<code object set_other_cuda_vars at 0x000001857DB93500, file "<dis>", line 1077>)
             588 LOAD_CONST             120 ('set_other_cuda_vars')
             590 MAKE_FUNCTION            0
             592 STORE_NAME              73 (set_other_cuda_vars)
1086         594 LOAD_CONST             121 (<code object set_host_cxx_compiler at 0x000001857DB935B0, file "<dis>", line 1086>)
             596 LOAD_CONST             122 ('set_host_cxx_compiler')
             598 MAKE_FUNCTION            0
             600 STORE_NAME              74 (set_host_cxx_compiler)
1103         602 LOAD_CONST             123 (<code object set_host_c_compiler at 0x000001857DB93660, file "<dis>", line 1103>)
             604 LOAD_CONST             124 ('set_host_c_compiler')
             606 MAKE_FUNCTION            0
             608 STORE_NAME              75 (set_host_c_compiler)
1120         610 LOAD_CONST             125 (<code object system_specific_test_config at 0x000001857DB93710, file "<dis>", line 1120>)
             612 LOAD_CONST             126 ('system_specific_test_config')
             614 MAKE_FUNCTION            0
             616 STORE_NAME              76 (system_specific_test_config)
1163         618 LOAD_CONST             127 (<code object set_system_libs_flag at 0x000001857DB93870, file "<dis>", line 1163>)
             620 LOAD_CONST             128 ('set_system_libs_flag')
             622 MAKE_FUNCTION            0
             624 STORE_NAME              77 (set_system_libs_flag)
1177         626 LOAD_CONST             129 (<code object set_windows_build_flags at 0x000001857DB937C0, file "<dis>", line 1177>)
             628 LOAD_CONST             130 ('set_windows_build_flags')
             630 MAKE_FUNCTION            0
             632 STORE_NAME              78 (set_windows_build_flags)
1201         634 LOAD_CONST             131 (<code object config_info_line at 0x000001857DB93920, file "<dis>", line 1201>)
             636 LOAD_CONST             132 ('config_info_line')
             638 MAKE_FUNCTION            0
             640 STORE_NAME              79 (config_info_line)
1206         642 LOAD_CONST             133 (<code object configure_ios at 0x000001857DB93B30, file "<dis>", line 1206>)
             644 LOAD_CONST             134 ('configure_ios')
             646 MAKE_FUNCTION            0
             648 STORE_NAME              80 (configure_ios)
1222         650 LOAD_CONST             135 (<code object validate_cuda_config at 0x000001857DB93C90, file "<dis>", line 1222>)
             652 LOAD_CONST             136 ('validate_cuda_config')
             654 MAKE_FUNCTION            0
             656 STORE_NAME              81 (validate_cuda_config)
1285         658 LOAD_CONST             137 (<code object main at 0x000001857DB93D40, file "<dis>", line 1285>)
             660 LOAD_CONST             138 ('main')
             662 MAKE_FUNCTION            0
             664 STORE_NAME              82 (main)
1476         666 LOAD_NAME               83 (__name__)
             668 LOAD_CONST             139 ('__main__')
             670 COMPARE_OP               2 (==)
             672 EXTENDED_ARG             2
             674 POP_JUMP_IF_FALSE      682
1477         676 LOAD_NAME               82 (main)
             678 CALL_FUNCTION            0
             680 POP_TOP
         >>  682 LOAD_CONST               2 (None)
             684 RETURN_VALUE
Disassembly of <code object UserInputError at 0x000001857DB807C0, file "<dis>", line 71>:
 71           0 LOAD_NAME                0 (__name__)
              2 STORE_NAME               1 (__module__)
              4 LOAD_CONST               0 ('UserInputError')
              6 STORE_NAME               2 (__qualname__)
 72           8 LOAD_CONST               1 (None)
             10 RETURN_VALUE
Disassembly of <code object is_windows at 0x000001857DB80870, file "<dis>", line 75>:
 76           0 LOAD_GLOBAL              0 (platform)
              2 LOAD_METHOD              1 (system)
              4 CALL_METHOD              0
              6 LOAD_CONST               1 ('Windows')
              8 COMPARE_OP               2 (==)
             10 RETURN_VALUE
Disassembly of <code object is_linux at 0x000001857DB80920, file "<dis>", line 79>:
 80           0 LOAD_GLOBAL              0 (platform)
              2 LOAD_METHOD              1 (system)
              4 CALL_METHOD              0
              6 LOAD_CONST               1 ('Linux')
              8 COMPARE_OP               2 (==)
             10 RETURN_VALUE
Disassembly of <code object is_macos at 0x000001857DB809D0, file "<dis>", line 83>:
 84           0 LOAD_GLOBAL              0 (platform)
              2 LOAD_METHOD              1 (system)
              4 CALL_METHOD              0
              6 LOAD_CONST               1 ('Darwin')
              8 COMPARE_OP               2 (==)
             10 RETURN_VALUE
Disassembly of <code object is_ppc64le at 0x000001857DB80A80, file "<dis>", line 87>:
 88           0 LOAD_GLOBAL              0 (platform)
              2 LOAD_METHOD              1 (machine)
              4 CALL_METHOD              0
              6 LOAD_CONST               1 ('ppc64le')
              8 COMPARE_OP               2 (==)
             10 RETURN_VALUE
Disassembly of <code object is_cygwin at 0x000001857DB80B30, file "<dis>", line 91>:
 92           0 LOAD_GLOBAL              0 (platform)
              2 LOAD_METHOD              1 (system)
              4 CALL_METHOD              0
              6 LOAD_METHOD              2 (startswith)
              8 LOAD_CONST               1 ('CYGWIN_NT')
             10 CALL_METHOD              1
             12 RETURN_VALUE
Disassembly of <code object get_input at 0x000001857DB80BE0, file "<dis>", line 95>:
 96           0 SETUP_FINALLY           46 (to 48)
 97           2 SETUP_FINALLY           12 (to 16)
 98           4 LOAD_GLOBAL              0 (raw_input)
              6 LOAD_FAST                0 (question)
              8 CALL_FUNCTION            1
             10 STORE_FAST               1 (answer)
             12 POP_BLOCK
             14 JUMP_FORWARD            28 (to 44)
 99     >>   16 DUP_TOP
             18 LOAD_GLOBAL              1 (NameError)
             20 COMPARE_OP              10 (exception match)
             22 POP_JUMP_IF_FALSE       42
             24 POP_TOP
             26 POP_TOP
             28 POP_TOP
100          30 LOAD_GLOBAL              2 (input)
             32 LOAD_FAST                0 (question)
             34 CALL_FUNCTION            1
             36 STORE_FAST               1 (answer)
             38 POP_EXCEPT
             40 JUMP_FORWARD             2 (to 44)
        >>   42 END_FINALLY
        >>   44 POP_BLOCK
             46 JUMP_FORWARD            24 (to 72)
101     >>   48 DUP_TOP
             50 LOAD_GLOBAL              3 (EOFError)
             52 COMPARE_OP              10 (exception match)
             54 POP_JUMP_IF_FALSE       70
             56 POP_TOP
             58 POP_TOP
             60 POP_TOP
102          62 LOAD_CONST               1 ('')
             64 STORE_FAST               1 (answer)
             66 POP_EXCEPT
             68 JUMP_FORWARD             2 (to 72)
        >>   70 END_FINALLY
103     >>   72 LOAD_FAST                1 (answer)
             74 RETURN_VALUE
Disassembly of <code object symlink_force at 0x000001857DB80C90, file "<dis>", line 106>:
113           0 SETUP_FINALLY           16 (to 18)
114           2 LOAD_GLOBAL              0 (os)
              4 LOAD_METHOD              1 (symlink)
              6 LOAD_FAST                0 (target)
              8 LOAD_FAST                1 (link_name)
             10 CALL_METHOD              2
             12 POP_TOP
             14 POP_BLOCK
             16 JUMP_FORWARD            74 (to 92)
115     >>   18 DUP_TOP
             20 LOAD_GLOBAL              2 (OSError)
             22 COMPARE_OP              10 (exception match)
             24 POP_JUMP_IF_FALSE       90
             26 POP_TOP
             28 STORE_FAST               2 (e)
             30 POP_TOP
             32 SETUP_FINALLY           44 (to 78)
116          34 LOAD_FAST                2 (e)
             36 LOAD_ATTR                3 (errno)
             38 LOAD_GLOBAL              3 (errno)
             40 LOAD_ATTR                4 (EEXIST)
             42 COMPARE_OP               2 (==)
             44 POP_JUMP_IF_FALSE       70
117          46 LOAD_GLOBAL              0 (os)
             48 LOAD_METHOD              5 (remove)
             50 LOAD_FAST                1 (link_name)
             52 CALL_METHOD              1
             54 POP_TOP
118          56 LOAD_GLOBAL              0 (os)
             58 LOAD_METHOD              1 (symlink)
             60 LOAD_FAST                0 (target)
             62 LOAD_FAST                1 (link_name)
             64 CALL_METHOD              2
             66 POP_TOP
             68 JUMP_FORWARD             4 (to 74)
120     >>   70 LOAD_FAST                2 (e)
             72 RAISE_VARARGS            1
        >>   74 POP_BLOCK
             76 BEGIN_FINALLY
        >>   78 LOAD_CONST               1 (None)
             80 STORE_FAST               2 (e)
             82 DELETE_FAST              2 (e)
             84 END_FINALLY
             86 POP_EXCEPT
             88 JUMP_FORWARD             2 (to 92)
        >>   90 END_FINALLY
        >>   92 LOAD_CONST               1 (None)
             94 RETURN_VALUE
Disassembly of <code object sed_in_place at 0x000001857DB80D40, file "<dis>", line 123>:
131           0 LOAD_GLOBAL              0 (open)
              2 LOAD_FAST                0 (filename)
              4 LOAD_CONST               1 ('r')
              6 CALL_FUNCTION            2
              8 SETUP_WITH              14 (to 24)
             10 STORE_FAST               3 (f)
132          12 LOAD_FAST                3 (f)
             14 LOAD_METHOD              1 (read)
             16 CALL_METHOD              0
             18 STORE_FAST               4 (filedata)
             20 POP_BLOCK
             22 BEGIN_FINALLY
        >>   24 WITH_CLEANUP_START
             26 WITH_CLEANUP_FINISH
             28 END_FINALLY
133          30 LOAD_FAST                4 (filedata)
             32 LOAD_METHOD              2 (replace)
             34 LOAD_FAST                1 (old)
             36 LOAD_FAST                2 (new)
             38 CALL_METHOD              2
             40 STORE_FAST               5 (newdata)
134          42 LOAD_GLOBAL              0 (open)
             44 LOAD_FAST                0 (filename)
             46 LOAD_CONST               2 ('w')
             48 CALL_FUNCTION            2
             50 SETUP_WITH              16 (to 68)
             52 STORE_FAST               3 (f)
135          54 LOAD_FAST                3 (f)
             56 LOAD_METHOD              3 (write)
             58 LOAD_FAST                5 (newdata)
             60 CALL_METHOD              1
             62 POP_TOP
             64 POP_BLOCK
             66 BEGIN_FINALLY
        >>   68 WITH_CLEANUP_START
             70 WITH_CLEANUP_FINISH
             72 END_FINALLY
             74 LOAD_CONST               3 (None)
             76 RETURN_VALUE
Disassembly of <code object write_to_bazelrc at 0x000001857DB80DF0, file "<dis>", line 138>:
139           0 LOAD_GLOBAL              0 (open)
              2 LOAD_GLOBAL              1 (_TF_BAZELRC)
              4 LOAD_CONST               1 ('a')
              6 CALL_FUNCTION            2
              8 SETUP_WITH              20 (to 30)
             10 STORE_FAST               1 (f)
140          12 LOAD_FAST                1 (f)
             14 LOAD_METHOD              2 (write)
             16 LOAD_FAST                0 (line)
             18 LOAD_CONST               2 ('\n')
             20 BINARY_ADD
             22 CALL_METHOD              1
             24 POP_TOP
             26 POP_BLOCK
             28 BEGIN_FINALLY
        >>   30 WITH_CLEANUP_START
             32 WITH_CLEANUP_FINISH
             34 END_FINALLY
             36 LOAD_CONST               0 (None)
             38 RETURN_VALUE
Disassembly of <code object write_action_env_to_bazelrc at 0x000001857DB80EA0, file "<dis>", line 143>:
144           0 LOAD_GLOBAL              0 (write_to_bazelrc)
              2 LOAD_CONST               1 ('build --action_env {}="{}"')
              4 LOAD_METHOD              1 (format)
              6 LOAD_FAST                0 (var_name)
              8 LOAD_GLOBAL              2 (str)
             10 LOAD_FAST                1 (var)
             12 CALL_FUNCTION            1
             14 CALL_METHOD              2
             16 CALL_FUNCTION            1
             18 POP_TOP
             20 LOAD_CONST               0 (None)
             22 RETURN_VALUE
Disassembly of <code object run_shell at 0x000001857DB8E030, file "<dis>", line 147>:
148           0 LOAD_FAST                2 (stderr)
              2 LOAD_CONST               0 (None)
              4 COMPARE_OP               8 (is)
              6 POP_JUMP_IF_FALSE       14
149           8 LOAD_GLOBAL              0 (sys)
             10 LOAD_ATTR                1 (stdout)
             12 STORE_FAST               2 (stderr)
150     >>   14 LOAD_FAST                1 (allow_non_zero)
             16 POP_JUMP_IF_FALSE       84
151          18 SETUP_FINALLY           20 (to 40)
152          20 LOAD_GLOBAL              2 (subprocess)
             22 LOAD_ATTR                3 (check_output)
             24 LOAD_FAST                0 (cmd)
             26 LOAD_FAST                2 (stderr)
             28 LOAD_CONST               1 (True)
             30 LOAD_CONST               2 (('stderr', 'shell'))
             32 CALL_FUNCTION_KW         3
             34 STORE_FAST               3 (output)
             36 POP_BLOCK
             38 JUMP_ABSOLUTE           98
153     >>   40 DUP_TOP
             42 LOAD_GLOBAL              2 (subprocess)
             44 LOAD_ATTR                4 (CalledProcessError)
             46 COMPARE_OP              10 (exception match)
             48 POP_JUMP_IF_FALSE       80
             50 POP_TOP
             52 STORE_FAST               4 (e)
             54 POP_TOP
             56 SETUP_FINALLY           10 (to 68)
154          58 LOAD_FAST                4 (e)
             60 LOAD_ATTR                5 (output)
             62 STORE_FAST               3 (output)
             64 POP_BLOCK
             66 BEGIN_FINALLY
        >>   68 LOAD_CONST               0 (None)
             70 STORE_FAST               4 (e)
             72 DELETE_FAST              4 (e)
             74 END_FINALLY
             76 POP_EXCEPT
             78 JUMP_ABSOLUTE           98
        >>   80 END_FINALLY
             82 JUMP_FORWARD            14 (to 98)
156     >>   84 LOAD_GLOBAL              2 (subprocess)
             86 LOAD_ATTR                3 (check_output)
             88 LOAD_FAST                0 (cmd)
             90 LOAD_FAST                2 (stderr)
             92 LOAD_CONST               3 (('stderr',))
             94 CALL_FUNCTION_KW         2
             96 STORE_FAST               3 (output)
157     >>   98 LOAD_FAST                3 (output)
            100 LOAD_METHOD              6 (decode)
            102 LOAD_CONST               4 ('UTF-8')
            104 CALL_METHOD              1
            106 LOAD_METHOD              7 (strip)
            108 CALL_METHOD              0
            110 RETURN_VALUE
Disassembly of <code object cygpath at 0x000001857DB80F50, file "<dis>", line 160>:
162           0 LOAD_GLOBAL              0 (os)
              2 LOAD_ATTR                1 (path)
              4 LOAD_METHOD              2 (abspath)
              6 LOAD_FAST                0 (path)
              8 CALL_METHOD              1
             10 LOAD_METHOD              3 (replace)
             12 LOAD_CONST               1 ('\\')
             14 LOAD_CONST               2 ('/')
             16 CALL_METHOD              2
             18 RETURN_VALUE
Disassembly of <code object get_python_path at 0x000001857DB8E0E0, file "<dis>", line 165>:
167           0 BUILD_LIST               0
              2 STORE_FAST               2 (python_paths)
168           4 LOAD_FAST                0 (environ_cp)
              6 LOAD_METHOD              0 (get)
              8 LOAD_CONST               1 ('PYTHONPATH')
             10 CALL_METHOD              1
             12 POP_JUMP_IF_FALSE       30
169          14 LOAD_FAST                0 (environ_cp)
             16 LOAD_METHOD              0 (get)
             18 LOAD_CONST               1 ('PYTHONPATH')
             20 CALL_METHOD              1
             22 LOAD_METHOD              1 (split)
             24 LOAD_CONST               2 (':')
             26 CALL_METHOD              1
             28 STORE_FAST               2 (python_paths)
170     >>   30 SETUP_FINALLY           40 (to 72)
171          32 LOAD_GLOBAL              2 (open)
             34 LOAD_GLOBAL              3 (os)
             36 LOAD_ATTR                4 (devnull)
             38 LOAD_CONST               3 ('wb')
             40 CALL_FUNCTION            2
             42 STORE_FAST               3 (stderr)
172          44 LOAD_GLOBAL              5 (run_shell)
173          46 LOAD_FAST                1 (python_bin_path)
             48 LOAD_CONST               4 ('-c')
174          50 LOAD_CONST               5 ('import site; print("\\n".join(site.getsitepackages()))')
172          52 BUILD_LIST               3
176          54 LOAD_FAST                3 (stderr)
172          56 LOAD_CONST               6 (('stderr',))
             58 CALL_FUNCTION_KW         2
             60 LOAD_METHOD              1 (split)
176          62 LOAD_CONST               7 ('\n')
172          64 CALL_METHOD              1
             66 STORE_FAST               4 (library_paths)
             68 POP_BLOCK
             70 JUMP_FORWARD            38 (to 110)
177     >>   72 DUP_TOP
             74 LOAD_GLOBAL              6 (subprocess)
             76 LOAD_ATTR                7 (CalledProcessError)
             78 COMPARE_OP              10 (exception match)
             80 POP_JUMP_IF_FALSE      108
             82 POP_TOP
             84 POP_TOP
             86 POP_TOP
179          88 LOAD_GLOBAL              5 (run_shell)
180          90 LOAD_FAST                1 (python_bin_path)
             92 LOAD_CONST               4 ('-c')
181          94 LOAD_CONST               8 ('from distutils.sysconfig import get_python_lib;print(get_python_lib())')
179          96 BUILD_LIST               3
             98 CALL_FUNCTION            1
178         100 BUILD_LIST               1
            102 STORE_FAST               4 (library_paths)
            104 POP_EXCEPT
            106 JUMP_FORWARD             2 (to 110)
        >>  108 END_FINALLY
186     >>  110 LOAD_GLOBAL              8 (set)
            112 LOAD_FAST                2 (python_paths)
            114 LOAD_FAST                4 (library_paths)
            116 BINARY_ADD
            118 CALL_FUNCTION            1
            120 STORE_FAST               5 (all_paths)
188         122 LOAD_GLOBAL              9 (sorted)
            124 LOAD_FAST                5 (all_paths)
            126 CALL_FUNCTION            1
            128 STORE_FAST               5 (all_paths)
190         130 BUILD_LIST               0
            132 STORE_FAST               6 (paths)
191         134 LOAD_FAST                5 (all_paths)
            136 GET_ITER
        >>  138 FOR_ITER                26 (to 166)
            140 STORE_FAST               7 (path)
192         142 LOAD_GLOBAL              3 (os)
            144 LOAD_ATTR               10 (path)
            146 LOAD_METHOD             11 (isdir)
            148 LOAD_FAST                7 (path)
            150 CALL_METHOD              1
            152 POP_JUMP_IF_FALSE      138
193         154 LOAD_FAST                6 (paths)
            156 LOAD_METHOD             12 (append)
            158 LOAD_FAST                7 (path)
            160 CALL_METHOD              1
            162 POP_TOP
            164 JUMP_ABSOLUTE          138
194     >>  166 LOAD_FAST                6 (paths)
            168 RETURN_VALUE
Disassembly of <code object get_python_major_version at 0x000001857D8ACC90, file "<dis>", line 197>:
199           0 LOAD_GLOBAL              0 (run_shell)
              2 LOAD_FAST                0 (python_bin_path)
              4 LOAD_CONST               1 ('-c')
              6 LOAD_CONST               2 ('import sys; print(sys.version[0])')
              8 BUILD_LIST               3
             10 CALL_FUNCTION            1
             12 RETURN_VALUE
Disassembly of <code object setup_python at 0x000001857D7FA920, file "<dis>", line 202>:
205           0 LOAD_GLOBAL              0 (sys)
              2 LOAD_ATTR                1 (executable)
              4 STORE_FAST               1 (default_python_bin_path)
206           6 LOAD_CONST               1 ('Please specify the location of python. [Default is {}]: ')
              8 LOAD_METHOD              2 (format)
207          10 LOAD_FAST                1 (default_python_bin_path)
206          12 CALL_METHOD              1
             14 STORE_FAST               2 (ask_python_bin_path)
209     >>   16 LOAD_GLOBAL              3 (get_from_env_or_user_or_default)
             18 LOAD_FAST                0 (environ_cp)
210          20 LOAD_CONST               2 ('PYTHON_BIN_PATH')
211          22 LOAD_FAST                2 (ask_python_bin_path)
212          24 LOAD_FAST                1 (default_python_bin_path)
209          26 CALL_FUNCTION            4
             28 STORE_FAST               3 (python_bin_path)
214          30 LOAD_GLOBAL              4 (os)
             32 LOAD_ATTR                5 (path)
             34 LOAD_METHOD              6 (isfile)
             36 LOAD_FAST                3 (python_bin_path)
             38 CALL_METHOD              1
             40 POP_JUMP_IF_FALSE       60
             42 LOAD_GLOBAL              4 (os)
             44 LOAD_METHOD              7 (access)
             46 LOAD_FAST                3 (python_bin_path)
             48 LOAD_GLOBAL              4 (os)
             50 LOAD_ATTR                8 (X_OK)
             52 CALL_METHOD              2
             54 POP_JUMP_IF_FALSE       60
215          56 JUMP_ABSOLUTE          112
             58 JUMP_FORWARD            42 (to 102)
216     >>   60 LOAD_GLOBAL              4 (os)
             62 LOAD_ATTR                5 (path)
             64 LOAD_METHOD              9 (exists)
             66 LOAD_FAST                3 (python_bin_path)
             68 CALL_METHOD              1
             70 POP_JUMP_IF_TRUE        88
217          72 LOAD_GLOBAL             10 (print)
             74 LOAD_CONST               3 ('Invalid python path: {} cannot be found.')
             76 LOAD_METHOD              2 (format)
             78 LOAD_FAST                3 (python_bin_path)
             80 CALL_METHOD              1
             82 CALL_FUNCTION            1
             84 POP_TOP
             86 JUMP_FORWARD            14 (to 102)
219     >>   88 LOAD_GLOBAL             10 (print)
             90 LOAD_CONST               4 ('{} is not executable.  Is it the python binary?')
             92 LOAD_METHOD              2 (format)
220          94 LOAD_FAST                3 (python_bin_path)
219          96 CALL_METHOD              1
             98 CALL_FUNCTION            1
            100 POP_TOP
221     >>  102 LOAD_CONST               5 ('')
            104 LOAD_FAST                0 (environ_cp)
            106 LOAD_CONST               2 ('PYTHON_BIN_PATH')
            108 STORE_SUBSCR
            110 JUMP_ABSOLUTE           16
224     >>  112 LOAD_GLOBAL             11 (is_windows)
            114 CALL_FUNCTION            0
            116 POP_JUMP_IF_TRUE       124
            118 LOAD_GLOBAL             12 (is_cygwin)
            120 CALL_FUNCTION            0
            122 POP_JUMP_IF_FALSE      132
225     >>  124 LOAD_GLOBAL             13 (cygpath)
            126 LOAD_FAST                3 (python_bin_path)
            128 CALL_FUNCTION            1
            130 STORE_FAST               3 (python_bin_path)
228     >>  132 LOAD_FAST                0 (environ_cp)
            134 LOAD_METHOD             14 (get)
            136 LOAD_CONST               6 ('PYTHON_LIB_PATH')
            138 CALL_METHOD              1
            140 STORE_FAST               4 (python_lib_path)
229         142 LOAD_FAST                4 (python_lib_path)
            144 POP_JUMP_IF_TRUE       240
230         146 LOAD_GLOBAL             15 (get_python_path)
            148 LOAD_FAST                0 (environ_cp)
            150 LOAD_FAST                3 (python_bin_path)
            152 CALL_FUNCTION            2
            154 STORE_FAST               5 (python_lib_paths)
231         156 LOAD_FAST                0 (environ_cp)
            158 LOAD_METHOD             14 (get)
            160 LOAD_CONST               7 ('USE_DEFAULT_PYTHON_LIB_PATH')
            162 CALL_METHOD              1
            164 LOAD_CONST               8 ('1')
            166 COMPARE_OP               2 (==)
            168 POP_JUMP_IF_FALSE      180
232         170 LOAD_FAST                5 (python_lib_paths)
            172 LOAD_CONST               9 (0)
            174 BINARY_SUBSCR
            176 STORE_FAST               4 (python_lib_path)
            178 JUMP_FORWARD            52 (to 232)
234     >>  180 LOAD_GLOBAL             10 (print)
            182 LOAD_CONST              10 ('Found possible Python library paths:\n  %s')
235         184 LOAD_CONST              11 ('\n  ')
            186 LOAD_METHOD             16 (join)
            188 LOAD_FAST                5 (python_lib_paths)
            190 CALL_METHOD              1
234         192 BINARY_MODULO
            194 CALL_FUNCTION            1
            196 POP_TOP
236         198 LOAD_FAST                5 (python_lib_paths)
            200 LOAD_CONST               9 (0)
            202 BINARY_SUBSCR
            204 STORE_FAST               6 (default_python_lib_path)
237         206 LOAD_GLOBAL             17 (get_input)
238         208 LOAD_CONST              12 ('Please input the desired Python library path to use.  Default is [{}]\n')
            210 LOAD_METHOD              2 (format)
239         212 LOAD_FAST                5 (python_lib_paths)
            214 LOAD_CONST               9 (0)
            216 BINARY_SUBSCR
238         218 CALL_METHOD              1
237         220 CALL_FUNCTION            1
            222 STORE_FAST               4 (python_lib_path)
240         224 LOAD_FAST                4 (python_lib_path)
            226 POP_JUMP_IF_TRUE       232
241         228 LOAD_FAST                6 (default_python_lib_path)
            230 STORE_FAST               4 (python_lib_path)
242     >>  232 LOAD_FAST                4 (python_lib_path)
            234 LOAD_FAST                0 (environ_cp)
            236 LOAD_CONST               6 ('PYTHON_LIB_PATH')
            238 STORE_SUBSCR
244     >>  240 LOAD_GLOBAL             18 (get_python_major_version)
            242 LOAD_FAST                3 (python_bin_path)
            244 CALL_FUNCTION            1
            246 STORE_FAST               7 (python_major_version)
245         248 LOAD_FAST                7 (python_major_version)
            250 LOAD_CONST              13 ('2')
            252 COMPARE_OP               2 (==)
            254 EXTENDED_ARG             1
            256 POP_JUMP_IF_FALSE      266
246         258 LOAD_GLOBAL             19 (write_to_bazelrc)
            260 LOAD_CONST              14 ('build --host_force_python=PY2')
            262 CALL_FUNCTION            1
            264 POP_TOP
249     >>  266 LOAD_GLOBAL             11 (is_windows)
            268 CALL_FUNCTION            0
            270 EXTENDED_ARG             1
            272 POP_JUMP_IF_TRUE       282
            274 LOAD_GLOBAL             12 (is_cygwin)
            276 CALL_FUNCTION            0
            278 EXTENDED_ARG             1
            280 POP_JUMP_IF_FALSE      290
250     >>  282 LOAD_GLOBAL             13 (cygpath)
            284 LOAD_FAST                4 (python_lib_path)
            286 CALL_FUNCTION            1
            288 STORE_FAST               4 (python_lib_path)
253     >>  290 LOAD_GLOBAL             20 (write_action_env_to_bazelrc)
            292 LOAD_CONST               2 ('PYTHON_BIN_PATH')
            294 LOAD_FAST                3 (python_bin_path)
            296 CALL_FUNCTION            2
            298 POP_TOP
254         300 LOAD_GLOBAL             20 (write_action_env_to_bazelrc)
            302 LOAD_CONST               6 ('PYTHON_LIB_PATH')
            304 LOAD_FAST                4 (python_lib_path)
            306 CALL_FUNCTION            2
            308 POP_TOP
255         310 LOAD_GLOBAL             19 (write_to_bazelrc)
            312 LOAD_CONST              15 ('build --python_path="{}"')
            314 LOAD_METHOD              2 (format)
            316 LOAD_FAST                3 (python_bin_path)
            318 CALL_METHOD              1
            320 CALL_FUNCTION            1
            322 POP_TOP
256         324 LOAD_FAST                3 (python_bin_path)
            326 LOAD_FAST                0 (environ_cp)
            328 LOAD_CONST               2 ('PYTHON_BIN_PATH')
            330 STORE_SUBSCR
260         332 LOAD_FAST                0 (environ_cp)
            334 LOAD_METHOD             14 (get)
            336 LOAD_CONST              16 ('PYTHONPATH')
            338 CALL_METHOD              1
            340 EXTENDED_ARG             1
            342 POP_JUMP_IF_FALSE      386
261         344 LOAD_FAST                0 (environ_cp)
            346 LOAD_METHOD             14 (get)
            348 LOAD_CONST              16 ('PYTHONPATH')
            350 CALL_METHOD              1
            352 LOAD_METHOD             21 (split)
            354 LOAD_CONST              17 (':')
            356 CALL_METHOD              1
            358 STORE_FAST               8 (python_paths)
262         360 LOAD_FAST                4 (python_lib_path)
            362 LOAD_FAST                8 (python_paths)
            364 COMPARE_OP               6 (in)
            366 EXTENDED_ARG             1
            368 POP_JUMP_IF_FALSE      386
263         370 LOAD_GLOBAL             20 (write_action_env_to_bazelrc)
            372 LOAD_CONST              16 ('PYTHONPATH')
            374 LOAD_FAST                0 (environ_cp)
            376 LOAD_METHOD             14 (get)
            378 LOAD_CONST              16 ('PYTHONPATH')
            380 CALL_METHOD              1
            382 CALL_FUNCTION            2
            384 POP_TOP
266     >>  386 LOAD_GLOBAL             22 (open)
267         388 LOAD_GLOBAL              4 (os)
            390 LOAD_ATTR                5 (path)
            392 LOAD_METHOD             16 (join)
            394 LOAD_GLOBAL             23 (_TF_WORKSPACE_ROOT)
            396 LOAD_CONST              18 ('tools')
            398 LOAD_CONST              19 ('python_bin_path.sh')
            400 CALL_METHOD              3
268         402 LOAD_CONST              20 ('w')
266         404 CALL_FUNCTION            2
            406 SETUP_WITH              22 (to 430)
268         408 STORE_FAST               9 (f)
269         410 LOAD_FAST                9 (f)
            412 LOAD_METHOD             24 (write)
            414 LOAD_CONST              21 ('export PYTHON_BIN_PATH="{}"')
            416 LOAD_METHOD              2 (format)
            418 LOAD_FAST                3 (python_bin_path)
            420 CALL_METHOD              1
            422 CALL_METHOD              1
            424 POP_TOP
            426 POP_BLOCK
            428 BEGIN_FINALLY
        >>  430 WITH_CLEANUP_START
            432 WITH_CLEANUP_FINISH
            434 END_FINALLY
            436 LOAD_CONST              22 (None)
            438 RETURN_VALUE
Disassembly of <code object reset_tf_configure_bazelrc at 0x000001857D7F5A80, file "<dis>", line 272>:
274           0 LOAD_GLOBAL              0 (open)
              2 LOAD_GLOBAL              1 (_TF_BAZELRC)
              4 LOAD_CONST               1 ('w')
              6 CALL_FUNCTION            2
              8 LOAD_METHOD              2 (close)
             10 CALL_METHOD              0
             12 POP_TOP
             14 LOAD_CONST               2 (None)
             16 RETURN_VALUE
Disassembly of <code object cleanup_makefile at 0x000001857D7FA7C0, file "<dis>", line 277>:
282           0 LOAD_GLOBAL              0 (os)
              2 LOAD_ATTR                1 (path)
              4 LOAD_METHOD              2 (join)
              6 LOAD_GLOBAL              3 (_TF_WORKSPACE_ROOT)
              8 LOAD_CONST               1 ('tensorflow')
283          10 LOAD_CONST               2 ('contrib')
             12 LOAD_CONST               3 ('makefile')
             14 LOAD_CONST               4 ('downloads')
282          16 CALL_METHOD              5
             18 STORE_FAST               0 (makefile_download_dir)
284          20 LOAD_GLOBAL              0 (os)
             22 LOAD_ATTR                1 (path)
             24 LOAD_METHOD              4 (isdir)
             26 LOAD_FAST                0 (makefile_download_dir)
             28 CALL_METHOD              1
             30 POP_JUMP_IF_FALSE       94
285          32 LOAD_GLOBAL              0 (os)
             34 LOAD_METHOD              5 (walk)
             36 LOAD_FAST                0 (makefile_download_dir)
             38 CALL_METHOD              1
             40 GET_ITER
        >>   42 FOR_ITER                50 (to 94)
             44 UNPACK_SEQUENCE          3
             46 STORE_FAST               1 (root)
             48 STORE_FAST               2 (_)
             50 STORE_FAST               3 (filenames)
286          52 LOAD_FAST                3 (filenames)
             54 GET_ITER
        >>   56 FOR_ITER                34 (to 92)
             58 STORE_FAST               4 (f)
287          60 LOAD_FAST                4 (f)
             62 LOAD_METHOD              6 (endswith)
             64 LOAD_CONST               5 ('BUILD')
             66 CALL_METHOD              1
             68 POP_JUMP_IF_FALSE       56
288          70 LOAD_GLOBAL              0 (os)
             72 LOAD_METHOD              7 (remove)
             74 LOAD_GLOBAL              0 (os)
             76 LOAD_ATTR                1 (path)
             78 LOAD_METHOD              2 (join)
             80 LOAD_FAST                1 (root)
             82 LOAD_FAST                4 (f)
             84 CALL_METHOD              2
             86 CALL_METHOD              1
             88 POP_TOP
             90 JUMP_ABSOLUTE           56
        >>   92 JUMP_ABSOLUTE           42
        >>   94 LOAD_CONST               6 (None)
             96 RETURN_VALUE
Disassembly of <code object get_var at 0x000001857D7FA5B0, file "<dis>", line 291>:
322           0 LOAD_FAST                4 (question)
              2 POP_JUMP_IF_TRUE        14
323           4 LOAD_CONST               1 ('Do you wish to build TensorFlow with {} support?')
              6 LOAD_METHOD              0 (format)
324           8 LOAD_FAST                2 (query_item)
323          10 CALL_METHOD              1
             12 STORE_FAST               4 (question)
325     >>   14 LOAD_FAST                5 (yes_reply)
             16 POP_JUMP_IF_TRUE        28
326          18 LOAD_CONST               2 ('{} support will be enabled for TensorFlow.')
             20 LOAD_METHOD              0 (format)
             22 LOAD_FAST                2 (query_item)
             24 CALL_METHOD              1
             26 STORE_FAST               5 (yes_reply)
327     >>   28 LOAD_FAST                6 (no_reply)
             30 POP_JUMP_IF_TRUE        42
328          32 LOAD_CONST               3 ('No {}')
             34 LOAD_METHOD              0 (format)
             36 LOAD_FAST                5 (yes_reply)
             38 CALL_METHOD              1
             40 STORE_FAST               6 (no_reply)
330     >>   42 LOAD_FAST                5 (yes_reply)
             44 LOAD_CONST               4 ('\n')
             46 INPLACE_ADD
             48 STORE_FAST               5 (yes_reply)
331          50 LOAD_FAST                6 (no_reply)
             52 LOAD_CONST               4 ('\n')
             54 INPLACE_ADD
             56 STORE_FAST               6 (no_reply)
333          58 LOAD_FAST                3 (enabled_by_default)
             60 POP_JUMP_IF_FALSE       72
334          62 LOAD_FAST                4 (question)
             64 LOAD_CONST               5 (' [Y/n]: ')
             66 INPLACE_ADD
             68 STORE_FAST               4 (question)
             70 JUMP_FORWARD             8 (to 80)
336     >>   72 LOAD_FAST                4 (question)
             74 LOAD_CONST               6 (' [y/N]: ')
             76 INPLACE_ADD
             78 STORE_FAST               4 (question)
338     >>   80 LOAD_FAST                0 (environ_cp)
             82 LOAD_METHOD              1 (get)
             84 LOAD_FAST                1 (var_name)
             86 CALL_METHOD              1
             88 STORE_FAST               7 (var)
339          90 LOAD_FAST                7 (var)
             92 LOAD_CONST               7 (None)
             94 COMPARE_OP               9 (is not)
             96 POP_JUMP_IF_FALSE      188
340          98 LOAD_FAST                7 (var)
            100 LOAD_METHOD              2 (strip)
            102 CALL_METHOD              0
            104 LOAD_METHOD              3 (lower)
            106 CALL_METHOD              0
            108 STORE_FAST               8 (var_content)
341         110 LOAD_CONST               8 ('1')
            112 LOAD_CONST               9 ('t')
            114 LOAD_CONST              10 ('true')
            116 LOAD_CONST              11 ('y')
            118 LOAD_FAST                7 (var)
            120 BUILD_TUPLE              5
            122 STORE_FAST               9 (true_strings)
342         124 LOAD_CONST              12 (('0', 'f', 'false', 'n', 'no'))
            126 STORE_FAST              10 (false_strings)
343         128 LOAD_FAST                8 (var_content)
            130 LOAD_FAST                9 (true_strings)
            132 COMPARE_OP               6 (in)
            134 POP_JUMP_IF_FALSE      142
344         136 LOAD_CONST              13 (True)
            138 STORE_FAST               7 (var)
            140 JUMP_FORWARD            46 (to 188)
345     >>  142 LOAD_FAST                8 (var_content)
            144 LOAD_FAST               10 (false_strings)
            146 COMPARE_OP               6 (in)
            148 POP_JUMP_IF_FALSE      156
346         150 LOAD_CONST              14 (False)
            152 STORE_FAST               7 (var)
            154 JUMP_FORWARD            32 (to 188)
348     >>  156 LOAD_GLOBAL              4 (UserInputError)
349         158 LOAD_CONST              15 ('Environment variable %s must be set as a boolean indicator.\nThe following are accepted as TRUE : %s.\nThe following are accepted as FALSE: %s.\nCurrent value is %s.')
353         160 LOAD_FAST                1 (var_name)
            162 LOAD_CONST              16 (', ')
            164 LOAD_METHOD              5 (join)
            166 LOAD_FAST                9 (true_strings)
            168 CALL_METHOD              1
            170 LOAD_CONST              16 (', ')
            172 LOAD_METHOD              5 (join)
            174 LOAD_FAST               10 (false_strings)
            176 CALL_METHOD              1
            178 LOAD_FAST                7 (var)
            180 BUILD_TUPLE              4
349         182 BINARY_MODULO
348         184 CALL_FUNCTION            1
            186 RAISE_VARARGS            1
355     >>  188 LOAD_FAST                7 (var)
            190 LOAD_CONST               7 (None)
            192 COMPARE_OP               8 (is)
            194 EXTENDED_ARG             1
            196 POP_JUMP_IF_FALSE      320
356         198 LOAD_GLOBAL              6 (get_input)
            200 LOAD_FAST                4 (question)
            202 CALL_FUNCTION            1
            204 STORE_FAST              11 (user_input_origin)
357         206 LOAD_FAST               11 (user_input_origin)
            208 LOAD_METHOD              2 (strip)
            210 CALL_METHOD              0
            212 LOAD_METHOD              3 (lower)
            214 CALL_METHOD              0
            216 STORE_FAST              12 (user_input)
358         218 LOAD_FAST               12 (user_input)
            220 LOAD_CONST              11 ('y')
            222 COMPARE_OP               2 (==)
            224 POP_JUMP_IF_FALSE      240
359         226 LOAD_GLOBAL              7 (print)
            228 LOAD_FAST                5 (yes_reply)
            230 CALL_FUNCTION            1
            232 POP_TOP
360         234 LOAD_CONST              13 (True)
            236 STORE_FAST               7 (var)
            238 JUMP_ABSOLUTE          188
361     >>  240 LOAD_FAST               12 (user_input)
            242 LOAD_CONST              17 ('n')
            244 COMPARE_OP               2 (==)
            246 EXTENDED_ARG             1
            248 POP_JUMP_IF_FALSE      264
362         250 LOAD_GLOBAL              7 (print)
            252 LOAD_FAST                6 (no_reply)
            254 CALL_FUNCTION            1
            256 POP_TOP
363         258 LOAD_CONST              14 (False)
            260 STORE_FAST               7 (var)
            262 JUMP_ABSOLUTE          188
364     >>  264 LOAD_FAST               12 (user_input)
            266 EXTENDED_ARG             1
            268 POP_JUMP_IF_TRUE       304
365         270 LOAD_FAST                3 (enabled_by_default)
            272 EXTENDED_ARG             1
            274 POP_JUMP_IF_FALSE      290
366         276 LOAD_GLOBAL              7 (print)
            278 LOAD_FAST                5 (yes_reply)
            280 CALL_FUNCTION            1
            282 POP_TOP
367         284 LOAD_CONST              13 (True)
            286 STORE_FAST               7 (var)
            288 JUMP_FORWARD            12 (to 302)
369     >>  290 LOAD_GLOBAL              7 (print)
            292 LOAD_FAST                6 (no_reply)
            294 CALL_FUNCTION            1
            296 POP_TOP
370         298 LOAD_CONST              14 (False)
            300 STORE_FAST               7 (var)
        >>  302 JUMP_ABSOLUTE          188
372     >>  304 LOAD_GLOBAL              7 (print)
            306 LOAD_CONST              18 ('Invalid selection: {}')
            308 LOAD_METHOD              0 (format)
            310 LOAD_FAST               11 (user_input_origin)
            312 CALL_METHOD              1
            314 CALL_FUNCTION            1
            316 POP_TOP
            318 JUMP_ABSOLUTE          188
373     >>  320 LOAD_FAST                7 (var)
            322 RETURN_VALUE
Disassembly of <code object set_build_var at 0x000001857D7FA500, file "<dis>", line 376>:
397           0 LOAD_GLOBAL              0 (str)
              2 LOAD_GLOBAL              1 (int)
              4 LOAD_GLOBAL              2 (get_var)
              6 LOAD_FAST                0 (environ_cp)
              8 LOAD_FAST                1 (var_name)
             10 LOAD_FAST                2 (query_item)
             12 LOAD_FAST                4 (enabled_by_default)
             14 CALL_FUNCTION            4
             16 CALL_FUNCTION            1
             18 CALL_FUNCTION            1
             20 STORE_FAST               6 (var)
398          22 LOAD_FAST                6 (var)
             24 LOAD_FAST                0 (environ_cp)
             26 LOAD_FAST                1 (var_name)
             28 STORE_SUBSCR
399          30 LOAD_FAST                6 (var)
             32 LOAD_CONST               1 ('1')
             34 COMPARE_OP               2 (==)
             36 POP_JUMP_IF_FALSE       68
400          38 LOAD_GLOBAL              3 (write_to_bazelrc)
             40 LOAD_CONST               2 ('build:%s --define %s=true')
401          42 LOAD_FAST                5 (bazel_config_name)
             44 LOAD_FAST                3 (option_name)
             46 BUILD_TUPLE              2
400          48 BINARY_MODULO
             50 CALL_FUNCTION            1
             52 POP_TOP
402          54 LOAD_GLOBAL              3 (write_to_bazelrc)
             56 LOAD_CONST               3 ('build --config=%s')
             58 LOAD_FAST                5 (bazel_config_name)
             60 BINARY_MODULO
             62 CALL_FUNCTION            1
             64 POP_TOP
             66 JUMP_FORWARD            24 (to 92)
403     >>   68 LOAD_FAST                5 (bazel_config_name)
             70 LOAD_CONST               4 (None)
             72 COMPARE_OP               9 (is not)
             74 POP_JUMP_IF_FALSE       92
406          76 LOAD_GLOBAL              3 (write_to_bazelrc)
             78 LOAD_CONST               2 ('build:%s --define %s=true')
407          80 LOAD_FAST                5 (bazel_config_name)
             82 LOAD_FAST                3 (option_name)
             84 BUILD_TUPLE              2
406          86 BINARY_MODULO
             88 CALL_FUNCTION            1
             90 POP_TOP
        >>   92 LOAD_CONST               4 (None)
             94 RETURN_VALUE
Disassembly of <code object set_action_env_var at 0x000001857D7FA660, file "<dis>", line 410>:
434           0 LOAD_GLOBAL              0 (int)
435           2 LOAD_GLOBAL              1 (get_var)
              4 LOAD_FAST                0 (environ_cp)
              6 LOAD_FAST                1 (var_name)
              8 LOAD_FAST                2 (query_item)
             10 LOAD_FAST                3 (enabled_by_default)
             12 LOAD_FAST                4 (question)
436          14 LOAD_FAST                5 (yes_reply)
             16 LOAD_FAST                6 (no_reply)
435          18 CALL_FUNCTION            7
434          20 CALL_FUNCTION            1
             22 STORE_FAST               8 (var)
438          24 LOAD_FAST                7 (bazel_config_name)
             26 POP_JUMP_IF_TRUE        40
439          28 LOAD_GLOBAL              2 (write_action_env_to_bazelrc)
             30 LOAD_FAST                1 (var_name)
             32 LOAD_FAST                8 (var)
             34 CALL_FUNCTION            2
             36 POP_TOP
             38 JUMP_FORWARD            16 (to 56)
440     >>   40 LOAD_FAST                8 (var)
             42 POP_JUMP_IF_FALSE       56
441          44 LOAD_GLOBAL              3 (write_to_bazelrc)
             46 LOAD_CONST               1 ('build --config=%s')
             48 LOAD_FAST                7 (bazel_config_name)
             50 BINARY_MODULO
             52 CALL_FUNCTION            1
             54 POP_TOP
442     >>   56 LOAD_GLOBAL              4 (str)
             58 LOAD_FAST                8 (var)
             60 CALL_FUNCTION            1
             62 LOAD_FAST                0 (environ_cp)
             64 LOAD_FAST                1 (var_name)
             66 STORE_SUBSCR
             68 LOAD_CONST               2 (None)
             70 RETURN_VALUE
Disassembly of <code object convert_version_to_int at 0x000001857D7FA870, file "<dis>", line 445>:
457           0 LOAD_FAST                0 (version)
              2 LOAD_METHOD              0 (split)
              4 LOAD_CONST               1 ('-')
              6 CALL_METHOD              1
              8 LOAD_CONST               2 (0)
             10 BINARY_SUBSCR
             12 STORE_FAST               0 (version)
458          14 LOAD_FAST                0 (version)
             16 LOAD_METHOD              0 (split)
             18 LOAD_CONST               3 ('.')
             20 CALL_METHOD              1
             22 STORE_FAST               1 (version_segments)
460          24 LOAD_GLOBAL              1 (len)
             26 LOAD_FAST                1 (version_segments)
             28 CALL_FUNCTION            1
             30 LOAD_CONST               4 (2)
             32 COMPARE_OP               2 (==)
             34 POP_JUMP_IF_FALSE       46
461          36 LOAD_FAST                1 (version_segments)
             38 LOAD_METHOD              2 (append)
             40 LOAD_CONST               5 ('0')
             42 CALL_METHOD              1
             44 POP_TOP
462     >>   46 LOAD_FAST                1 (version_segments)
             48 GET_ITER
        >>   50 FOR_ITER                18 (to 70)
             52 STORE_FAST               2 (seg)
463          54 LOAD_FAST                2 (seg)
             56 LOAD_METHOD              3 (isdigit)
             58 CALL_METHOD              0
             60 POP_JUMP_IF_TRUE        50
464          62 POP_TOP
             64 LOAD_CONST               6 (None)
             66 RETURN_VALUE
             68 JUMP_ABSOLUTE           50
466     >>   70 LOAD_CONST               7 ('')
             72 LOAD_METHOD              4 (join)
             74 LOAD_CONST               8 (<code object <listcomp> at 0x000001857D7FA710, file "<dis>", line 466>)
             76 LOAD_CONST               9 ('convert_version_to_int.<locals>.<listcomp>')
             78 MAKE_FUNCTION            0
             80 LOAD_FAST                1 (version_segments)
             82 GET_ITER
             84 CALL_FUNCTION            1
             86 CALL_METHOD              1
             88 STORE_FAST               3 (version_str)
467          90 LOAD_GLOBAL              5 (int)
             92 LOAD_FAST                3 (version_str)
             94 CALL_FUNCTION            1
             96 RETURN_VALUE
Disassembly of <code object <listcomp> at 0x000001857D7FA710, file "<dis>", line 466>:
466           0 BUILD_LIST               0
              2 LOAD_FAST                0 (.0)
        >>    4 FOR_ITER                16 (to 22)
              6 STORE_FAST               1 (seg)
              8 LOAD_CONST               0 ('%03d')
             10 LOAD_GLOBAL              0 (int)
             12 LOAD_FAST                1 (seg)
             14 CALL_FUNCTION            1
             16 BINARY_MODULO
             18 LIST_APPEND              2
             20 JUMP_ABSOLUTE            4
        >>   22 RETURN_VALUE
Disassembly of <code object check_bazel_version at 0x000001857D0839D0, file "<dis>", line 470>:
480           0 LOAD_GLOBAL              0 (which)
              2 LOAD_CONST               1 ('bazel')
              4 CALL_FUNCTION            1
              6 STORE_FAST               2 (bazel_executable)
481           8 LOAD_FAST                2 (bazel_executable)
             10 LOAD_CONST               2 (None)
             12 COMPARE_OP               8 (is)
             14 POP_JUMP_IF_FALSE       34
482          16 LOAD_GLOBAL              1 (print)
             18 LOAD_CONST               3 ('Cannot find bazel. Please install bazel.')
             20 CALL_FUNCTION            1
             22 POP_TOP
483          24 LOAD_GLOBAL              2 (sys)
             26 LOAD_METHOD              3 (exit)
             28 LOAD_CONST               4 (1)
             30 CALL_METHOD              1
             32 POP_TOP
485     >>   34 LOAD_GLOBAL              4 (open)
             36 LOAD_GLOBAL              5 (os)
             38 LOAD_ATTR                6 (devnull)
             40 LOAD_CONST               5 ('wb')
             42 CALL_FUNCTION            2
             44 STORE_FAST               3 (stderr)
486          46 LOAD_GLOBAL              7 (run_shell)
             48 LOAD_FAST                2 (bazel_executable)
             50 LOAD_CONST               6 ('--version')
             52 BUILD_LIST               2
487          54 LOAD_CONST               7 (True)
488          56 LOAD_FAST                3 (stderr)
486          58 LOAD_CONST               8 (('allow_non_zero', 'stderr'))
             60 CALL_FUNCTION_KW         3
             62 STORE_FAST               4 (curr_version)
489          64 LOAD_FAST                4 (curr_version)
             66 LOAD_METHOD              8 (startswith)
             68 LOAD_CONST               9 ('bazel ')
             70 CALL_METHOD              1
             72 POP_JUMP_IF_FALSE       88
490          74 LOAD_FAST                4 (curr_version)
             76 LOAD_METHOD              9 (split)
             78 LOAD_CONST               9 ('bazel ')
             80 CALL_METHOD              1
             82 LOAD_CONST               4 (1)
             84 BINARY_SUBSCR
             86 STORE_FAST               4 (curr_version)
492     >>   88 LOAD_GLOBAL             10 (convert_version_to_int)
             90 LOAD_FAST                0 (min_version)
             92 CALL_FUNCTION            1
             94 STORE_FAST               5 (min_version_int)
493          96 LOAD_GLOBAL             10 (convert_version_to_int)
             98 LOAD_FAST                4 (curr_version)
            100 CALL_FUNCTION            1
            102 STORE_FAST               6 (curr_version_int)
494         104 LOAD_GLOBAL             10 (convert_version_to_int)
            106 LOAD_FAST                1 (max_version)
            108 CALL_FUNCTION            1
            110 STORE_FAST               7 (max_version_int)
497         112 LOAD_FAST                6 (curr_version_int)
            114 POP_JUMP_IF_TRUE       140
498         116 LOAD_GLOBAL              1 (print)
            118 LOAD_CONST              10 ('WARNING: current bazel installation is not a release version.')
            120 CALL_FUNCTION            1
            122 POP_TOP
499         124 LOAD_GLOBAL              1 (print)
            126 LOAD_CONST              11 ('Make sure you are running at least bazel %s')
            128 LOAD_FAST                0 (min_version)
            130 BINARY_MODULO
            132 CALL_FUNCTION            1
            134 POP_TOP
500         136 LOAD_FAST                4 (curr_version)
            138 RETURN_VALUE
502     >>  140 LOAD_GLOBAL              1 (print)
            142 LOAD_CONST              12 ('You have bazel %s installed.')
            144 LOAD_FAST                4 (curr_version)
            146 BINARY_MODULO
            148 CALL_FUNCTION            1
            150 POP_TOP
504         152 LOAD_FAST                6 (curr_version_int)
            154 LOAD_FAST                5 (min_version_int)
            156 COMPARE_OP               0 (<)
            158 POP_JUMP_IF_FALSE      182
505         160 LOAD_GLOBAL              1 (print)
            162 LOAD_CONST              13 ('Please upgrade your bazel installation to version %s or higher to build TensorFlow!')
506         164 LOAD_FAST                0 (min_version)
505         166 BINARY_MODULO
            168 CALL_FUNCTION            1
            170 POP_TOP
507         172 LOAD_GLOBAL              2 (sys)
            174 LOAD_METHOD              3 (exit)
            176 LOAD_CONST               4 (1)
            178 CALL_METHOD              1
            180 POP_TOP
508     >>  182 LOAD_FAST                6 (curr_version_int)
            184 LOAD_FAST                7 (max_version_int)
            186 COMPARE_OP               4 (>)
            188 POP_JUMP_IF_FALSE      222
509         190 LOAD_CONST              14 ('TF_IGNORE_MAX_BAZEL_VERSION')
            192 LOAD_GLOBAL              5 (os)
            194 LOAD_ATTR               11 (environ)
            196 COMPARE_OP               7 (not in)
508         198 POP_JUMP_IF_FALSE      222
510         200 LOAD_GLOBAL              1 (print)
            202 LOAD_CONST              15 ('Please downgrade your bazel installation to version %s or lower to build TensorFlow! To downgrade: download the installer for the old version (from https://github.com/bazelbuild/bazel/releases) then run the installer.')
513         204 LOAD_FAST                1 (max_version)
510         206 BINARY_MODULO
            208 CALL_FUNCTION            1
            210 POP_TOP
514         212 LOAD_GLOBAL              2 (sys)
            214 LOAD_METHOD              3 (exit)
            216 LOAD_CONST               4 (1)
            218 CALL_METHOD              1
            220 POP_TOP
515     >>  222 LOAD_FAST                4 (curr_version)
            224 RETURN_VALUE
Disassembly of <code object set_cc_opt_flags at 0x000001857D083A80, file "<dis>", line 518>:
526           0 LOAD_GLOBAL              0 (is_ppc64le)
              2 CALL_FUNCTION            0
              4 POP_JUMP_IF_FALSE       12
528           6 LOAD_CONST               1 ('-mcpu=native')
              8 STORE_FAST               1 (default_cc_opt_flags)
             10 JUMP_FORWARD            16 (to 28)
529     >>   12 LOAD_GLOBAL              1 (is_windows)
             14 CALL_FUNCTION            0
             16 POP_JUMP_IF_FALSE       24
530          18 LOAD_CONST               2 ('/arch:AVX')
             20 STORE_FAST               1 (default_cc_opt_flags)
             22 JUMP_FORWARD             4 (to 28)
537     >>   24 LOAD_CONST               3 ('-Wno-sign-compare')
             26 STORE_FAST               1 (default_cc_opt_flags)
538     >>   28 LOAD_CONST               4 ('Please specify optimization flags to use during compilation when bazel option "--config=opt" is specified [Default is %s]: ')
540          30 LOAD_FAST                1 (default_cc_opt_flags)
538          32 BINARY_MODULO
             34 STORE_FAST               2 (question)
541          36 LOAD_GLOBAL              2 (get_from_env_or_user_or_default)
             38 LOAD_FAST                0 (environ_cp)
             40 LOAD_CONST               5 ('CC_OPT_FLAGS')
542          42 LOAD_FAST                2 (question)
             44 LOAD_FAST                1 (default_cc_opt_flags)
541          46 CALL_FUNCTION            4
             48 STORE_FAST               3 (cc_opt_flags)
543          50 LOAD_FAST                3 (cc_opt_flags)
             52 LOAD_METHOD              3 (split)
             54 CALL_METHOD              0
             56 GET_ITER
        >>   58 FOR_ITER                28 (to 88)
             60 STORE_FAST               4 (opt)
544          62 LOAD_GLOBAL              4 (write_to_bazelrc)
             64 LOAD_CONST               6 ('build:opt --copt=%s')
             66 LOAD_FAST                4 (opt)
             68 BINARY_MODULO
             70 CALL_FUNCTION            1
             72 POP_TOP
545          74 LOAD_GLOBAL              4 (write_to_bazelrc)
             76 LOAD_CONST               7 ('build:opt --host_copt=%s')
             78 LOAD_FAST                4 (opt)
             80 BINARY_MODULO
             82 CALL_FUNCTION            1
             84 POP_TOP
             86 JUMP_ABSOLUTE           58
        >>   88 LOAD_CONST               8 (None)
             90 RETURN_VALUE
Disassembly of <code object set_tf_cuda_clang at 0x000001857DB8E190, file "<dis>", line 548>:
554           0 LOAD_CONST               1 ('Do you want to use clang as CUDA compiler?')
              2 STORE_FAST               1 (question)
555           4 LOAD_CONST               2 ('Clang will be used as CUDA compiler.')
              6 STORE_FAST               2 (yes_reply)
556           8 LOAD_CONST               3 ('nvcc will be used as CUDA compiler.')
             10 STORE_FAST               3 (no_reply)
557          12 LOAD_GLOBAL              0 (set_action_env_var)
558          14 LOAD_FAST                0 (environ_cp)
559          16 LOAD_CONST               4 ('TF_CUDA_CLANG')
560          18 LOAD_CONST               5 (None)
561          20 LOAD_CONST               6 (False)
562          22 LOAD_FAST                1 (question)
563          24 LOAD_FAST                2 (yes_reply)
564          26 LOAD_FAST                3 (no_reply)
565          28 LOAD_CONST               7 ('cuda_clang')
557          30 LOAD_CONST               8 (('question', 'yes_reply', 'no_reply', 'bazel_config_name'))
             32 CALL_FUNCTION_KW         8
             34 POP_TOP
             36 LOAD_CONST               5 (None)
             38 RETURN_VALUE
Disassembly of <code object set_tf_download_clang at 0x000001857DB8E240, file "<dis>", line 568>:
570           0 LOAD_CONST               1 ('Do you wish to download a fresh release of clang? (Experimental)')
              2 STORE_FAST               1 (question)
571           4 LOAD_CONST               2 ('Clang will be downloaded and used to compile tensorflow.')
              6 STORE_FAST               2 (yes_reply)
572           8 LOAD_CONST               3 ('Clang will not be downloaded.')
             10 STORE_FAST               3 (no_reply)
573          12 LOAD_GLOBAL              0 (set_action_env_var)
574          14 LOAD_FAST                0 (environ_cp)
575          16 LOAD_CONST               4 ('TF_DOWNLOAD_CLANG')
576          18 LOAD_CONST               5 (None)
577          20 LOAD_CONST               6 (False)
578          22 LOAD_FAST                1 (question)
579          24 LOAD_FAST                2 (yes_reply)
580          26 LOAD_FAST                3 (no_reply)
581          28 LOAD_CONST               7 ('download_clang')
573          30 LOAD_CONST               8 (('question', 'yes_reply', 'no_reply', 'bazel_config_name'))
             32 CALL_FUNCTION_KW         8
             34 POP_TOP
             36 LOAD_CONST               5 (None)
             38 RETURN_VALUE
Disassembly of <code object get_from_env_or_user_or_default at 0x000001857DB8E2F0, file "<dis>", line 584>:
600           0 LOAD_FAST                0 (environ_cp)
              2 LOAD_METHOD              0 (get)
              4 LOAD_FAST                1 (var_name)
              6 CALL_METHOD              1
              8 STORE_FAST               4 (var)
601          10 LOAD_FAST                4 (var)
             12 POP_JUMP_IF_TRUE        30
602          14 LOAD_GLOBAL              1 (get_input)
             16 LOAD_FAST                2 (ask_for_var)
             18 CALL_FUNCTION            1
             20 STORE_FAST               4 (var)
603          22 LOAD_GLOBAL              2 (print)
             24 LOAD_CONST               1 ('\n')
             26 CALL_FUNCTION            1
             28 POP_TOP
604     >>   30 LOAD_FAST                4 (var)
             32 POP_JUMP_IF_TRUE        38
605          34 LOAD_FAST                3 (var_default)
             36 STORE_FAST               4 (var)
606     >>   38 LOAD_FAST                4 (var)
             40 RETURN_VALUE
Disassembly of <code object set_clang_cuda_compiler_path at 0x000001857DB8E3A0, file "<dis>", line 609>:
611           0 LOAD_GLOBAL              0 (which)
              2 LOAD_CONST               1 ('clang')
              4 CALL_FUNCTION            1
              6 JUMP_IF_TRUE_OR_POP     10
              8 LOAD_CONST               2 ('')
        >>   10 STORE_FAST               1 (default_clang_path)
612          12 LOAD_CONST               3 ('Please specify which clang should be used as device and host compiler. [Default is %s]: ')
613          14 LOAD_FAST                1 (default_clang_path)
612          16 BINARY_MODULO
             18 STORE_FAST               2 (ask_clang_path)
616     >>   20 LOAD_GLOBAL              1 (get_from_env_or_user_or_default)
617          22 LOAD_FAST                0 (environ_cp)
             24 LOAD_CONST               4 ('CLANG_CUDA_COMPILER_PATH')
             26 LOAD_FAST                2 (ask_clang_path)
618          28 LOAD_FAST                1 (default_clang_path)
616          30 CALL_FUNCTION            4
             32 STORE_FAST               3 (clang_cuda_compiler_path)
619          34 LOAD_GLOBAL              2 (os)
             36 LOAD_ATTR                3 (path)
             38 LOAD_METHOD              4 (exists)
             40 LOAD_FAST                3 (clang_cuda_compiler_path)
             42 CALL_METHOD              1
             44 POP_JUMP_IF_FALSE       48
620          46 JUMP_ABSOLUTE           70
623     >>   48 LOAD_GLOBAL              5 (print)
             50 LOAD_CONST               5 ('Invalid clang path: %s cannot be found.')
             52 LOAD_FAST                3 (clang_cuda_compiler_path)
             54 BINARY_MODULO
             56 CALL_FUNCTION            1
             58 POP_TOP
624          60 LOAD_CONST               2 ('')
             62 LOAD_FAST                0 (environ_cp)
             64 LOAD_CONST               4 ('CLANG_CUDA_COMPILER_PATH')
             66 STORE_SUBSCR
             68 JUMP_ABSOLUTE           20
627     >>   70 LOAD_FAST                3 (clang_cuda_compiler_path)
             72 LOAD_FAST                0 (environ_cp)
             74 LOAD_CONST               4 ('CLANG_CUDA_COMPILER_PATH')
             76 STORE_SUBSCR
628          78 LOAD_GLOBAL              6 (write_action_env_to_bazelrc)
             80 LOAD_CONST               4 ('CLANG_CUDA_COMPILER_PATH')
629          82 LOAD_FAST                3 (clang_cuda_compiler_path)
628          84 CALL_FUNCTION            2
             86 POP_TOP
             88 LOAD_CONST               6 (None)
             90 RETURN_VALUE
Disassembly of <code object prompt_loop_or_load_from_env at 0x000001857DB8E450, file "<dis>", line 632>:
673           0 LOAD_FAST                0 (environ_cp)
              2 LOAD_METHOD              0 (get)
              4 LOAD_FAST                1 (var_name)
              6 CALL_METHOD              1
              8 JUMP_IF_TRUE_OR_POP     12
             10 LOAD_FAST                2 (var_default)
        >>   12 STORE_FAST               9 (default)
674          14 LOAD_CONST               1 ('%s [Default is %s]: ')
675          16 LOAD_FAST                3 (ask_for_var)
676          18 LOAD_FAST                9 (default)
674          20 BUILD_TUPLE              2
             22 BINARY_MODULO
             24 STORE_FAST              10 (full_query)
679          26 LOAD_GLOBAL              1 (range)
             28 LOAD_FAST                8 (n_ask_attempts)
             30 CALL_FUNCTION            1
             32 GET_ITER
        >>   34 FOR_ITER                54 (to 90)
             36 STORE_FAST              11 (_)
680          38 LOAD_GLOBAL              2 (get_from_env_or_user_or_default)
             40 LOAD_FAST                0 (environ_cp)
             42 LOAD_FAST                1 (var_name)
             44 LOAD_FAST               10 (full_query)
681          46 LOAD_FAST                9 (default)
680          48 CALL_FUNCTION            4
             50 STORE_FAST              12 (val)
682          52 LOAD_FAST                4 (check_success)
             54 LOAD_FAST               12 (val)
             56 CALL_FUNCTION            1
             58 POP_JUMP_IF_FALSE       64
683          60 POP_TOP
             62 JUMP_ABSOLUTE          106
684     >>   64 LOAD_FAST                6 (suppress_default_error)
             66 POP_JUMP_IF_TRUE        80
685          68 LOAD_GLOBAL              3 (print)
             70 LOAD_FAST                5 (error_msg)
             72 LOAD_FAST               12 (val)
             74 BINARY_MODULO
             76 CALL_FUNCTION            1
             78 POP_TOP
686     >>   80 LOAD_CONST               2 ('')
             82 LOAD_FAST                0 (environ_cp)
             84 LOAD_FAST                1 (var_name)
             86 STORE_SUBSCR
             88 JUMP_ABSOLUTE           34
688     >>   90 LOAD_GLOBAL              4 (UserInputError)
             92 LOAD_CONST               3 ('Invalid %s setting was provided %d times in a row. Assuming to be a scripting mistake.')
690          94 LOAD_FAST                1 (var_name)
             96 LOAD_FAST                8 (n_ask_attempts)
             98 BUILD_TUPLE              2
688         100 BINARY_MODULO
            102 CALL_FUNCTION            1
            104 RAISE_VARARGS            1
692     >>  106 LOAD_FAST                7 (resolve_symlinks)
            108 POP_JUMP_IF_FALSE      134
            110 LOAD_GLOBAL              5 (os)
            112 LOAD_ATTR                6 (path)
            114 LOAD_METHOD              7 (islink)
            116 LOAD_FAST               12 (val)
            118 CALL_METHOD              1
            120 POP_JUMP_IF_FALSE      134
693         122 LOAD_GLOBAL              5 (os)
            124 LOAD_ATTR                6 (path)
            126 LOAD_METHOD              8 (realpath)
            128 LOAD_FAST               12 (val)
            130 CALL_METHOD              1
            132 STORE_FAST              12 (val)
694     >>  134 LOAD_FAST               12 (val)
            136 LOAD_FAST                0 (environ_cp)
            138 LOAD_FAST                1 (var_name)
            140 STORE_SUBSCR
695         142 LOAD_FAST               12 (val)
            144 RETURN_VALUE
Disassembly of <code object create_android_ndk_rule at 0x000001857DB8E660, file "<dis>", line 698>:
700           0 LOAD_GLOBAL              0 (is_windows)
              2 CALL_FUNCTION            0
              4 POP_JUMP_IF_TRUE        12
              6 LOAD_GLOBAL              1 (is_cygwin)
              8 CALL_FUNCTION            0
             10 POP_JUMP_IF_FALSE       30
701     >>   12 LOAD_GLOBAL              2 (cygpath)
             14 LOAD_CONST               1 ('%s/Android/Sdk/ndk-bundle')
702          16 LOAD_FAST                0 (environ_cp)
             18 LOAD_CONST               2 ('APPDATA')
             20 BINARY_SUBSCR
701          22 BINARY_MODULO
             24 CALL_FUNCTION            1
             26 STORE_FAST               1 (default_ndk_path)
             28 JUMP_FORWARD            32 (to 62)
703     >>   30 LOAD_GLOBAL              3 (is_macos)
             32 CALL_FUNCTION            0
             34 POP_JUMP_IF_FALSE       50
704          36 LOAD_CONST               3 ('%s/library/Android/Sdk/ndk-bundle')
             38 LOAD_FAST                0 (environ_cp)
             40 LOAD_CONST               4 ('HOME')
             42 BINARY_SUBSCR
             44 BINARY_MODULO
             46 STORE_FAST               1 (default_ndk_path)
             48 JUMP_FORWARD            12 (to 62)
706     >>   50 LOAD_CONST               1 ('%s/Android/Sdk/ndk-bundle')
             52 LOAD_FAST                0 (environ_cp)
             54 LOAD_CONST               4 ('HOME')
             56 BINARY_SUBSCR
             58 BINARY_MODULO
             60 STORE_FAST               1 (default_ndk_path)
708     >>   62 LOAD_CONST               5 (<code object valid_ndk_path at 0x000001857DB8E500, file "<dis>", line 708>)
             64 LOAD_CONST               6 ('create_android_ndk_rule.<locals>.valid_ndk_path')
             66 MAKE_FUNCTION            0
             68 STORE_FAST               2 (valid_ndk_path)
712          70 LOAD_GLOBAL              4 (prompt_loop_or_load_from_env)
713          72 LOAD_FAST                0 (environ_cp)
714          74 LOAD_CONST               7 ('ANDROID_NDK_HOME')
715          76 LOAD_FAST                1 (default_ndk_path)
716          78 LOAD_CONST               8 ('Please specify the home path of the Android NDK to use.')
717          80 LOAD_FAST                2 (valid_ndk_path)
718          82 LOAD_CONST               9 ('The path %s or its child file "source.properties" does not exist.')
712          84 LOAD_CONST              10 (('var_name', 'var_default', 'ask_for_var', 'check_success', 'error_msg'))
             86 CALL_FUNCTION_KW         6
             88 STORE_FAST               3 (android_ndk_home_path)
720          90 LOAD_GLOBAL              5 (write_action_env_to_bazelrc)
             92 LOAD_CONST               7 ('ANDROID_NDK_HOME')
             94 LOAD_FAST                3 (android_ndk_home_path)
             96 CALL_FUNCTION            2
             98 POP_TOP
721         100 LOAD_GLOBAL              5 (write_action_env_to_bazelrc)
722         102 LOAD_CONST              11 ('ANDROID_NDK_API_LEVEL')
723         104 LOAD_GLOBAL              6 (get_ndk_api_level)
            106 LOAD_FAST                0 (environ_cp)
            108 LOAD_FAST                3 (android_ndk_home_path)
            110 CALL_FUNCTION            2
721         112 CALL_FUNCTION            2
            114 POP_TOP
            116 LOAD_CONST              12 (None)
            118 RETURN_VALUE
Disassembly of <code object valid_ndk_path at 0x000001857DB8E500, file "<dis>", line 708>:
709           0 LOAD_GLOBAL              0 (os)
              2 LOAD_ATTR                1 (path)
              4 LOAD_METHOD              2 (exists)
              6 LOAD_FAST                0 (path)
              8 CALL_METHOD              1
             10 JUMP_IF_FALSE_OR_POP    32
710          12 LOAD_GLOBAL              0 (os)
             14 LOAD_ATTR                1 (path)
             16 LOAD_METHOD              2 (exists)
             18 LOAD_GLOBAL              0 (os)
             20 LOAD_ATTR                1 (path)
             22 LOAD_METHOD              3 (join)
             24 LOAD_FAST                0 (path)
             26 LOAD_CONST               1 ('source.properties')
             28 CALL_METHOD              2
             30 CALL_METHOD              1
709     >>   32 RETURN_VALUE
Disassembly of <code object create_android_sdk_rule at 0x000001857DB8E920, file "<dis>", line 726>:
728           0 LOAD_GLOBAL              0 (is_windows)
              2 CALL_FUNCTION            0
              4 POP_JUMP_IF_TRUE        12
              6 LOAD_GLOBAL              1 (is_cygwin)
              8 CALL_FUNCTION            0
             10 POP_JUMP_IF_FALSE       30
729     >>   12 LOAD_GLOBAL              2 (cygpath)
             14 LOAD_CONST               1 ('%s/Android/Sdk')
             16 LOAD_FAST                0 (environ_cp)
             18 LOAD_CONST               2 ('APPDATA')
             20 BINARY_SUBSCR
             22 BINARY_MODULO
             24 CALL_FUNCTION            1
             26 STORE_FAST               1 (default_sdk_path)
             28 JUMP_FORWARD            32 (to 62)
730     >>   30 LOAD_GLOBAL              3 (is_macos)
             32 CALL_FUNCTION            0
             34 POP_JUMP_IF_FALSE       50
731          36 LOAD_CONST               3 ('%s/library/Android/Sdk')
             38 LOAD_FAST                0 (environ_cp)
             40 LOAD_CONST               4 ('HOME')
             42 BINARY_SUBSCR
             44 BINARY_MODULO
             46 STORE_FAST               1 (default_sdk_path)
             48 JUMP_FORWARD            12 (to 62)
733     >>   50 LOAD_CONST               1 ('%s/Android/Sdk')
             52 LOAD_FAST                0 (environ_cp)
             54 LOAD_CONST               4 ('HOME')
             56 BINARY_SUBSCR
             58 BINARY_MODULO
             60 STORE_FAST               1 (default_sdk_path)
735     >>   62 LOAD_CONST               5 (<code object valid_sdk_path at 0x000001857DB8E5B0, file "<dis>", line 735>)
             64 LOAD_CONST               6 ('create_android_sdk_rule.<locals>.valid_sdk_path')
             66 MAKE_FUNCTION            0
             68 STORE_FAST               2 (valid_sdk_path)
740          70 LOAD_GLOBAL              4 (prompt_loop_or_load_from_env)
741          72 LOAD_FAST                0 (environ_cp)
742          74 LOAD_CONST               7 ('ANDROID_SDK_HOME')
743          76 LOAD_FAST                1 (default_sdk_path)
744          78 LOAD_CONST               8 ('Please specify the home path of the Android SDK to use.')
745          80 LOAD_FAST                2 (valid_sdk_path)
746          82 LOAD_CONST               9 ('Either %s does not exist, or it does not contain the subdirectories "platforms" and "build-tools".')
740          84 LOAD_CONST              10 (('var_name', 'var_default', 'ask_for_var', 'check_success', 'error_msg'))
             86 CALL_FUNCTION_KW         6
             88 STORE_DEREF              0 (android_sdk_home_path)
749          90 LOAD_GLOBAL              5 (os)
             92 LOAD_ATTR                6 (path)
             94 LOAD_METHOD              7 (join)
             96 LOAD_DEREF               0 (android_sdk_home_path)
             98 LOAD_CONST              11 ('platforms')
            100 CALL_METHOD              2
            102 STORE_FAST               3 (platforms)
750         104 LOAD_GLOBAL              8 (sorted)
            106 LOAD_GLOBAL              5 (os)
            108 LOAD_METHOD              9 (listdir)
            110 LOAD_FAST                3 (platforms)
            112 CALL_METHOD              1
            114 CALL_FUNCTION            1
            116 STORE_FAST               4 (api_levels)
751         118 LOAD_CONST              12 (<code object <listcomp> at 0x000001857DB8E710, file "<dis>", line 751>)
            120 LOAD_CONST              13 ('create_android_sdk_rule.<locals>.<listcomp>')
            122 MAKE_FUNCTION            0
            124 LOAD_FAST                4 (api_levels)
            126 GET_ITER
            128 CALL_FUNCTION            1
            130 STORE_FAST               4 (api_levels)
753         132 LOAD_CLOSURE             0 (android_sdk_home_path)
            134 BUILD_TUPLE              1
            136 LOAD_CONST              14 (<code object valid_api_level at 0x000001857DB8E7C0, file "<dis>", line 753>)
            138 LOAD_CONST              15 ('create_android_sdk_rule.<locals>.valid_api_level')
            140 MAKE_FUNCTION            8 (closure)
            142 STORE_FAST               5 (valid_api_level)
758         144 LOAD_GLOBAL              4 (prompt_loop_or_load_from_env)
759         146 LOAD_FAST                0 (environ_cp)
760         148 LOAD_CONST              16 ('ANDROID_API_LEVEL')
761         150 LOAD_FAST                4 (api_levels)
            152 LOAD_CONST              17 (-1)
            154 BINARY_SUBSCR
762         156 LOAD_CONST              18 ('Please specify the Android SDK API level to use. [Available levels: %s]')
763         158 LOAD_FAST                4 (api_levels)
762         160 BINARY_MODULO
764         162 LOAD_FAST                5 (valid_api_level)
765         164 LOAD_CONST              19 ('Android-%s is not present in the SDK path.')
758         166 LOAD_CONST              10 (('var_name', 'var_default', 'ask_for_var', 'check_success', 'error_msg'))
            168 CALL_FUNCTION_KW         6
            170 STORE_FAST               6 (android_api_level)
767         172 LOAD_GLOBAL              5 (os)
            174 LOAD_ATTR                6 (path)
            176 LOAD_METHOD              7 (join)
            178 LOAD_DEREF               0 (android_sdk_home_path)
            180 LOAD_CONST              20 ('build-tools')
            182 CALL_METHOD              2
            184 STORE_FAST               7 (build_tools)
768         186 LOAD_GLOBAL              8 (sorted)
            188 LOAD_GLOBAL              5 (os)
            190 LOAD_METHOD              9 (listdir)
            192 LOAD_FAST                7 (build_tools)
            194 CALL_METHOD              1
            196 CALL_FUNCTION            1
            198 STORE_FAST               8 (versions)
770         200 LOAD_CLOSURE             0 (android_sdk_home_path)
            202 BUILD_TUPLE              1
            204 LOAD_CONST              21 (<code object valid_build_tools at 0x000001857DB8E870, file "<dis>", line 770>)
            206 LOAD_CONST              22 ('create_android_sdk_rule.<locals>.valid_build_tools')
            208 MAKE_FUNCTION            8 (closure)
            210 STORE_FAST               9 (valid_build_tools)
774         212 LOAD_GLOBAL              4 (prompt_loop_or_load_from_env)
775         214 LOAD_FAST                0 (environ_cp)
776         216 LOAD_CONST              23 ('ANDROID_BUILD_TOOLS_VERSION')
777         218 LOAD_FAST                8 (versions)
            220 LOAD_CONST              17 (-1)
            222 BINARY_SUBSCR
778         224 LOAD_CONST              24 ('Please specify an Android build tools version to use. [Available versions: %s]')
779         226 LOAD_FAST                8 (versions)
778         228 BINARY_MODULO
780         230 LOAD_FAST                9 (valid_build_tools)
781         232 LOAD_CONST              25 ('The selected SDK does not have build-tools version %s available.')
774         234 LOAD_CONST              10 (('var_name', 'var_default', 'ask_for_var', 'check_success', 'error_msg'))
            236 CALL_FUNCTION_KW         6
            238 STORE_FAST              10 (android_build_tools_version)
784         240 LOAD_GLOBAL             10 (write_action_env_to_bazelrc)
            242 LOAD_CONST              23 ('ANDROID_BUILD_TOOLS_VERSION')
785         244 LOAD_FAST               10 (android_build_tools_version)
784         246 CALL_FUNCTION            2
            248 POP_TOP
786         250 LOAD_GLOBAL             10 (write_action_env_to_bazelrc)
            252 LOAD_CONST              26 ('ANDROID_SDK_API_LEVEL')
            254 LOAD_FAST                6 (android_api_level)
            256 CALL_FUNCTION            2
            258 POP_TOP
787         260 LOAD_GLOBAL             10 (write_action_env_to_bazelrc)
            262 LOAD_CONST               7 ('ANDROID_SDK_HOME')
            264 LOAD_DEREF               0 (android_sdk_home_path)
            266 CALL_FUNCTION            2
            268 POP_TOP
            270 LOAD_CONST              27 (None)
            272 RETURN_VALUE
Disassembly of <code object valid_sdk_path at 0x000001857DB8E5B0, file "<dis>", line 735>:
736           0 LOAD_GLOBAL              0 (os)
              2 LOAD_ATTR                1 (path)
              4 LOAD_METHOD              2 (exists)
              6 LOAD_FAST                0 (path)
              8 CALL_METHOD              1
             10 JUMP_IF_FALSE_OR_POP    54
737          12 LOAD_GLOBAL              0 (os)
             14 LOAD_ATTR                1 (path)
             16 LOAD_METHOD              2 (exists)
             18 LOAD_GLOBAL              0 (os)
             20 LOAD_ATTR                1 (path)
             22 LOAD_METHOD              3 (join)
             24 LOAD_FAST                0 (path)
             26 LOAD_CONST               1 ('platforms')
             28 CALL_METHOD              2
             30 CALL_METHOD              1
736          32 JUMP_IF_FALSE_OR_POP    54
738          34 LOAD_GLOBAL              0 (os)
             36 LOAD_ATTR                1 (path)
             38 LOAD_METHOD              2 (exists)
             40 LOAD_GLOBAL              0 (os)
             42 LOAD_ATTR                1 (path)
             44 LOAD_METHOD              3 (join)
             46 LOAD_FAST                0 (path)
             48 LOAD_CONST               2 ('build-tools')
             50 CALL_METHOD              2
             52 CALL_METHOD              1
736     >>   54 RETURN_VALUE
Disassembly of <code object <listcomp> at 0x000001857DB8E710, file "<dis>", line 751>:
751           0 BUILD_LIST               0
              2 LOAD_FAST                0 (.0)
        >>    4 FOR_ITER                16 (to 22)
              6 STORE_FAST               1 (x)
              8 LOAD_FAST                1 (x)
             10 LOAD_METHOD              0 (replace)
             12 LOAD_CONST               0 ('android-')
             14 LOAD_CONST               1 ('')
             16 CALL_METHOD              2
             18 LIST_APPEND              2
             20 JUMP_ABSOLUTE            4
        >>   22 RETURN_VALUE
Disassembly of <code object valid_api_level at 0x000001857DB8E7C0, file "<dis>", line 753>:
754           0 LOAD_GLOBAL              0 (os)
              2 LOAD_ATTR                1 (path)
              4 LOAD_METHOD              2 (exists)
755           6 LOAD_GLOBAL              0 (os)
              8 LOAD_ATTR                1 (path)
             10 LOAD_METHOD              3 (join)
             12 LOAD_DEREF               0 (android_sdk_home_path)
             14 LOAD_CONST               1 ('platforms')
756          16 LOAD_CONST               2 ('android-')
             18 LOAD_FAST                0 (api_level)
             20 BINARY_ADD
755          22 CALL_METHOD              3
754          24 CALL_METHOD              1
             26 RETURN_VALUE
Disassembly of <code object valid_build_tools at 0x000001857DB8E870, file "<dis>", line 770>:
771           0 LOAD_GLOBAL              0 (os)
              2 LOAD_ATTR                1 (path)
              4 LOAD_METHOD              2 (exists)
772           6 LOAD_GLOBAL              0 (os)
              8 LOAD_ATTR                1 (path)
             10 LOAD_METHOD              3 (join)
             12 LOAD_DEREF               0 (android_sdk_home_path)
             14 LOAD_CONST               1 ('build-tools')
             16 LOAD_FAST                0 (version)
             18 CALL_METHOD              3
771          20 CALL_METHOD              1
             22 RETURN_VALUE
Disassembly of <code object get_ndk_api_level at 0x000001857DB8EB30, file "<dis>", line 790>:
794           0 LOAD_CONST               1 ('%s/source.properties')
              2 LOAD_DEREF               0 (android_ndk_home_path)
              4 BINARY_MODULO
              6 STORE_FAST               2 (properties_path)
795           8 LOAD_GLOBAL              0 (is_windows)
             10 CALL_FUNCTION            0
             12 POP_JUMP_IF_TRUE        20
             14 LOAD_GLOBAL              1 (is_cygwin)
             16 CALL_FUNCTION            0
             18 POP_JUMP_IF_FALSE       28
796     >>   20 LOAD_GLOBAL              2 (cygpath)
             22 LOAD_FAST                2 (properties_path)
             24 CALL_FUNCTION            1
             26 STORE_FAST               2 (properties_path)
797     >>   28 LOAD_GLOBAL              3 (open)
             30 LOAD_FAST                2 (properties_path)
             32 LOAD_CONST               2 ('r')
             34 CALL_FUNCTION            2
             36 SETUP_WITH              14 (to 52)
             38 STORE_FAST               3 (f)
798          40 LOAD_FAST                3 (f)
             42 LOAD_METHOD              4 (read)
             44 CALL_METHOD              0
             46 STORE_FAST               4 (filedata)
             48 POP_BLOCK
             50 BEGIN_FINALLY
        >>   52 WITH_CLEANUP_START
             54 WITH_CLEANUP_FINISH
             56 END_FINALLY
800          58 LOAD_GLOBAL              5 (re)
             60 LOAD_METHOD              6 (search)
             62 LOAD_CONST               3 ('Pkg.Revision = (\\d+)')
             64 LOAD_FAST                4 (filedata)
             66 CALL_METHOD              2
             68 STORE_FAST               5 (revision)
801          70 LOAD_FAST                5 (revision)
             72 POP_JUMP_IF_FALSE       86
802          74 LOAD_FAST                5 (revision)
             76 LOAD_METHOD              7 (group)
             78 LOAD_CONST               4 (1)
             80 CALL_METHOD              1
             82 STORE_FAST               6 (ndk_version)
             84 JUMP_FORWARD             8 (to 94)
804     >>   86 LOAD_GLOBAL              8 (Exception)
             88 LOAD_CONST               5 ('Unable to parse NDK revision.')
             90 CALL_FUNCTION            1
             92 RAISE_VARARGS            1
805     >>   94 LOAD_GLOBAL              9 (int)
             96 LOAD_FAST                6 (ndk_version)
             98 CALL_FUNCTION            1
            100 LOAD_GLOBAL             10 (_SUPPORTED_ANDROID_NDK_VERSIONS)
            102 COMPARE_OP               7 (not in)
            104 POP_JUMP_IF_FALSE      124
806         106 LOAD_GLOBAL             11 (print)
            108 LOAD_CONST               6 ('WARNING: The NDK version in %s is %s, which is not supported by Bazel (officially supported versions: %s). Please use another version. Compiling Android targets may result in confusing errors.\n')
810         110 LOAD_DEREF               0 (android_ndk_home_path)
            112 LOAD_FAST                6 (ndk_version)
            114 LOAD_GLOBAL             10 (_SUPPORTED_ANDROID_NDK_VERSIONS)
            116 BUILD_TUPLE              3
806         118 BINARY_MODULO
            120 CALL_FUNCTION            1
            122 POP_TOP
815     >>  124 LOAD_GLOBAL             12 (os)
            126 LOAD_ATTR               13 (path)
            128 LOAD_METHOD             14 (join)
            130 LOAD_DEREF               0 (android_ndk_home_path)
            132 LOAD_CONST               7 ('platforms')
            134 CALL_METHOD              2
            136 STORE_FAST               7 (platforms)
816         138 LOAD_GLOBAL             15 (sorted)
            140 LOAD_GLOBAL             12 (os)
            142 LOAD_METHOD             16 (listdir)
            144 LOAD_FAST                7 (platforms)
            146 CALL_METHOD              1
            148 CALL_FUNCTION            1
            150 STORE_FAST               8 (api_levels)
817         152 LOAD_CONST               8 (<code object <listcomp> at 0x000001857DB8E9D0, file "<dis>", line 817>)
            154 LOAD_CONST               9 ('get_ndk_api_level.<locals>.<listcomp>')
            156 MAKE_FUNCTION            0
818         158 LOAD_FAST                8 (api_levels)
817         160 GET_ITER
            162 CALL_FUNCTION            1
            164 STORE_FAST               8 (api_levels)
821         166 LOAD_CLOSURE             0 (android_ndk_home_path)
            168 BUILD_TUPLE              1
            170 LOAD_CONST              10 (<code object valid_api_level at 0x000001857DB8EA80, file "<dis>", line 821>)
            172 LOAD_CONST              11 ('get_ndk_api_level.<locals>.valid_api_level')
            174 MAKE_FUNCTION            8 (closure)
            176 STORE_FAST               9 (valid_api_level)
826         178 LOAD_GLOBAL             17 (prompt_loop_or_load_from_env)
827         180 LOAD_FAST                0 (environ_cp)
828         182 LOAD_CONST              12 ('ANDROID_NDK_API_LEVEL')
829         184 LOAD_CONST              13 ('21')
830         186 LOAD_CONST              14 ('Please specify the (min) Android NDK API level to use. [Available levels: %s]')
831         188 LOAD_FAST                8 (api_levels)
830         190 BINARY_MODULO
832         192 LOAD_FAST                9 (valid_api_level)
833         194 LOAD_CONST              15 ('Android-%s is not present in the NDK path.')
826         196 LOAD_CONST              16 (('var_name', 'var_default', 'ask_for_var', 'check_success', 'error_msg'))
            198 CALL_FUNCTION_KW         6
            200 STORE_FAST              10 (android_ndk_api_level)
835         202 LOAD_FAST               10 (android_ndk_api_level)
            204 RETURN_VALUE
Disassembly of <code object <listcomp> at 0x000001857DB8E9D0, file "<dis>", line 817>:
817           0 BUILD_LIST               0
              2 LOAD_FAST                0 (.0)
        >>    4 FOR_ITER                24 (to 30)
818           6 STORE_FAST               1 (x)
              8 LOAD_CONST               0 ('android-')
             10 LOAD_FAST                1 (x)
             12 COMPARE_OP               6 (in)
             14 POP_JUMP_IF_FALSE        4
             16 LOAD_FAST                1 (x)
             18 LOAD_METHOD              0 (replace)
             20 LOAD_CONST               0 ('android-')
             22 LOAD_CONST               1 ('')
             24 CALL_METHOD              2
             26 LIST_APPEND              2
             28 JUMP_ABSOLUTE            4
        >>   30 RETURN_VALUE
Disassembly of <code object valid_api_level at 0x000001857DB8EA80, file "<dis>", line 821>:
822           0 LOAD_GLOBAL              0 (os)
              2 LOAD_ATTR                1 (path)
              4 LOAD_METHOD              2 (exists)
823           6 LOAD_GLOBAL              0 (os)
              8 LOAD_ATTR                1 (path)
             10 LOAD_METHOD              3 (join)
             12 LOAD_DEREF               0 (android_ndk_home_path)
             14 LOAD_CONST               1 ('platforms')
824          16 LOAD_CONST               2 ('android-')
             18 LOAD_FAST                0 (api_level)
             20 BINARY_ADD
823          22 CALL_METHOD              3
822          24 CALL_METHOD              1
             26 RETURN_VALUE
Disassembly of <code object set_gcc_host_compiler_path at 0x000001857DB8EBE0, file "<dis>", line 838>:
840           0 LOAD_GLOBAL              0 (which)
              2 LOAD_CONST               1 ('gcc')
              4 CALL_FUNCTION            1
              6 JUMP_IF_TRUE_OR_POP     10
              8 LOAD_CONST               2 ('')
        >>   10 STORE_FAST               1 (default_gcc_host_compiler_path)
841          12 LOAD_CONST               3 ('%s/bin/gcc')
             14 LOAD_FAST                0 (environ_cp)
             16 LOAD_METHOD              1 (get)
             18 LOAD_CONST               4 ('CUDA_TOOLKIT_PATH')
             20 CALL_METHOD              1
             22 BINARY_MODULO
             24 STORE_FAST               2 (cuda_bin_symlink)
843          26 LOAD_GLOBAL              2 (os)
             28 LOAD_ATTR                3 (path)
             30 LOAD_METHOD              4 (islink)
             32 LOAD_FAST                2 (cuda_bin_symlink)
             34 CALL_METHOD              1
             36 POP_JUMP_IF_FALSE       50
845          38 LOAD_GLOBAL              2 (os)
             40 LOAD_ATTR                3 (path)
             42 LOAD_METHOD              5 (realpath)
             44 LOAD_FAST                2 (cuda_bin_symlink)
             46 CALL_METHOD              1
             48 STORE_FAST               1 (default_gcc_host_compiler_path)
847     >>   50 LOAD_GLOBAL              6 (prompt_loop_or_load_from_env)
848          52 LOAD_FAST                0 (environ_cp)
849          54 LOAD_CONST               5 ('GCC_HOST_COMPILER_PATH')
850          56 LOAD_FAST                1 (default_gcc_host_compiler_path)
851          58 LOAD_CONST               6 ('Please specify which gcc should be used by nvcc as the host compiler.')
853          60 LOAD_GLOBAL              2 (os)
             62 LOAD_ATTR                3 (path)
             64 LOAD_ATTR                7 (exists)
854          66 LOAD_CONST               7 (True)
855          68 LOAD_CONST               8 ('Invalid gcc path. %s cannot be found.')
847          70 LOAD_CONST               9 (('var_name', 'var_default', 'ask_for_var', 'check_success', 'resolve_symlinks', 'error_msg'))
             72 CALL_FUNCTION_KW         7
             74 STORE_FAST               3 (gcc_host_compiler_path)
858          76 LOAD_GLOBAL              8 (write_action_env_to_bazelrc)
             78 LOAD_CONST               5 ('GCC_HOST_COMPILER_PATH')
             80 LOAD_FAST                3 (gcc_host_compiler_path)
             82 CALL_FUNCTION            2
             84 POP_TOP
             86 LOAD_CONST              10 (None)
             88 RETURN_VALUE
Disassembly of <code object reformat_version_sequence at 0x000001857DB8EC90, file "<dis>", line 861>:
877           0 LOAD_FAST                0 (version_str)
              2 LOAD_METHOD              0 (split)
              4 LOAD_CONST               1 ('.')
              6 CALL_METHOD              1
              8 STORE_FAST               2 (v)
878          10 LOAD_GLOBAL              1 (len)
             12 LOAD_FAST                2 (v)
             14 CALL_FUNCTION            1
             16 LOAD_FAST                1 (sequence_count)
             18 COMPARE_OP               0 (<)
             20 POP_JUMP_IF_FALSE       44
879          22 LOAD_FAST                2 (v)
             24 LOAD_CONST               2 ('0')
             26 BUILD_LIST               1
             28 LOAD_FAST                1 (sequence_count)
             30 LOAD_GLOBAL              1 (len)
             32 LOAD_FAST                2 (v)
             34 CALL_FUNCTION            1
             36 BINARY_SUBTRACT
             38 BINARY_MULTIPLY
             40 BINARY_ADD
             42 STORE_FAST               2 (v)
881     >>   44 LOAD_CONST               1 ('.')
             46 LOAD_METHOD              2 (join)
             48 LOAD_FAST                2 (v)
             50 LOAD_CONST               3 (None)
             52 LOAD_FAST                1 (sequence_count)
             54 BUILD_SLICE              2
             56 BINARY_SUBSCR
             58 CALL_METHOD              1
             60 RETURN_VALUE
Disassembly of <code object set_tf_cuda_paths at 0x000001857DB8ED40, file "<dis>", line 884>:
887           0 LOAD_CONST               1 ('Please specify the comma-separated list of base paths to look for CUDA libraries and headers. [Leave empty to use the default]: ')
886           2 STORE_FAST               1 (ask_cuda_paths)
889           4 LOAD_GLOBAL              0 (get_from_env_or_user_or_default)
              6 LOAD_FAST                0 (environ_cp)
              8 LOAD_CONST               2 ('TF_CUDA_PATHS')
890          10 LOAD_FAST                1 (ask_cuda_paths)
             12 LOAD_CONST               3 ('')
889          14 CALL_FUNCTION            4
             16 STORE_FAST               2 (tf_cuda_paths)
891          18 LOAD_FAST                2 (tf_cuda_paths)
             20 POP_JUMP_IF_FALSE       30
892          22 LOAD_FAST                2 (tf_cuda_paths)
             24 LOAD_FAST                0 (environ_cp)
             26 LOAD_CONST               2 ('TF_CUDA_PATHS')
             28 STORE_SUBSCR
        >>   30 LOAD_CONST               4 (None)
             32 RETURN_VALUE
Disassembly of <code object set_tf_cuda_version at 0x000001857DB8EDF0, file "<dis>", line 895>:
898           0 LOAD_CONST               1 ('Please specify the CUDA SDK version you want to use. [Leave empty to default to CUDA %s]: ')
899           2 LOAD_GLOBAL              0 (_DEFAULT_CUDA_VERSION)
897           4 BINARY_MODULO
              6 STORE_FAST               1 (ask_cuda_version)
900           8 LOAD_GLOBAL              1 (get_from_env_or_user_or_default)
             10 LOAD_FAST                0 (environ_cp)
901          12 LOAD_CONST               2 ('TF_CUDA_VERSION')
902          14 LOAD_FAST                1 (ask_cuda_version)
903          16 LOAD_GLOBAL              0 (_DEFAULT_CUDA_VERSION)
900          18 CALL_FUNCTION            4
             20 STORE_FAST               2 (tf_cuda_version)
904          22 LOAD_FAST                2 (tf_cuda_version)
             24 LOAD_FAST                0 (environ_cp)
             26 LOAD_CONST               2 ('TF_CUDA_VERSION')
             28 STORE_SUBSCR
             30 LOAD_CONST               3 (None)
             32 RETURN_VALUE
Disassembly of <code object set_tf_cudnn_version at 0x000001857DB8EEA0, file "<dis>", line 907>:
910           0 LOAD_CONST               1 ('Please specify the cuDNN version you want to use. [Leave empty to default to cuDNN %s]: ')
911           2 LOAD_GLOBAL              0 (_DEFAULT_CUDNN_VERSION)
909           4 BINARY_MODULO
              6 STORE_FAST               1 (ask_cudnn_version)
912           8 LOAD_GLOBAL              1 (get_from_env_or_user_or_default)
             10 LOAD_FAST                0 (environ_cp)
913          12 LOAD_CONST               2 ('TF_CUDNN_VERSION')
914          14 LOAD_FAST                1 (ask_cudnn_version)
915          16 LOAD_GLOBAL              0 (_DEFAULT_CUDNN_VERSION)
912          18 CALL_FUNCTION            4
             20 STORE_FAST               2 (tf_cudnn_version)
916          22 LOAD_FAST                2 (tf_cudnn_version)
             24 LOAD_FAST                0 (environ_cp)
             26 LOAD_CONST               2 ('TF_CUDNN_VERSION')
             28 STORE_SUBSCR
             30 LOAD_CONST               3 (None)
             32 RETURN_VALUE
Disassembly of <code object is_cuda_compatible at 0x000001857DB8EF50, file "<dis>", line 919>:
921           0 LOAD_GLOBAL              0 (which)
              2 LOAD_CONST               1 ('ldd')
              4 CALL_FUNCTION            1
              6 JUMP_IF_TRUE_OR_POP     10
              8 LOAD_CONST               2 ('/usr/bin/ldd')
        >>   10 STORE_FAST               3 (ldd_bin)
922          12 LOAD_GLOBAL              1 (run_shell)
             14 LOAD_FAST                3 (ldd_bin)
             16 LOAD_FAST                0 (lib)
             18 BUILD_LIST               2
             20 LOAD_CONST               3 (True)
             22 CALL_FUNCTION            2
             24 STORE_FAST               4 (ldd_out)
923          26 LOAD_FAST                4 (ldd_out)
             28 LOAD_METHOD              2 (split)
             30 LOAD_GLOBAL              3 (os)
             32 LOAD_ATTR                4 (linesep)
             34 CALL_METHOD              1
             36 STORE_FAST               4 (ldd_out)
924          38 LOAD_GLOBAL              5 (re)
             40 LOAD_METHOD              6 (compile)
             42 LOAD_CONST               4 ('.*libcudnn.so\\.?(.*) =>.*$')
             44 CALL_METHOD              1
             46 STORE_FAST               5 (cudnn_pattern)
925          48 LOAD_GLOBAL              5 (re)
             50 LOAD_METHOD              6 (compile)
             52 LOAD_CONST               5 ('.*libcudart.so\\.?(.*) =>.*$')
             54 CALL_METHOD              1
             56 STORE_FAST               6 (cuda_pattern)
926          58 LOAD_CONST               6 (None)
             60 STORE_FAST               7 (cudnn)
927          62 LOAD_CONST               6 (None)
             64 STORE_FAST               8 (cudart)
928          66 LOAD_CONST               3 (True)
             68 STORE_FAST               9 (cudnn_ok)
929          70 LOAD_CONST               3 (True)
             72 STORE_FAST              10 (cuda_ok)
930          74 LOAD_FAST                4 (ldd_out)
             76 GET_ITER
        >>   78 FOR_ITER                50 (to 130)
             80 STORE_FAST              11 (line)
931          82 LOAD_CONST               7 ('libcudnn.so')
             84 LOAD_FAST               11 (line)
             86 COMPARE_OP               6 (in)
             88 POP_JUMP_IF_FALSE      106
932          90 LOAD_FAST                5 (cudnn_pattern)
             92 LOAD_METHOD              7 (search)
             94 LOAD_FAST               11 (line)
             96 CALL_METHOD              1
             98 STORE_FAST               7 (cudnn)
933         100 LOAD_CONST               8 (False)
            102 STORE_FAST               9 (cudnn_ok)
            104 JUMP_ABSOLUTE           78
934     >>  106 LOAD_CONST               9 ('libcudart.so')
            108 LOAD_FAST               11 (line)
            110 COMPARE_OP               6 (in)
            112 POP_JUMP_IF_FALSE       78
935         114 LOAD_FAST                6 (cuda_pattern)
            116 LOAD_METHOD              7 (search)
            118 LOAD_FAST               11 (line)
            120 CALL_METHOD              1
            122 STORE_FAST               8 (cudart)
936         124 LOAD_CONST               8 (False)
            126 STORE_FAST              10 (cuda_ok)
            128 JUMP_ABSOLUTE           78
937     >>  130 LOAD_FAST                7 (cudnn)
            132 POP_JUMP_IF_FALSE      162
            134 LOAD_GLOBAL              8 (len)
            136 LOAD_FAST                7 (cudnn)
            138 LOAD_METHOD              9 (group)
            140 LOAD_CONST              10 (1)
            142 CALL_METHOD              1
            144 CALL_FUNCTION            1
            146 POP_JUMP_IF_FALSE      162
938         148 LOAD_GLOBAL             10 (convert_version_to_int)
            150 LOAD_FAST                7 (cudnn)
            152 LOAD_METHOD              9 (group)
            154 LOAD_CONST              10 (1)
            156 CALL_METHOD              1
            158 CALL_FUNCTION            1
            160 STORE_FAST               7 (cudnn)
939     >>  162 LOAD_FAST                8 (cudart)
            164 POP_JUMP_IF_FALSE      194
            166 LOAD_GLOBAL              8 (len)
            168 LOAD_FAST                8 (cudart)
            170 LOAD_METHOD              9 (group)
            172 LOAD_CONST              10 (1)
            174 CALL_METHOD              1
            176 CALL_FUNCTION            1
            178 POP_JUMP_IF_FALSE      194
940         180 LOAD_GLOBAL             10 (convert_version_to_int)
            182 LOAD_FAST                8 (cudart)
            184 LOAD_METHOD              9 (group)
            186 LOAD_CONST              10 (1)
            188 CALL_METHOD              1
            190 CALL_FUNCTION            1
            192 STORE_FAST               8 (cudart)
941     >>  194 LOAD_FAST                7 (cudnn)
            196 LOAD_CONST               6 (None)
            198 COMPARE_OP               9 (is not)
            200 POP_JUMP_IF_FALSE      210
942         202 LOAD_FAST                7 (cudnn)
            204 LOAD_FAST                2 (cudnn_ver)
            206 COMPARE_OP               2 (==)
            208 STORE_FAST               9 (cudnn_ok)
943     >>  210 LOAD_FAST                8 (cudart)
            212 LOAD_CONST               6 (None)
            214 COMPARE_OP               9 (is not)
            216 POP_JUMP_IF_FALSE      226
944         218 LOAD_FAST                8 (cudart)
            220 LOAD_FAST                1 (cuda_ver)
            222 COMPARE_OP               2 (==)
            224 STORE_FAST              10 (cuda_ok)
945     >>  226 LOAD_FAST                9 (cudnn_ok)
            228 JUMP_IF_FALSE_OR_POP   232
            230 LOAD_FAST               10 (cuda_ok)
        >>  232 RETURN_VALUE
Disassembly of <code object set_tf_tensorrt_version at 0x000001857DB93030, file "<dis>", line 948>:
950           0 LOAD_GLOBAL              0 (is_linux)
              2 CALL_FUNCTION            0
              4 POP_JUMP_IF_TRUE        14
951           6 LOAD_GLOBAL              1 (ValueError)
              8 LOAD_CONST               1 ('Currently TensorRT is only supported on Linux platform.')
             10 CALL_FUNCTION            1
             12 RAISE_VARARGS            1
953     >>   14 LOAD_GLOBAL              2 (int)
             16 LOAD_FAST                0 (environ_cp)
             18 LOAD_METHOD              3 (get)
             20 LOAD_CONST               2 ('TF_NEED_TENSORRT')
             22 LOAD_CONST               3 (False)
             24 CALL_METHOD              2
             26 CALL_FUNCTION            1
             28 POP_JUMP_IF_TRUE        34
954          30 LOAD_CONST               4 (None)
             32 RETURN_VALUE
957     >>   34 LOAD_CONST               5 ('Please specify the TensorRT version you want to use. [Leave empty to default to TensorRT %s]: ')
958          36 LOAD_GLOBAL              4 (_DEFAULT_TENSORRT_VERSION)
956          38 BINARY_MODULO
             40 STORE_FAST               1 (ask_tensorrt_version)
959          42 LOAD_GLOBAL              5 (get_from_env_or_user_or_default)
960          44 LOAD_FAST                0 (environ_cp)
             46 LOAD_CONST               6 ('TF_TENSORRT_VERSION')
             48 LOAD_FAST                1 (ask_tensorrt_version)
961          50 LOAD_GLOBAL              4 (_DEFAULT_TENSORRT_VERSION)
959          52 CALL_FUNCTION            4
             54 STORE_FAST               2 (tf_tensorrt_version)
962          56 LOAD_FAST                2 (tf_tensorrt_version)
             58 LOAD_FAST                0 (environ_cp)
             60 LOAD_CONST               6 ('TF_TENSORRT_VERSION')
             62 STORE_SUBSCR
             64 LOAD_CONST               4 (None)
             66 RETURN_VALUE
Disassembly of <code object set_tf_nccl_version at 0x000001857DB930E0, file "<dis>", line 965>:
967           0 LOAD_GLOBAL              0 (is_linux)
              2 CALL_FUNCTION            0
              4 POP_JUMP_IF_TRUE        14
968           6 LOAD_GLOBAL              1 (ValueError)
              8 LOAD_CONST               1 ('Currently NCCL is only supported on Linux platform.')
             10 CALL_FUNCTION            1
             12 RAISE_VARARGS            1
970     >>   14 LOAD_CONST               2 ('TF_NCCL_VERSION')
             16 LOAD_FAST                0 (environ_cp)
             18 COMPARE_OP               6 (in)
             20 POP_JUMP_IF_FALSE       26
971          22 LOAD_CONST               3 (None)
             24 RETURN_VALUE
974     >>   26 LOAD_CONST               4 ('Please specify the locally installed NCCL version you want to use. [Leave empty to use http://github.com/nvidia/nccl]: ')
973          28 STORE_FAST               1 (ask_nccl_version)
976          30 LOAD_GLOBAL              2 (get_from_env_or_user_or_default)
             32 LOAD_FAST                0 (environ_cp)
977          34 LOAD_CONST               2 ('TF_NCCL_VERSION')
978          36 LOAD_FAST                1 (ask_nccl_version)
             38 LOAD_CONST               5 ('')
976          40 CALL_FUNCTION            4
             42 STORE_FAST               2 (tf_nccl_version)
979          44 LOAD_FAST                2 (tf_nccl_version)
             46 LOAD_FAST                0 (environ_cp)
             48 LOAD_CONST               2 ('TF_NCCL_VERSION')
             50 STORE_SUBSCR
             52 LOAD_CONST               3 (None)
             54 RETURN_VALUE
Disassembly of <code object get_native_cuda_compute_capabilities at 0x000001857DB932F0, file "<dis>", line 982>:
 991           0 LOAD_GLOBAL              0 (os)
               2 LOAD_ATTR                1 (path)
               4 LOAD_METHOD              2 (join)
 992           6 LOAD_FAST                0 (environ_cp)
               8 LOAD_METHOD              3 (get)
              10 LOAD_CONST               1 ('CUDA_TOOLKIT_PATH')
              12 CALL_METHOD              1
              14 LOAD_CONST               2 ('extras/demo_suite/deviceQuery')
 991          16 CALL_METHOD              2
              18 STORE_FAST               1 (device_query_bin)
 993          20 LOAD_GLOBAL              0 (os)
              22 LOAD_ATTR                1 (path)
              24 LOAD_METHOD              4 (isfile)
              26 LOAD_FAST                1 (device_query_bin)
              28 CALL_METHOD              1
              30 POP_JUMP_IF_FALSE      142
              32 LOAD_GLOBAL              0 (os)
              34 LOAD_METHOD              5 (access)
              36 LOAD_FAST                1 (device_query_bin)
              38 LOAD_GLOBAL              0 (os)
              40 LOAD_ATTR                6 (X_OK)
              42 CALL_METHOD              2
              44 POP_JUMP_IF_FALSE      142
 994          46 SETUP_FINALLY           66 (to 114)
 995          48 LOAD_GLOBAL              7 (run_shell)
              50 LOAD_FAST                1 (device_query_bin)
              52 CALL_FUNCTION            1
              54 LOAD_METHOD              8 (split)
              56 LOAD_CONST               3 ('\n')
              58 CALL_METHOD              1
              60 STORE_FAST               2 (output)
 996          62 LOAD_GLOBAL              9 (re)
              64 LOAD_METHOD             10 (compile)
              66 LOAD_CONST               4 ('[0-9]*\\.[0-9]*')
              68 CALL_METHOD              1
              70 STORE_DEREF              0 (pattern)
 997          72 LOAD_CLOSURE             0 (pattern)
              74 BUILD_TUPLE              1
              76 LOAD_CONST               5 (<code object <listcomp> at 0x000001857DB93190, file "<dis>", line 997>)
              78 LOAD_CONST               6 ('get_native_cuda_compute_capabilities.<locals>.<listcomp>')
              80 MAKE_FUNCTION            8 (closure)
              82 LOAD_FAST                2 (output)
              84 GET_ITER
              86 CALL_FUNCTION            1
              88 STORE_FAST               2 (output)
 998          90 LOAD_CONST               7 (',')
              92 LOAD_METHOD              2 (join)
              94 LOAD_CONST               8 (<code object <genexpr> at 0x000001857DB93240, file "<dis>", line 998>)
              96 LOAD_CONST               9 ('get_native_cuda_compute_capabilities.<locals>.<genexpr>')
              98 MAKE_FUNCTION            0
             100 LOAD_FAST                2 (output)
             102 GET_ITER
             104 CALL_FUNCTION            1
             106 CALL_METHOD              1
             108 STORE_FAST               2 (output)
             110 POP_BLOCK
             112 JUMP_ABSOLUTE          146
 999     >>  114 DUP_TOP
             116 LOAD_GLOBAL             11 (subprocess)
             118 LOAD_ATTR               12 (CalledProcessError)
             120 COMPARE_OP              10 (exception match)
             122 POP_JUMP_IF_FALSE      138
             124 POP_TOP
             126 POP_TOP
             128 POP_TOP
1000         130 LOAD_CONST              10 ('')
             132 STORE_FAST               2 (output)
             134 POP_EXCEPT
             136 JUMP_ABSOLUTE          146
         >>  138 END_FINALLY
             140 JUMP_FORWARD             4 (to 146)
1002     >>  142 LOAD_CONST              10 ('')
             144 STORE_FAST               2 (output)
1003     >>  146 LOAD_FAST                2 (output)
             148 RETURN_VALUE
Disassembly of <code object <listcomp> at 0x000001857DB93190, file "<dis>", line 997>:
997           0 BUILD_LIST               0
              2 LOAD_FAST                0 (.0)
        >>    4 FOR_ITER                22 (to 28)
              6 STORE_FAST               1 (x)
              8 LOAD_CONST               0 ('Capability')
             10 LOAD_FAST                1 (x)
             12 COMPARE_OP               6 (in)
             14 POP_JUMP_IF_FALSE        4
             16 LOAD_DEREF               0 (pattern)
             18 LOAD_METHOD              0 (search)
             20 LOAD_FAST                1 (x)
             22 CALL_METHOD              1
             24 LIST_APPEND              2
             26 JUMP_ABSOLUTE            4
        >>   28 RETURN_VALUE
Disassembly of <code object <genexpr> at 0x000001857DB93240, file "<dis>", line 998>:
998           0 LOAD_FAST                0 (.0)
        >>    2 FOR_ITER                22 (to 26)
              4 STORE_FAST               1 (x)
              6 LOAD_FAST                1 (x)
              8 LOAD_CONST               0 (None)
             10 COMPARE_OP               9 (is not)
             12 POP_JUMP_IF_FALSE        2
             14 LOAD_FAST                1 (x)
             16 LOAD_METHOD              0 (group)
             18 CALL_METHOD              0
             20 YIELD_VALUE
             22 POP_TOP
             24 JUMP_ABSOLUTE            2
        >>   26 LOAD_CONST               0 (None)
             28 RETURN_VALUE
Disassembly of <code object set_tf_cuda_compute_capabilities at 0x000001857DB93450, file "<dis>", line 1006>:
1009     >>    0 LOAD_GLOBAL              0 (get_native_cuda_compute_capabilities)
1010           2 LOAD_FAST                0 (environ_cp)
1009           4 CALL_FUNCTION            1
               6 STORE_FAST               1 (native_cuda_compute_capabilities)
1011           8 LOAD_FAST                1 (native_cuda_compute_capabilities)
              10 POP_JUMP_IF_TRUE        18
1012          12 LOAD_GLOBAL              1 (_DEFAULT_CUDA_COMPUTE_CAPABILITIES)
              14 STORE_FAST               2 (default_cuda_compute_capabilities)
              16 JUMP_FORWARD             4 (to 22)
1014     >>   18 LOAD_FAST                1 (native_cuda_compute_capabilities)
              20 STORE_FAST               2 (default_cuda_compute_capabilities)
1017     >>   22 LOAD_CONST               1 ('Please specify a list of comma-separated CUDA compute capabilities you want to build with.\nYou can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus. Each capability can be specified as "x.y" or "compute_xy" to include both virtual and binary GPU code, or as "sm_xy" to only include the binary code.\nPlease note that each additional compute capability significantly increases your build time and binary size, and that TensorFlow only supports compute capabilities >= 3.5 [Default is: %s]: ')
1025          24 LOAD_FAST                2 (default_cuda_compute_capabilities)
1017          26 BINARY_MODULO
1016          28 STORE_FAST               3 (ask_cuda_compute_capabilities)
1026          30 LOAD_GLOBAL              2 (get_from_env_or_user_or_default)
1027          32 LOAD_FAST                0 (environ_cp)
              34 LOAD_CONST               2 ('TF_CUDA_COMPUTE_CAPABILITIES')
1028          36 LOAD_FAST                3 (ask_cuda_compute_capabilities)
              38 LOAD_FAST                2 (default_cuda_compute_capabilities)
1026          40 CALL_FUNCTION            4
              42 STORE_FAST               4 (tf_cuda_compute_capabilities)
1030          44 LOAD_CONST               3 (True)
              46 STORE_FAST               5 (all_valid)
1033          48 LOAD_CONST               4 ('')
              50 LOAD_METHOD              3 (join)
              52 LOAD_FAST                4 (tf_cuda_compute_capabilities)
              54 LOAD_METHOD              4 (split)
              56 CALL_METHOD              0
              58 CALL_METHOD              1
              60 STORE_FAST               4 (tf_cuda_compute_capabilities)
1034          62 LOAD_FAST                4 (tf_cuda_compute_capabilities)
              64 LOAD_METHOD              4 (split)
              66 LOAD_CONST               5 (',')
              68 CALL_METHOD              1
              70 GET_ITER
         >>   72 FOR_ITER               164 (to 238)
              74 STORE_FAST               6 (compute_capability)
1035          76 LOAD_GLOBAL              5 (re)
              78 LOAD_METHOD              6 (match)
              80 LOAD_CONST               6 ('[0-9]+.[0-9]+')
              82 LOAD_FAST                6 (compute_capability)
              84 CALL_METHOD              2
              86 STORE_FAST               7 (m)
1036          88 LOAD_FAST                7 (m)
              90 POP_JUMP_IF_TRUE       182
1038          92 LOAD_GLOBAL              5 (re)
              94 LOAD_METHOD              6 (match)
              96 LOAD_CONST               7 ('(sm|compute)_?([0-9]+[0-9]+)')
1039          98 LOAD_FAST                6 (compute_capability)
1038         100 CALL_METHOD              2
             102 STORE_FAST               8 (sm_compute_match)
1040         104 LOAD_FAST                8 (sm_compute_match)
             106 POP_JUMP_IF_TRUE       126
1041         108 LOAD_GLOBAL              7 (print)
             110 LOAD_CONST               8 ('Invalid compute capability: %s')
             112 LOAD_FAST                6 (compute_capability)
             114 BINARY_MODULO
             116 CALL_FUNCTION            1
             118 POP_TOP
1042         120 LOAD_CONST               9 (False)
             122 STORE_FAST               5 (all_valid)
             124 JUMP_ABSOLUTE          236
1044     >>  126 LOAD_GLOBAL              8 (int)
             128 LOAD_FAST                8 (sm_compute_match)
             130 LOAD_METHOD              9 (group)
             132 LOAD_CONST              10 (2)
             134 CALL_METHOD              1
             136 CALL_FUNCTION            1
             138 STORE_FAST               9 (ver)
1045         140 LOAD_FAST                9 (ver)
             142 LOAD_CONST              11 (30)
             144 COMPARE_OP               0 (<)
             146 POP_JUMP_IF_FALSE      164
1046         148 LOAD_GLOBAL              7 (print)
1047         150 LOAD_CONST              12 ('ERROR: TensorFlow only supports small CUDA compute capabilities of sm_30 and higher. Please re-specify the list of compute capabilities excluding version %s.')
1049         152 LOAD_FAST                9 (ver)
1047         154 BINARY_MODULO
1046         156 CALL_FUNCTION            1
             158 POP_TOP
1050         160 LOAD_CONST               9 (False)
             162 STORE_FAST               5 (all_valid)
1051     >>  164 LOAD_FAST                9 (ver)
             166 LOAD_CONST              13 (35)
             168 COMPARE_OP               0 (<)
             170 POP_JUMP_IF_FALSE      236
1052         172 LOAD_GLOBAL              7 (print)
             174 LOAD_CONST              14 ('WARNING: XLA does not support CUDA compute capabilities lower than sm_35. Disable XLA when running on older GPUs.')
             176 CALL_FUNCTION            1
             178 POP_TOP
             180 JUMP_ABSOLUTE           72
1055     >>  182 LOAD_GLOBAL             10 (float)
             184 LOAD_FAST                7 (m)
             186 LOAD_METHOD              9 (group)
             188 LOAD_CONST              15 (0)
             190 CALL_METHOD              1
             192 CALL_FUNCTION            1
             194 STORE_FAST               9 (ver)
1056         196 LOAD_FAST                9 (ver)
             198 LOAD_CONST              16 (3.0)
             200 COMPARE_OP               0 (<)
             202 POP_JUMP_IF_FALSE      220
1057         204 LOAD_GLOBAL              7 (print)
             206 LOAD_CONST              17 ('ERROR: TensorFlow only supports CUDA compute capabilities 3.0 and higher. Please re-specify the list of compute capabilities excluding version %s.')
1059         208 LOAD_FAST                9 (ver)
1057         210 BINARY_MODULO
             212 CALL_FUNCTION            1
             214 POP_TOP
1060         216 LOAD_CONST               9 (False)
             218 STORE_FAST               5 (all_valid)
1061     >>  220 LOAD_FAST                9 (ver)
             222 LOAD_CONST              18 (3.5)
             224 COMPARE_OP               0 (<)
             226 POP_JUMP_IF_FALSE       72
1062         228 LOAD_GLOBAL              7 (print)
             230 LOAD_CONST              19 ('WARNING: XLA does not support CUDA compute capabilities lower than 3.5. Disable XLA when running on older GPUs.')
             232 CALL_FUNCTION            1
             234 POP_TOP
         >>  236 JUMP_ABSOLUTE           72
1065     >>  238 LOAD_FAST                5 (all_valid)
             240 POP_JUMP_IF_FALSE      244
1066         242 JUMP_ABSOLUTE          254
1069     >>  244 LOAD_CONST               4 ('')
             246 LOAD_FAST                0 (environ_cp)
             248 LOAD_CONST               2 ('TF_CUDA_COMPUTE_CAPABILITIES')
             250 STORE_SUBSCR
             252 JUMP_ABSOLUTE            0
1072     >>  254 LOAD_FAST                4 (tf_cuda_compute_capabilities)
             256 LOAD_FAST                0 (environ_cp)
             258 LOAD_CONST               2 ('TF_CUDA_COMPUTE_CAPABILITIES')
             260 STORE_SUBSCR
1073         262 LOAD_GLOBAL             11 (write_action_env_to_bazelrc)
             264 LOAD_CONST               2 ('TF_CUDA_COMPUTE_CAPABILITIES')
1074         266 LOAD_FAST                4 (tf_cuda_compute_capabilities)
1073         268 CALL_FUNCTION            2
             270 POP_TOP
             272 LOAD_CONST              20 (None)
             274 RETURN_VALUE
Disassembly of <code object set_other_cuda_vars at 0x000001857DB93500, file "<dis>", line 1077>:
1080           0 LOAD_FAST                0 (environ_cp)
               2 LOAD_METHOD              0 (get)
               4 LOAD_CONST               1 ('TF_CUDA_CLANG')
               6 CALL_METHOD              1
               8 LOAD_CONST               2 ('1')
              10 COMPARE_OP               2 (==)
              12 POP_JUMP_IF_FALSE       24
1081          14 LOAD_GLOBAL              1 (write_to_bazelrc)
              16 LOAD_CONST               3 ('build --config=cuda_clang')
              18 CALL_FUNCTION            1
              20 POP_TOP
              22 JUMP_FORWARD             8 (to 32)
1083     >>   24 LOAD_GLOBAL              1 (write_to_bazelrc)
              26 LOAD_CONST               4 ('build --config=cuda')
              28 CALL_FUNCTION            1
              30 POP_TOP
         >>   32 LOAD_CONST               5 (None)
              34 RETURN_VALUE
Disassembly of <code object set_host_cxx_compiler at 0x000001857DB935B0, file "<dis>", line 1086>:
1088           0 LOAD_GLOBAL              0 (which)
               2 LOAD_CONST               1 ('g++')
               4 CALL_FUNCTION            1
               6 JUMP_IF_TRUE_OR_POP     10
               8 LOAD_CONST               2 ('')
         >>   10 STORE_FAST               1 (default_cxx_host_compiler)
1090          12 LOAD_GLOBAL              1 (prompt_loop_or_load_from_env)
1091          14 LOAD_FAST                0 (environ_cp)
1092          16 LOAD_CONST               3 ('HOST_CXX_COMPILER')
1093          18 LOAD_FAST                1 (default_cxx_host_compiler)
1094          20 LOAD_CONST               4 ('Please specify which C++ compiler should be used as the host C++ compiler.')
1096          22 LOAD_GLOBAL              2 (os)
              24 LOAD_ATTR                3 (path)
              26 LOAD_ATTR                4 (exists)
1097          28 LOAD_CONST               5 ('Invalid C++ compiler path. %s cannot be found.')
1090          30 LOAD_CONST               6 (('var_name', 'var_default', 'ask_for_var', 'check_success', 'error_msg'))
              32 CALL_FUNCTION_KW         6
              34 STORE_FAST               2 (host_cxx_compiler)
1100          36 LOAD_GLOBAL              5 (write_action_env_to_bazelrc)
              38 LOAD_CONST               3 ('HOST_CXX_COMPILER')
              40 LOAD_FAST                2 (host_cxx_compiler)
              42 CALL_FUNCTION            2
              44 POP_TOP
              46 LOAD_CONST               7 (None)
              48 RETURN_VALUE
Disassembly of <code object set_host_c_compiler at 0x000001857DB93660, file "<dis>", line 1103>:
1105           0 LOAD_GLOBAL              0 (which)
               2 LOAD_CONST               1 ('gcc')
               4 CALL_FUNCTION            1
               6 JUMP_IF_TRUE_OR_POP     10
               8 LOAD_CONST               2 ('')
         >>   10 STORE_FAST               1 (default_c_host_compiler)
1107          12 LOAD_GLOBAL              1 (prompt_loop_or_load_from_env)
1108          14 LOAD_FAST                0 (environ_cp)
1109          16 LOAD_CONST               3 ('HOST_C_COMPILER')
1110          18 LOAD_FAST                1 (default_c_host_compiler)
1111          20 LOAD_CONST               4 ('Please specify which C compiler should be used as the host C compiler.')
1113          22 LOAD_GLOBAL              2 (os)
              24 LOAD_ATTR                3 (path)
              26 LOAD_ATTR                4 (exists)
1114          28 LOAD_CONST               5 ('Invalid C compiler path. %s cannot be found.')
1107          30 LOAD_CONST               6 (('var_name', 'var_default', 'ask_for_var', 'check_success', 'error_msg'))
              32 CALL_FUNCTION_KW         6
              34 STORE_FAST               2 (host_c_compiler)
1117          36 LOAD_GLOBAL              5 (write_action_env_to_bazelrc)
              38 LOAD_CONST               3 ('HOST_C_COMPILER')
              40 LOAD_FAST                2 (host_c_compiler)
              42 CALL_FUNCTION            2
              44 POP_TOP
              46 LOAD_CONST               7 (None)
              48 RETURN_VALUE
Disassembly of <code object system_specific_test_config at 0x000001857DB93710, file "<dis>", line 1120>:
1122           0 LOAD_GLOBAL              0 (write_to_bazelrc)
               2 LOAD_CONST               1 ('test --flaky_test_attempts=3')
               4 CALL_FUNCTION            1
               6 POP_TOP
1123           8 LOAD_GLOBAL              0 (write_to_bazelrc)
              10 LOAD_CONST               2 ('test --test_size_filters=small,medium')
              12 CALL_FUNCTION            1
              14 POP_TOP
1130          16 LOAD_CONST               3 ('-benchmark-test')
              18 LOAD_CONST               4 ('-no_oss')
              20 BUILD_LIST               2
              22 STORE_FAST               1 (test_and_build_filters)
1133          24 LOAD_CONST               5 ('-oss_serial')
              26 BUILD_LIST               1
              28 STORE_FAST               2 (test_only_filters)
1134          30 LOAD_GLOBAL              1 (is_windows)
              32 CALL_FUNCTION            0
              34 POP_JUMP_IF_FALSE      104
1135          36 LOAD_FAST                1 (test_and_build_filters)
              38 LOAD_METHOD              2 (append)
              40 LOAD_CONST               6 ('-no_windows')
              42 CALL_METHOD              1
              44 POP_TOP
1136          46 LOAD_FAST                0 (environ_cp)
              48 LOAD_METHOD              3 (get)
              50 LOAD_CONST               7 ('TF_NEED_CUDA')
              52 LOAD_CONST               8 (None)
              54 CALL_METHOD              2
              56 LOAD_CONST               9 ('1')
              58 COMPARE_OP               2 (==)
              60 POP_JUMP_IF_TRUE        78
1137          62 LOAD_FAST                0 (environ_cp)
              64 LOAD_METHOD              3 (get)
              66 LOAD_CONST              10 ('TF_NEED_ROCM')
              68 LOAD_CONST               8 (None)
              70 CALL_METHOD              2
              72 LOAD_CONST               9 ('1')
              74 COMPARE_OP               2 (==)
1136          76 POP_JUMP_IF_FALSE       92
1138     >>   78 LOAD_FAST                1 (test_and_build_filters)
              80 LOAD_CONST              11 ('-no_windows_gpu')
              82 LOAD_CONST              12 ('-no_gpu')
              84 BUILD_LIST               2
              86 INPLACE_ADD
              88 STORE_FAST               1 (test_and_build_filters)
              90 JUMP_ABSOLUTE          194
1140     >>   92 LOAD_FAST                1 (test_and_build_filters)
              94 LOAD_METHOD              2 (append)
              96 LOAD_CONST              13 ('-gpu')
              98 CALL_METHOD              1
             100 POP_TOP
             102 JUMP_FORWARD            90 (to 194)
1141     >>  104 LOAD_GLOBAL              4 (is_macos)
             106 CALL_FUNCTION            0
             108 POP_JUMP_IF_FALSE      126
1142         110 LOAD_FAST                1 (test_and_build_filters)
             112 LOAD_CONST              13 ('-gpu')
             114 LOAD_CONST              14 ('-nomac')
             116 LOAD_CONST              15 ('-no_mac')
             118 BUILD_LIST               3
             120 INPLACE_ADD
             122 STORE_FAST               1 (test_and_build_filters)
             124 JUMP_FORWARD            68 (to 194)
1143     >>  126 LOAD_GLOBAL              5 (is_linux)
             128 CALL_FUNCTION            0
             130 POP_JUMP_IF_FALSE      194
1144         132 LOAD_FAST                0 (environ_cp)
             134 LOAD_METHOD              3 (get)
             136 LOAD_CONST               7 ('TF_NEED_CUDA')
             138 LOAD_CONST               8 (None)
             140 CALL_METHOD              2
             142 LOAD_CONST               9 ('1')
             144 COMPARE_OP               2 (==)
             146 POP_JUMP_IF_TRUE       164
1145         148 LOAD_FAST                0 (environ_cp)
             150 LOAD_METHOD              3 (get)
             152 LOAD_CONST              10 ('TF_NEED_ROCM')
             154 LOAD_CONST               8 (None)
             156 CALL_METHOD              2
             158 LOAD_CONST               9 ('1')
             160 COMPARE_OP               2 (==)
1144         162 POP_JUMP_IF_FALSE      184
1146     >>  164 LOAD_FAST                1 (test_and_build_filters)
             166 LOAD_METHOD              2 (append)
             168 LOAD_CONST              12 ('-no_gpu')
             170 CALL_METHOD              1
             172 POP_TOP
1147         174 LOAD_GLOBAL              0 (write_to_bazelrc)
             176 LOAD_CONST              16 ('test --test_env=LD_LIBRARY_PATH')
             178 CALL_FUNCTION            1
             180 POP_TOP
             182 JUMP_FORWARD            10 (to 194)
1149     >>  184 LOAD_FAST                1 (test_and_build_filters)
             186 LOAD_METHOD              2 (append)
             188 LOAD_CONST              13 ('-gpu')
             190 CALL_METHOD              1
             192 POP_TOP
1152     >>  194 LOAD_GLOBAL              0 (write_to_bazelrc)
             196 LOAD_CONST              17 ('test:v1 --test_tag_filters=%s')
1153         198 LOAD_CONST              18 (',')
             200 LOAD_METHOD              6 (join)
             202 LOAD_FAST                1 (test_and_build_filters)
             204 LOAD_FAST                2 (test_only_filters)
             206 BINARY_ADD
             208 CALL_METHOD              1
1152         210 BINARY_MODULO
             212 CALL_FUNCTION            1
             214 POP_TOP
1154         216 LOAD_GLOBAL              0 (write_to_bazelrc)
             218 LOAD_CONST              19 ('test:v1 --build_tag_filters=%s')
1155         220 LOAD_CONST              18 (',')
             222 LOAD_METHOD              6 (join)
             224 LOAD_FAST                1 (test_and_build_filters)
             226 CALL_METHOD              1
1154         228 BINARY_MODULO
             230 CALL_FUNCTION            1
             232 POP_TOP
1156         234 LOAD_GLOBAL              0 (write_to_bazelrc)
1157         236 LOAD_CONST              20 ('test:v2 --test_tag_filters=%s')
1158         238 LOAD_CONST              18 (',')
             240 LOAD_METHOD              6 (join)
             242 LOAD_FAST                1 (test_and_build_filters)
             244 LOAD_FAST                2 (test_only_filters)
             246 BINARY_ADD
             248 LOAD_CONST              21 ('-v1only')
             250 BUILD_LIST               1
             252 BINARY_ADD
             254 CALL_METHOD              1
1157         256 BINARY_MODULO
1156         258 CALL_FUNCTION            1
             260 POP_TOP
1159         262 LOAD_GLOBAL              0 (write_to_bazelrc)
             264 LOAD_CONST              22 ('test:v2 --build_tag_filters=%s')
1160         266 LOAD_CONST              18 (',')
             268 LOAD_METHOD              6 (join)
             270 LOAD_FAST                1 (test_and_build_filters)
             272 LOAD_CONST              21 ('-v1only')
             274 BUILD_LIST               1
             276 BINARY_ADD
             278 CALL_METHOD              1
1159         280 BINARY_MODULO
             282 CALL_FUNCTION            1
             284 POP_TOP
             286 LOAD_CONST               8 (None)
             288 RETURN_VALUE
Disassembly of <code object set_system_libs_flag at 0x000001857DB93870, file "<dis>", line 1163>:
1164           0 LOAD_FAST                0 (environ_cp)
               2 LOAD_METHOD              0 (get)
               4 LOAD_CONST               1 ('TF_SYSTEM_LIBS')
               6 LOAD_CONST               2 ('')
               8 CALL_METHOD              2
              10 STORE_FAST               1 (syslibs)
1165          12 LOAD_FAST                1 (syslibs)
              14 POP_JUMP_IF_FALSE       74
1166          16 LOAD_CONST               3 (',')
              18 LOAD_FAST                1 (syslibs)
              20 COMPARE_OP               6 (in)
              22 POP_JUMP_IF_FALSE       46
1167          24 LOAD_CONST               3 (',')
              26 LOAD_METHOD              1 (join)
              28 LOAD_GLOBAL              2 (sorted)
              30 LOAD_FAST                1 (syslibs)
              32 LOAD_METHOD              3 (split)
              34 LOAD_CONST               3 (',')
              36 CALL_METHOD              1
              38 CALL_FUNCTION            1
              40 CALL_METHOD              1
              42 STORE_FAST               1 (syslibs)
              44 JUMP_FORWARD            18 (to 64)
1169     >>   46 LOAD_CONST               3 (',')
              48 LOAD_METHOD              1 (join)
              50 LOAD_GLOBAL              2 (sorted)
              52 LOAD_FAST                1 (syslibs)
              54 LOAD_METHOD              3 (split)
              56 CALL_METHOD              0
              58 CALL_FUNCTION            1
              60 CALL_METHOD              1
              62 STORE_FAST               1 (syslibs)
1170     >>   64 LOAD_GLOBAL              4 (write_action_env_to_bazelrc)
              66 LOAD_CONST               1 ('TF_SYSTEM_LIBS')
              68 LOAD_FAST                1 (syslibs)
              70 CALL_FUNCTION            2
              72 POP_TOP
1172     >>   74 LOAD_CONST               4 (('PREFIX', 'LIBDIR', 'INCLUDEDIR', 'PROTOBUF_INCLUDE_PATH'))
              76 GET_ITER
         >>   78 FOR_ITER                32 (to 112)
              80 STORE_FAST               2 (varname)
1173          82 LOAD_FAST                2 (varname)
              84 LOAD_FAST                0 (environ_cp)
              86 COMPARE_OP               6 (in)
              88 POP_JUMP_IF_FALSE       78
1174          90 LOAD_GLOBAL              5 (write_to_bazelrc)
              92 LOAD_CONST               5 ('build --define=%s=%s')
              94 LOAD_FAST                2 (varname)
              96 LOAD_FAST                0 (environ_cp)
              98 LOAD_FAST                2 (varname)
             100 BINARY_SUBSCR
             102 BUILD_TUPLE              2
             104 BINARY_MODULO
             106 CALL_FUNCTION            1
             108 POP_TOP
             110 JUMP_ABSOLUTE           78
         >>  112 LOAD_CONST               0 (None)
             114 RETURN_VALUE
Disassembly of <code object set_windows_build_flags at 0x000001857DB937C0, file "<dis>", line 1177>:
1183           0 LOAD_GLOBAL              0 (write_to_bazelrc)
1184           2 LOAD_CONST               1 ('build --copt=/d2ReducedOptimizeHugeFunctions --host_copt=/d2ReducedOptimizeHugeFunctions')
1183           4 CALL_FUNCTION            1
               6 POP_TOP
1187           8 LOAD_GLOBAL              1 (get_var)
1188          10 LOAD_FAST                0 (environ_cp)
              12 LOAD_CONST               2 ('TF_OVERRIDE_EIGEN_STRONG_INLINE')
              14 LOAD_CONST               3 ('Eigen strong inline')
1189          16 LOAD_CONST               4 (True)
              18 LOAD_CONST               5 ('Would you like to override eigen strong inline for some C++ compilation to reduce the compilation time?')
1191          20 LOAD_CONST               6 ('Eigen strong inline overridden.')
              22 LOAD_CONST               7 ('Not overriding eigen strong inline, some compilations could take more than 20 mins.')
1187          24 CALL_FUNCTION            7
              26 POP_JUMP_IF_FALSE       36
1198          28 LOAD_GLOBAL              0 (write_to_bazelrc)
              30 LOAD_CONST               8 ('build --define=override_eigen_strong_inline=true')
              32 CALL_FUNCTION            1
              34 POP_TOP
         >>   36 LOAD_CONST               9 (None)
              38 RETURN_VALUE
Disassembly of <code object config_info_line at 0x000001857DB93920, file "<dis>", line 1201>:
1203           0 LOAD_GLOBAL              0 (print)
               2 LOAD_CONST               1 ('\t--config=%-12s\t# %s')
               4 LOAD_FAST                0 (name)
               6 LOAD_FAST                1 (help_text)
               8 BUILD_TUPLE              2
              10 BINARY_MODULO
              12 CALL_FUNCTION            1
              14 POP_TOP
              16 LOAD_CONST               2 (None)
              18 RETURN_VALUE
Disassembly of <code object configure_ios at 0x000001857DB93B30, file "<dis>", line 1206>:
1208           0 LOAD_GLOBAL              0 (is_macos)
               2 CALL_FUNCTION            0
               4 POP_JUMP_IF_TRUE        10
1209           6 LOAD_CONST               1 (None)
               8 RETURN_VALUE
1210     >>   10 LOAD_GLOBAL              1 (get_var)
              12 LOAD_FAST                0 (environ_cp)
              14 LOAD_CONST               2 ('TF_CONFIGURE_IOS')
              16 LOAD_CONST               3 ('iOS')
              18 LOAD_CONST               4 (False)
              20 CALL_FUNCTION            4
              22 POP_JUMP_IF_TRUE        28
1211          24 LOAD_CONST               1 (None)
              26 RETURN_VALUE
1212     >>   28 LOAD_GLOBAL              2 (APPLE_BAZEL_FILES)
              30 GET_ITER
         >>   32 FOR_ITER                46 (to 80)
              34 STORE_FAST               1 (filepath)
1213          36 LOAD_GLOBAL              3 (os)
              38 LOAD_ATTR                4 (path)
              40 LOAD_METHOD              5 (join)
              42 LOAD_GLOBAL              6 (_TF_WORKSPACE_ROOT)
              44 LOAD_FAST                1 (filepath)
              46 LOAD_CONST               5 ('.apple')
              48 BINARY_ADD
              50 CALL_METHOD              2
              52 STORE_FAST               2 (existing_filepath)
1214          54 LOAD_GLOBAL              3 (os)
              56 LOAD_ATTR                4 (path)
              58 LOAD_METHOD              5 (join)
              60 LOAD_GLOBAL              6 (_TF_WORKSPACE_ROOT)
              62 LOAD_FAST                1 (filepath)
              64 CALL_METHOD              2
              66 STORE_FAST               3 (renamed_filepath)
1215          68 LOAD_GLOBAL              7 (symlink_force)
              70 LOAD_FAST                2 (existing_filepath)
              72 LOAD_FAST                3 (renamed_filepath)
              74 CALL_FUNCTION            2
              76 POP_TOP
              78 JUMP_ABSOLUTE           32
1216     >>   80 LOAD_GLOBAL              8 (IOS_FILES)
              82 GET_ITER
         >>   84 FOR_ITER                40 (to 126)
              86 STORE_FAST               1 (filepath)
1217          88 LOAD_GLOBAL              3 (os)
              90 LOAD_ATTR                4 (path)
              92 LOAD_METHOD              9 (basename)
              94 LOAD_FAST                1 (filepath)
              96 CALL_METHOD              1
              98 STORE_FAST               4 (filename)
1218         100 LOAD_GLOBAL              3 (os)
             102 LOAD_ATTR                4 (path)
             104 LOAD_METHOD              5 (join)
             106 LOAD_GLOBAL              6 (_TF_WORKSPACE_ROOT)
             108 LOAD_FAST                4 (filename)
             110 CALL_METHOD              2
             112 STORE_FAST               5 (new_filepath)
1219         114 LOAD_GLOBAL              7 (symlink_force)
             116 LOAD_FAST                1 (filepath)
             118 LOAD_FAST                5 (new_filepath)
             120 CALL_FUNCTION            2
             122 POP_TOP
             124 JUMP_ABSOLUTE           84
         >>  126 LOAD_CONST               1 (None)
             128 RETURN_VALUE
Disassembly of <code object validate_cuda_config at 0x000001857DB93C90, file "<dis>", line 1222>:
1225           0 LOAD_CONST               1 (<code object maybe_encode_env at 0x000001857DB939D0, file "<dis>", line 1225>)
               2 LOAD_CONST               2 ('validate_cuda_config.<locals>.maybe_encode_env')
               4 MAKE_FUNCTION            0
               6 STORE_FAST               1 (maybe_encode_env)
1237           8 LOAD_CONST               3 ('cuda')
              10 LOAD_CONST               4 ('cudnn')
              12 BUILD_LIST               2
              14 STORE_FAST               2 (cuda_libraries)
1238          16 LOAD_GLOBAL              0 (is_linux)
              18 CALL_FUNCTION            0
              20 POP_JUMP_IF_FALSE       70
1239          22 LOAD_GLOBAL              1 (int)
              24 LOAD_FAST                0 (environ_cp)
              26 LOAD_METHOD              2 (get)
              28 LOAD_CONST               5 ('TF_NEED_TENSORRT')
              30 LOAD_CONST               6 (False)
              32 CALL_METHOD              2
              34 CALL_FUNCTION            1
              36 POP_JUMP_IF_FALSE       48
1240          38 LOAD_FAST                2 (cuda_libraries)
              40 LOAD_METHOD              3 (append)
              42 LOAD_CONST               7 ('tensorrt')
              44 CALL_METHOD              1
              46 POP_TOP
1241     >>   48 LOAD_FAST                0 (environ_cp)
              50 LOAD_METHOD              2 (get)
              52 LOAD_CONST               8 ('TF_NCCL_VERSION')
              54 LOAD_CONST               9 (None)
              56 CALL_METHOD              2
              58 POP_JUMP_IF_FALSE       70
1242          60 LOAD_FAST                2 (cuda_libraries)
              62 LOAD_METHOD              3 (append)
              64 LOAD_CONST              10 ('nccl')
              66 CALL_METHOD              1
              68 POP_TOP
1244     >>   70 LOAD_GLOBAL              4 (glob)
              72 LOAD_ATTR                4 (glob)
              74 LOAD_CONST              11 ('**/third_party/gpus/find_cuda_config.py')
              76 LOAD_CONST              12 (True)
              78 LOAD_CONST              13 (('recursive',))
              80 CALL_FUNCTION_KW         2
              82 STORE_FAST               3 (paths)
1245          84 LOAD_FAST                3 (paths)
              86 POP_JUMP_IF_TRUE        96
1246          88 LOAD_GLOBAL              5 (FileNotFoundError)
1247          90 LOAD_CONST              14 ("Can't find 'find_cuda_config.py' script inside working directory")
1246          92 CALL_FUNCTION            1
              94 RAISE_VARARGS            1
1248     >>   96 LOAD_GLOBAL              6 (subprocess)
              98 LOAD_ATTR                7 (Popen)
1249         100 LOAD_FAST                0 (environ_cp)
             102 LOAD_CONST              15 ('PYTHON_BIN_PATH')
             104 BINARY_SUBSCR
             106 LOAD_FAST                3 (paths)
             108 LOAD_CONST              16 (0)
             110 BINARY_SUBSCR
             112 BUILD_LIST               2
             114 LOAD_FAST                2 (cuda_libraries)
             116 BINARY_ADD
1250         118 LOAD_GLOBAL              6 (subprocess)
             120 LOAD_ATTR                8 (PIPE)
1251         122 LOAD_FAST                1 (maybe_encode_env)
             124 LOAD_FAST                0 (environ_cp)
             126 CALL_FUNCTION            1
1248         128 LOAD_CONST              17 (('stdout', 'env'))
             130 CALL_FUNCTION_KW         3
             132 STORE_FAST               4 (proc)
1253         134 LOAD_FAST                4 (proc)
             136 LOAD_METHOD              9 (wait)
             138 CALL_METHOD              0
             140 POP_JUMP_IF_FALSE      154
1255         142 LOAD_GLOBAL             10 (print)
             144 LOAD_CONST              18 ('Asking for detailed CUDA configuration...\n')
             146 CALL_FUNCTION            1
             148 POP_TOP
1256         150 LOAD_CONST               6 (False)
             152 RETURN_VALUE
1258     >>  154 LOAD_GLOBAL             11 (dict)
             156 LOAD_CONST              19 (<code object <genexpr> at 0x000001857DB93BE0, file "<dis>", line 1258>)
             158 LOAD_CONST              20 ('validate_cuda_config.<locals>.<genexpr>')
             160 MAKE_FUNCTION            0
1259         162 LOAD_FAST                4 (proc)
             164 LOAD_ATTR               12 (stdout)
1258         166 GET_ITER
             168 CALL_FUNCTION            1
             170 CALL_FUNCTION            1
             172 STORE_FAST               5 (config)
1261         174 LOAD_GLOBAL             10 (print)
             176 LOAD_CONST              21 ('Found CUDA %s in:')
             178 LOAD_FAST                5 (config)
             180 LOAD_CONST              22 ('cuda_version')
             182 BINARY_SUBSCR
             184 BINARY_MODULO
             186 CALL_FUNCTION            1
             188 POP_TOP
1262         190 LOAD_GLOBAL             10 (print)
             192 LOAD_CONST              23 ('    %s')
             194 LOAD_FAST                5 (config)
             196 LOAD_CONST              24 ('cuda_library_dir')
             198 BINARY_SUBSCR
             200 BINARY_MODULO
             202 CALL_FUNCTION            1
             204 POP_TOP
1263         206 LOAD_GLOBAL             10 (print)
             208 LOAD_CONST              23 ('    %s')
             210 LOAD_FAST                5 (config)
             212 LOAD_CONST              25 ('cuda_include_dir')
             214 BINARY_SUBSCR
             216 BINARY_MODULO
             218 CALL_FUNCTION            1
             220 POP_TOP
1265         222 LOAD_GLOBAL             10 (print)
             224 LOAD_CONST              26 ('Found cuDNN %s in:')
             226 LOAD_FAST                5 (config)
             228 LOAD_CONST              27 ('cudnn_version')
             230 BINARY_SUBSCR
             232 BINARY_MODULO
             234 CALL_FUNCTION            1
             236 POP_TOP
1266         238 LOAD_GLOBAL             10 (print)
             240 LOAD_CONST              23 ('    %s')
             242 LOAD_FAST                5 (config)
             244 LOAD_CONST              28 ('cudnn_library_dir')
             246 BINARY_SUBSCR
             248 BINARY_MODULO
             250 CALL_FUNCTION            1
             252 POP_TOP
1267         254 LOAD_GLOBAL             10 (print)
             256 LOAD_CONST              23 ('    %s')
             258 LOAD_FAST                5 (config)
             260 LOAD_CONST              29 ('cudnn_include_dir')
             262 BINARY_SUBSCR
             264 BINARY_MODULO
             266 CALL_FUNCTION            1
             268 POP_TOP
1269         270 LOAD_CONST              30 ('tensorrt_version')
             272 LOAD_FAST                5 (config)
             274 COMPARE_OP               6 (in)
             276 EXTENDED_ARG             1
             278 POP_JUMP_IF_FALSE      328
1270         280 LOAD_GLOBAL             10 (print)
             282 LOAD_CONST              31 ('Found TensorRT %s in:')
             284 LOAD_FAST                5 (config)
             286 LOAD_CONST              30 ('tensorrt_version')
             288 BINARY_SUBSCR
             290 BINARY_MODULO
             292 CALL_FUNCTION            1
             294 POP_TOP
1271         296 LOAD_GLOBAL             10 (print)
             298 LOAD_CONST              23 ('    %s')
             300 LOAD_FAST                5 (config)
             302 LOAD_CONST              32 ('tensorrt_library_dir')
             304 BINARY_SUBSCR
             306 BINARY_MODULO
             308 CALL_FUNCTION            1
             310 POP_TOP
1272         312 LOAD_GLOBAL             10 (print)
             314 LOAD_CONST              23 ('    %s')
             316 LOAD_FAST                5 (config)
             318 LOAD_CONST              33 ('tensorrt_include_dir')
             320 BINARY_SUBSCR
             322 BINARY_MODULO
             324 CALL_FUNCTION            1
             326 POP_TOP
1274     >>  328 LOAD_FAST                5 (config)
             330 LOAD_METHOD              2 (get)
             332 LOAD_CONST              34 ('nccl_version')
             334 LOAD_CONST               9 (None)
             336 CALL_METHOD              2
             338 EXTENDED_ARG             1
             340 POP_JUMP_IF_FALSE      390
1275         342 LOAD_GLOBAL             10 (print)
             344 LOAD_CONST              35 ('Found NCCL %s in:')
             346 LOAD_FAST                5 (config)
             348 LOAD_CONST              34 ('nccl_version')
             350 BINARY_SUBSCR
             352 BINARY_MODULO
             354 CALL_FUNCTION            1
             356 POP_TOP
1276         358 LOAD_GLOBAL             10 (print)
             360 LOAD_CONST              23 ('    %s')
             362 LOAD_FAST                5 (config)
             364 LOAD_CONST              36 ('nccl_library_dir')
             366 BINARY_SUBSCR
             368 BINARY_MODULO
             370 CALL_FUNCTION            1
             372 POP_TOP
1277         374 LOAD_GLOBAL             10 (print)
             376 LOAD_CONST              23 ('    %s')
             378 LOAD_FAST                5 (config)
             380 LOAD_CONST              37 ('nccl_include_dir')
             382 BINARY_SUBSCR
             384 BINARY_MODULO
             386 CALL_FUNCTION            1
             388 POP_TOP
1279     >>  390 LOAD_GLOBAL             10 (print)
             392 LOAD_CONST              38 ('\n')
             394 CALL_FUNCTION            1
             396 POP_TOP
1281         398 LOAD_FAST                5 (config)
             400 LOAD_CONST              39 ('cuda_toolkit_path')
             402 BINARY_SUBSCR
             404 LOAD_FAST                0 (environ_cp)
             406 LOAD_CONST              40 ('CUDA_TOOLKIT_PATH')
             408 STORE_SUBSCR
1282         410 LOAD_CONST              12 (True)
             412 RETURN_VALUE
Disassembly of <code object maybe_encode_env at 0x000001857DB939D0, file "<dis>", line 1225>:
1227           0 LOAD_GLOBAL              0 (is_windows)
               2 CALL_FUNCTION            0
               4 POP_JUMP_IF_FALSE       20
               6 LOAD_GLOBAL              1 (sys)
               8 LOAD_ATTR                2 (version_info)
              10 LOAD_CONST               1 (0)
              12 BINARY_SUBSCR
              14 LOAD_CONST               2 (2)
              16 COMPARE_OP               3 (!=)
              18 POP_JUMP_IF_FALSE       24
1228     >>   20 LOAD_FAST                0 (env)
              22 RETURN_VALUE
1229     >>   24 LOAD_FAST                0 (env)
              26 LOAD_METHOD              3 (items)
              28 CALL_METHOD              0
              30 GET_ITER
         >>   32 FOR_ITER                56 (to 90)
              34 UNPACK_SEQUENCE          2
              36 STORE_FAST               1 (k)
              38 STORE_FAST               2 (v)
1230          40 LOAD_GLOBAL              4 (isinstance)
              42 LOAD_FAST                1 (k)
              44 LOAD_GLOBAL              5 (unicode)
              46 CALL_FUNCTION            2
              48 POP_JUMP_IF_FALSE       60
1231          50 LOAD_FAST                1 (k)
              52 LOAD_METHOD              6 (encode)
              54 LOAD_CONST               3 ('ascii')
              56 CALL_METHOD              1
              58 STORE_FAST               1 (k)
1232     >>   60 LOAD_GLOBAL              4 (isinstance)
              62 LOAD_FAST                2 (v)
              64 LOAD_GLOBAL              5 (unicode)
              66 CALL_FUNCTION            2
              68 POP_JUMP_IF_FALSE       80
1233          70 LOAD_FAST                2 (v)
              72 LOAD_METHOD              6 (encode)
              74 LOAD_CONST               3 ('ascii')
              76 CALL_METHOD              1
              78 STORE_FAST               2 (v)
1234     >>   80 LOAD_FAST                2 (v)
              82 LOAD_FAST                0 (env)
              84 LOAD_FAST                1 (k)
              86 STORE_SUBSCR
              88 JUMP_ABSOLUTE           32
1235     >>   90 LOAD_FAST                0 (env)
              92 RETURN_VALUE
Disassembly of <code object <genexpr> at 0x000001857DB93BE0, file "<dis>", line 1258>:
1258           0 LOAD_FAST                0 (.0)
         >>    2 FOR_ITER                30 (to 34)
1259           4 STORE_FAST               1 (line)
               6 LOAD_GLOBAL              0 (tuple)
               8 LOAD_FAST                1 (line)
              10 LOAD_METHOD              1 (decode)
              12 LOAD_CONST               0 ('ascii')
              14 CALL_METHOD              1
              16 LOAD_METHOD              2 (rstrip)
              18 CALL_METHOD              0
              20 LOAD_METHOD              3 (split)
              22 LOAD_CONST               1 (': ')
              24 CALL_METHOD              1
              26 CALL_FUNCTION            1
              28 YIELD_VALUE
              30 POP_TOP
              32 JUMP_ABSOLUTE            2
         >>   34 LOAD_CONST               2 (None)
              36 RETURN_VALUE
Disassembly of <code object main at 0x000001857DB93D40, file "<dis>", line 1285>:
1290           0 LOAD_GLOBAL              0 (argparse)
               2 LOAD_METHOD              1 (ArgumentParser)
               4 CALL_METHOD              0
               6 STORE_FAST               0 (parser)
1291           8 LOAD_FAST                0 (parser)
              10 LOAD_ATTR                2 (add_argument)
1292          12 LOAD_CONST               1 ('--workspace')
1293          14 LOAD_GLOBAL              3 (str)
1294          16 LOAD_GLOBAL              4 (os)
              18 LOAD_ATTR                5 (path)
              20 LOAD_METHOD              6 (abspath)
              22 LOAD_GLOBAL              4 (os)
              24 LOAD_ATTR                5 (path)
              26 LOAD_METHOD              7 (dirname)
              28 LOAD_GLOBAL              8 (__file__)
              30 CALL_METHOD              1
              32 CALL_METHOD              1
1295          34 LOAD_CONST               2 ('The absolute path to your active Bazel workspace.')
1291          36 LOAD_CONST               3 (('type', 'default', 'help'))
              38 CALL_FUNCTION_KW         4
              40 POP_TOP
1296          42 LOAD_FAST                0 (parser)
              44 LOAD_METHOD              9 (parse_args)
              46 CALL_METHOD              0
              48 STORE_FAST               1 (args)
1298          50 LOAD_FAST                1 (args)
              52 LOAD_ATTR               10 (workspace)
              54 STORE_GLOBAL            11 (_TF_WORKSPACE_ROOT)
1299          56 LOAD_GLOBAL              4 (os)
              58 LOAD_ATTR                5 (path)
              60 LOAD_METHOD             12 (join)
              62 LOAD_GLOBAL             11 (_TF_WORKSPACE_ROOT)
              64 LOAD_GLOBAL             13 (_TF_BAZELRC_FILENAME)
              66 CALL_METHOD              2
              68 STORE_GLOBAL            14 (_TF_BAZELRC)
1303          70 LOAD_GLOBAL             15 (dict)
              72 LOAD_GLOBAL              4 (os)
              74 LOAD_ATTR               16 (environ)
              76 CALL_FUNCTION            1
              78 STORE_FAST               2 (environ_cp)
1305          80 SETUP_FINALLY           14 (to 96)
1306          82 LOAD_GLOBAL             17 (check_bazel_version)
              84 LOAD_GLOBAL             18 (_TF_MIN_BAZEL_VERSION)
1307          86 LOAD_GLOBAL             19 (_TF_MAX_BAZEL_VERSION)
1306          88 CALL_FUNCTION            2
              90 STORE_FAST               3 (current_bazel_version)
              92 POP_BLOCK
              94 JUMP_FORWARD            62 (to 158)
1308     >>   96 DUP_TOP
              98 LOAD_GLOBAL             20 (subprocess)
             100 LOAD_ATTR               21 (CalledProcessError)
             102 COMPARE_OP              10 (exception match)
             104 POP_JUMP_IF_FALSE      156
             106 POP_TOP
             108 STORE_FAST               4 (e)
             110 POP_TOP
             112 SETUP_FINALLY           30 (to 144)
1309         114 LOAD_GLOBAL             22 (print)
             116 LOAD_CONST               4 ('Error checking bazel version: ')
             118 LOAD_FAST                4 (e)
             120 LOAD_ATTR               23 (output)
             122 LOAD_METHOD             24 (decode)
             124 LOAD_CONST               5 ('UTF-8')
             126 CALL_METHOD              1
             128 LOAD_METHOD             25 (strip)
             130 CALL_METHOD              0
             132 CALL_FUNCTION            2
             134 POP_TOP
1310         136 LOAD_FAST                4 (e)
             138 RAISE_VARARGS            1
             140 POP_BLOCK
             142 BEGIN_FINALLY
         >>  144 LOAD_CONST               0 (None)
             146 STORE_FAST               4 (e)
             148 DELETE_FAST              4 (e)
             150 END_FINALLY
             152 POP_EXCEPT
             154 JUMP_FORWARD             2 (to 158)
         >>  156 END_FINALLY
1312     >>  158 LOAD_GLOBAL             26 (convert_version_to_int)
             160 LOAD_FAST                3 (current_bazel_version)
             162 CALL_FUNCTION            1
             164 STORE_GLOBAL            27 (_TF_CURRENT_BAZEL_VERSION)
1314         166 LOAD_GLOBAL             28 (reset_tf_configure_bazelrc)
             168 CALL_FUNCTION            0
             170 POP_TOP
1316         172 LOAD_GLOBAL             29 (cleanup_makefile)
             174 CALL_FUNCTION            0
             176 POP_TOP
1317         178 LOAD_GLOBAL             30 (setup_python)
             180 LOAD_FAST                2 (environ_cp)
             182 CALL_FUNCTION            1
             184 POP_TOP
1319         186 LOAD_GLOBAL             31 (is_windows)
             188 CALL_FUNCTION            0
             190 POP_JUMP_IF_FALSE      232
1320         192 LOAD_CONST               6 ('0')
             194 LOAD_FAST                2 (environ_cp)
             196 LOAD_CONST               7 ('TF_NEED_OPENCL')
             198 STORE_SUBSCR
1321         200 LOAD_CONST               6 ('0')
             202 LOAD_FAST                2 (environ_cp)
             204 LOAD_CONST               8 ('TF_CUDA_CLANG')
             206 STORE_SUBSCR
1322         208 LOAD_CONST               6 ('0')
             210 LOAD_FAST                2 (environ_cp)
             212 LOAD_CONST               9 ('TF_NEED_TENSORRT')
             214 STORE_SUBSCR
1325         216 LOAD_CONST               6 ('0')
             218 LOAD_FAST                2 (environ_cp)
             220 LOAD_CONST              10 ('TF_DOWNLOAD_CLANG')
             222 STORE_SUBSCR
1326         224 LOAD_CONST               6 ('0')
             226 LOAD_FAST                2 (environ_cp)
             228 LOAD_CONST              11 ('TF_NEED_MPI')
             230 STORE_SUBSCR
1328     >>  232 LOAD_GLOBAL             32 (is_macos)
             234 CALL_FUNCTION            0
             236 POP_JUMP_IF_FALSE      246
1329         238 LOAD_CONST               6 ('0')
             240 LOAD_FAST                2 (environ_cp)
             242 LOAD_CONST               9 ('TF_NEED_TENSORRT')
             244 STORE_SUBSCR
1331     >>  246 LOAD_FAST                2 (environ_cp)
             248 LOAD_METHOD             33 (get)
             250 LOAD_CONST              12 ('TF_ENABLE_XLA')
             252 LOAD_CONST               0 (None)
             254 CALL_METHOD              2
             256 STORE_FAST               5 (with_xla_support)
1332         258 LOAD_FAST                5 (with_xla_support)
             260 LOAD_CONST               0 (None)
             262 COMPARE_OP               9 (is not)
             264 EXTENDED_ARG             1
             266 POP_JUMP_IF_FALSE      294
1333         268 LOAD_GLOBAL             34 (write_to_bazelrc)
             270 LOAD_CONST              13 ('build --define=with_xla_support=%s')
1334         272 LOAD_GLOBAL             35 (int)
             274 LOAD_FAST                5 (with_xla_support)
             276 CALL_FUNCTION            1
             278 EXTENDED_ARG             1
             280 POP_JUMP_IF_FALSE      286
             282 LOAD_CONST              14 ('true')
             284 JUMP_FORWARD             2 (to 288)
         >>  286 LOAD_CONST              15 ('false')
1333     >>  288 BINARY_MODULO
             290 CALL_FUNCTION            1
             292 POP_TOP
1336     >>  294 LOAD_GLOBAL             36 (set_action_env_var)
1337         296 LOAD_FAST                2 (environ_cp)
             298 LOAD_CONST              16 ('TF_NEED_ROCM')
             300 LOAD_CONST              17 ('ROCm')
             302 LOAD_CONST              18 (False)
             304 LOAD_CONST              19 ('rocm')
1336         306 LOAD_CONST              20 (('bazel_config_name',))
             308 CALL_FUNCTION_KW         5
             310 POP_TOP
1338         312 LOAD_FAST                2 (environ_cp)
             314 LOAD_METHOD             33 (get)
             316 LOAD_CONST              16 ('TF_NEED_ROCM')
             318 CALL_METHOD              1
             320 LOAD_CONST              21 ('1')
             322 COMPARE_OP               2 (==)
             324 EXTENDED_ARG             1
             326 POP_JUMP_IF_FALSE      370
1339         328 LOAD_CONST              22 ('LD_LIBRARY_PATH')
             330 LOAD_FAST                2 (environ_cp)
             332 COMPARE_OP               6 (in)
1338         334 EXTENDED_ARG             1
             336 POP_JUMP_IF_FALSE      370
1340         338 LOAD_FAST                2 (environ_cp)
             340 LOAD_METHOD             33 (get)
             342 LOAD_CONST              22 ('LD_LIBRARY_PATH')
             344 CALL_METHOD              1
             346 LOAD_CONST              21 ('1')
             348 COMPARE_OP               3 (!=)
1338         350 EXTENDED_ARG             1
             352 POP_JUMP_IF_FALSE      370
1341         354 LOAD_GLOBAL             37 (write_action_env_to_bazelrc)
             356 LOAD_CONST              22 ('LD_LIBRARY_PATH')
1342         358 LOAD_FAST                2 (environ_cp)
             360 LOAD_METHOD             33 (get)
             362 LOAD_CONST              22 ('LD_LIBRARY_PATH')
             364 CALL_METHOD              1
1341         366 CALL_FUNCTION            2
             368 POP_TOP
1344     >>  370 LOAD_FAST                2 (environ_cp)
             372 LOAD_METHOD             33 (get)
             374 LOAD_CONST              16 ('TF_NEED_ROCM')
             376 CALL_METHOD              1
             378 LOAD_CONST              21 ('1')
             380 COMPARE_OP               2 (==)
             382 EXTENDED_ARG             1
             384 POP_JUMP_IF_FALSE      434
             386 LOAD_FAST                2 (environ_cp)
             388 LOAD_METHOD             33 (get)
             390 LOAD_CONST              23 ('ROCM_PATH')
             392 CALL_METHOD              1
             394 EXTENDED_ARG             1
             396 POP_JUMP_IF_FALSE      434
1345         398 LOAD_GLOBAL             37 (write_action_env_to_bazelrc)
             400 LOAD_CONST              23 ('ROCM_PATH')
             402 LOAD_FAST                2 (environ_cp)
             404 LOAD_METHOD             33 (get)
             406 LOAD_CONST              23 ('ROCM_PATH')
             408 CALL_METHOD              1
             410 CALL_FUNCTION            2
             412 POP_TOP
1346         414 LOAD_GLOBAL             37 (write_action_env_to_bazelrc)
             416 LOAD_CONST              24 ('ROCBLAS_TENSILE_LIBPATH')
1347         418 LOAD_FAST                2 (environ_cp)
             420 LOAD_METHOD             33 (get)
             422 LOAD_CONST              23 ('ROCM_PATH')
             424 CALL_METHOD              1
             426 LOAD_CONST              25 ('/src/library')
             428 BINARY_ADD
1346         430 CALL_FUNCTION            2
             432 POP_TOP
1349     >>  434 LOAD_GLOBAL              3 (str)
1350         436 LOAD_GLOBAL             35 (int)
             438 LOAD_GLOBAL             38 (get_var)
             440 LOAD_FAST                2 (environ_cp)
             442 LOAD_CONST              26 ('TF_NEED_CUDA')
             444 LOAD_CONST              27 ('CUDA')
             446 LOAD_CONST              18 (False)
             448 CALL_FUNCTION            4
             450 CALL_FUNCTION            1
1349         452 CALL_FUNCTION            1
             454 LOAD_FAST                2 (environ_cp)
             456 LOAD_CONST              26 ('TF_NEED_CUDA')
             458 STORE_SUBSCR
1351         460 LOAD_FAST                2 (environ_cp)
             462 LOAD_METHOD             33 (get)
             464 LOAD_CONST              26 ('TF_NEED_CUDA')
             466 CALL_METHOD              1
             468 LOAD_CONST              21 ('1')
             470 COMPARE_OP               2 (==)
             472 EXTENDED_ARG             3
             474 POP_JUMP_IF_FALSE      818
1352         476 LOAD_CONST              28 ('TF_CUDA_CONFIG_REPO')
             478 LOAD_FAST                2 (environ_cp)
             480 COMPARE_OP               7 (not in)
1351         482 EXTENDED_ARG             3
             484 POP_JUMP_IF_FALSE      818
1354         486 LOAD_GLOBAL             36 (set_action_env_var)
1355         488 LOAD_FAST                2 (environ_cp)
1356         490 LOAD_CONST               9 ('TF_NEED_TENSORRT')
1357         492 LOAD_CONST              29 ('TensorRT')
1358         494 LOAD_CONST              18 (False)
1359         496 LOAD_CONST              30 ('tensorrt')
1354         498 LOAD_CONST              20 (('bazel_config_name',))
             500 CALL_FUNCTION_KW         5
             502 POP_TOP
1361         504 LOAD_GLOBAL             15 (dict)
             506 LOAD_FAST                2 (environ_cp)
             508 CALL_FUNCTION            1
             510 STORE_FAST               6 (environ_save)
1362         512 LOAD_GLOBAL             39 (range)
             514 LOAD_GLOBAL             40 (_DEFAULT_PROMPT_ASK_ATTEMPTS)
             516 CALL_FUNCTION            1
             518 GET_ITER
         >>  520 FOR_ITER               140 (to 662)
             522 STORE_FAST               7 (_)
1364         524 LOAD_GLOBAL             41 (validate_cuda_config)
             526 LOAD_FAST                2 (environ_cp)
             528 CALL_FUNCTION            1
             530 EXTENDED_ARG             2
             532 POP_JUMP_IF_FALSE      602
1366         534 LOAD_CONST              31 ('TF_CUDA_VERSION')
1367         536 LOAD_CONST              32 ('TF_CUBLAS_VERSION')
1368         538 LOAD_CONST              33 ('TF_CUDNN_VERSION')
1369         540 LOAD_CONST              34 ('TF_TENSORRT_VERSION')
1370         542 LOAD_CONST              35 ('TF_NCCL_VERSION')
1371         544 LOAD_CONST              36 ('TF_CUDA_PATHS')
1374         546 LOAD_CONST              37 ('CUDA_TOOLKIT_PATH')
1375         548 LOAD_CONST              38 ('CUDNN_INSTALL_PATH')
1376         550 LOAD_CONST              39 ('NCCL_INSTALL_PATH')
1377         552 LOAD_CONST              40 ('NCCL_HDR_PATH')
1378         554 LOAD_CONST              41 ('TENSORRT_INSTALL_PATH')
1365         556 BUILD_LIST              11
             558 STORE_FAST               8 (cuda_env_names)
1381         560 LOAD_FAST                8 (cuda_env_names)
             562 GET_ITER
         >>  564 FOR_ITER                30 (to 596)
             566 STORE_FAST               9 (name)
1382         568 LOAD_FAST                9 (name)
             570 LOAD_FAST                2 (environ_cp)
             572 COMPARE_OP               6 (in)
             574 EXTENDED_ARG             2
             576 POP_JUMP_IF_FALSE      564
1383         578 LOAD_GLOBAL             37 (write_action_env_to_bazelrc)
             580 LOAD_FAST                9 (name)
             582 LOAD_FAST                2 (environ_cp)
             584 LOAD_FAST                9 (name)
             586 BINARY_SUBSCR
             588 CALL_FUNCTION            2
             590 POP_TOP
             592 EXTENDED_ARG             2
             594 JUMP_ABSOLUTE          564
1384     >>  596 POP_TOP
             598 EXTENDED_ARG             2
             600 JUMP_ABSOLUTE          674
1387     >>  602 LOAD_GLOBAL             15 (dict)
             604 LOAD_FAST                6 (environ_save)
             606 CALL_FUNCTION            1
             608 STORE_FAST               2 (environ_cp)
1389         610 LOAD_GLOBAL             42 (set_tf_cuda_version)
             612 LOAD_FAST                2 (environ_cp)
             614 CALL_FUNCTION            1
             616 POP_TOP
1390         618 LOAD_GLOBAL             43 (set_tf_cudnn_version)
             620 LOAD_FAST                2 (environ_cp)
             622 CALL_FUNCTION            1
             624 POP_TOP
1391         626 LOAD_GLOBAL             44 (is_linux)
             628 CALL_FUNCTION            0
             630 EXTENDED_ARG             2
             632 POP_JUMP_IF_FALSE      650
1392         634 LOAD_GLOBAL             45 (set_tf_tensorrt_version)
             636 LOAD_FAST                2 (environ_cp)
             638 CALL_FUNCTION            1
             640 POP_TOP
1393         642 LOAD_GLOBAL             46 (set_tf_nccl_version)
             644 LOAD_FAST                2 (environ_cp)
             646 CALL_FUNCTION            1
             648 POP_TOP
1395     >>  650 LOAD_GLOBAL             47 (set_tf_cuda_paths)
             652 LOAD_FAST                2 (environ_cp)
             654 CALL_FUNCTION            1
             656 POP_TOP
             658 EXTENDED_ARG             2
             660 JUMP_ABSOLUTE          520
1398     >>  662 LOAD_GLOBAL             48 (UserInputError)
1399         664 LOAD_CONST              42 ('Invalid CUDA setting were provided %d times in a row. Assuming to be a scripting mistake.')
1401         666 LOAD_GLOBAL             40 (_DEFAULT_PROMPT_ASK_ATTEMPTS)
1399         668 BINARY_MODULO
1398         670 CALL_FUNCTION            1
             672 RAISE_VARARGS            1
1403     >>  674 LOAD_GLOBAL             49 (set_tf_cuda_compute_capabilities)
             676 LOAD_FAST                2 (environ_cp)
             678 CALL_FUNCTION            1
             680 POP_TOP
1404         682 LOAD_CONST              22 ('LD_LIBRARY_PATH')
             684 LOAD_FAST                2 (environ_cp)
             686 COMPARE_OP               6 (in)
             688 EXTENDED_ARG             2
             690 POP_JUMP_IF_FALSE      724
             692 LOAD_FAST                2 (environ_cp)
             694 LOAD_METHOD             33 (get)
1405         696 LOAD_CONST              22 ('LD_LIBRARY_PATH')
1404         698 CALL_METHOD              1
1405         700 LOAD_CONST              21 ('1')
1404         702 COMPARE_OP               3 (!=)
             704 EXTENDED_ARG             2
             706 POP_JUMP_IF_FALSE      724
1406         708 LOAD_GLOBAL             37 (write_action_env_to_bazelrc)
             710 LOAD_CONST              22 ('LD_LIBRARY_PATH')
1407         712 LOAD_FAST                2 (environ_cp)
             714 LOAD_METHOD             33 (get)
             716 LOAD_CONST              22 ('LD_LIBRARY_PATH')
             718 CALL_METHOD              1
1406         720 CALL_FUNCTION            2
             722 POP_TOP
1409     >>  724 LOAD_GLOBAL             50 (set_tf_cuda_clang)
             726 LOAD_FAST                2 (environ_cp)
             728 CALL_FUNCTION            1
             730 POP_TOP
1410         732 LOAD_FAST                2 (environ_cp)
             734 LOAD_METHOD             33 (get)
             736 LOAD_CONST               8 ('TF_CUDA_CLANG')
             738 CALL_METHOD              1
             740 LOAD_CONST              21 ('1')
             742 COMPARE_OP               2 (==)
             744 EXTENDED_ARG             3
             746 POP_JUMP_IF_FALSE      792
1412         748 LOAD_GLOBAL             51 (set_tf_download_clang)
             750 LOAD_FAST                2 (environ_cp)
             752 CALL_FUNCTION            1
             754 POP_TOP
1413         756 LOAD_FAST                2 (environ_cp)
             758 LOAD_METHOD             33 (get)
             760 LOAD_CONST              10 ('TF_DOWNLOAD_CLANG')
             762 CALL_METHOD              1
             764 LOAD_CONST              21 ('1')
             766 COMPARE_OP               3 (!=)
             768 EXTENDED_ARG             3
             770 POP_JUMP_IF_FALSE      782
1415         772 LOAD_GLOBAL             52 (set_clang_cuda_compiler_path)
             774 LOAD_FAST                2 (environ_cp)
             776 CALL_FUNCTION            1
             778 POP_TOP
             780 JUMP_FORWARD             8 (to 790)
1418     >>  782 LOAD_GLOBAL             34 (write_to_bazelrc)
             784 LOAD_CONST              43 ('build:cuda_clang --config=download_clang_use_lld')
             786 CALL_FUNCTION            1
             788 POP_TOP
         >>  790 JUMP_FORWARD            16 (to 808)
1422     >>  792 LOAD_GLOBAL             31 (is_windows)
             794 CALL_FUNCTION            0
             796 EXTENDED_ARG             3
             798 POP_JUMP_IF_TRUE       808
1423         800 LOAD_GLOBAL             53 (set_gcc_host_compiler_path)
             802 LOAD_FAST                2 (environ_cp)
             804 CALL_FUNCTION            1
             806 POP_TOP
1424     >>  808 LOAD_GLOBAL             54 (set_other_cuda_vars)
             810 LOAD_FAST                2 (environ_cp)
             812 CALL_FUNCTION            1
             814 POP_TOP
             816 JUMP_FORWARD             8 (to 826)
1428     >>  818 LOAD_GLOBAL             51 (set_tf_download_clang)
             820 LOAD_FAST                2 (environ_cp)
             822 CALL_FUNCTION            1
             824 POP_TOP
1432     >>  826 LOAD_CONST              44 (0)
             828 STORE_FAST              10 (gpu_platform_count)
1433         830 LOAD_FAST                2 (environ_cp)
             832 LOAD_METHOD             33 (get)
             834 LOAD_CONST              16 ('TF_NEED_ROCM')
             836 CALL_METHOD              1
             838 LOAD_CONST              21 ('1')
             840 COMPARE_OP               2 (==)
             842 EXTENDED_ARG             3
             844 POP_JUMP_IF_FALSE      854
1434         846 LOAD_FAST               10 (gpu_platform_count)
             848 LOAD_CONST              45 (1)
             850 INPLACE_ADD
             852 STORE_FAST              10 (gpu_platform_count)
1435     >>  854 LOAD_FAST                2 (environ_cp)
             856 LOAD_METHOD             33 (get)
             858 LOAD_CONST              26 ('TF_NEED_CUDA')
             860 CALL_METHOD              1
             862 LOAD_CONST              21 ('1')
             864 COMPARE_OP               2 (==)
             866 EXTENDED_ARG             3
             868 POP_JUMP_IF_FALSE      878
1436         870 LOAD_FAST               10 (gpu_platform_count)
             872 LOAD_CONST              45 (1)
             874 INPLACE_ADD
             876 STORE_FAST              10 (gpu_platform_count)
1437     >>  878 LOAD_FAST               10 (gpu_platform_count)
             880 LOAD_CONST              46 (2)
             882 COMPARE_OP               5 (>=)
             884 EXTENDED_ARG             3
             886 POP_JUMP_IF_FALSE      896
1438         888 LOAD_GLOBAL             48 (UserInputError)
             890 LOAD_CONST              47 ('CUDA / ROCm are mututally exclusive. At most 1 GPU platform can be configured.')
             892 CALL_FUNCTION            1
             894 RAISE_VARARGS            1
1441     >>  896 LOAD_GLOBAL             55 (set_cc_opt_flags)
             898 LOAD_FAST                2 (environ_cp)
             900 CALL_FUNCTION            1
             902 POP_TOP
1442         904 LOAD_GLOBAL             56 (set_system_libs_flag)
             906 LOAD_FAST                2 (environ_cp)
             908 CALL_FUNCTION            1
             910 POP_TOP
1443         912 LOAD_GLOBAL             31 (is_windows)
             914 CALL_FUNCTION            0
             916 EXTENDED_ARG             3
             918 POP_JUMP_IF_FALSE      928
1444         920 LOAD_GLOBAL             57 (set_windows_build_flags)
             922 LOAD_FAST                2 (environ_cp)
             924 CALL_FUNCTION            1
             926 POP_TOP
1446     >>  928 LOAD_GLOBAL             38 (get_var)
             930 LOAD_FAST                2 (environ_cp)
             932 LOAD_CONST              48 ('TF_SET_ANDROID_WORKSPACE')
             934 LOAD_CONST              49 ('android workspace')
             936 LOAD_CONST              18 (False)
1447         938 LOAD_CONST              50 ('Would you like to interactively configure ./WORKSPACE for Android builds?')
1448         940 LOAD_CONST              51 ('Searching for NDK and SDK installations.')
1449         942 LOAD_CONST              52 ('Not configuring the WORKSPACE for Android builds.')
1446         944 CALL_FUNCTION            7
             946 EXTENDED_ARG             3
             948 POP_JUMP_IF_FALSE      966
1450         950 LOAD_GLOBAL             58 (create_android_ndk_rule)
             952 LOAD_FAST                2 (environ_cp)
             954 CALL_FUNCTION            1
             956 POP_TOP
1451         958 LOAD_GLOBAL             59 (create_android_sdk_rule)
             960 LOAD_FAST                2 (environ_cp)
             962 CALL_FUNCTION            1
             964 POP_TOP
1453     >>  966 LOAD_GLOBAL             60 (system_specific_test_config)
             968 LOAD_FAST                2 (environ_cp)
             970 CALL_FUNCTION            1
             972 POP_TOP
1455         974 LOAD_GLOBAL             61 (configure_ios)
             976 LOAD_FAST                2 (environ_cp)
             978 CALL_FUNCTION            1
             980 POP_TOP
1457         982 LOAD_GLOBAL             22 (print)
             984 LOAD_CONST              53 ('Preconfigured Bazel build configs. You can use any of the below by adding "--config=<>" to your build command. See .bazelrc for more details.')
             986 CALL_FUNCTION            1
             988 POP_TOP
1460         990 LOAD_GLOBAL             62 (config_info_line)
             992 LOAD_CONST              54 ('mkl')
             994 LOAD_CONST              55 ('Build with MKL support.')
             996 CALL_FUNCTION            2
             998 POP_TOP
1461        1000 LOAD_GLOBAL             62 (config_info_line)
1462        1002 LOAD_CONST              56 ('mkl_aarch64')
1463        1004 LOAD_CONST              57 ('Build with oneDNN and Compute Library for the Arm Architecture (ACL).')
1461        1006 CALL_FUNCTION            2
            1008 POP_TOP
1464        1010 LOAD_GLOBAL             62 (config_info_line)
            1012 LOAD_CONST              58 ('monolithic')
            1014 LOAD_CONST              59 ('Config for mostly static monolithic build.')
            1016 CALL_FUNCTION            2
            1018 POP_TOP
1465        1020 LOAD_GLOBAL             62 (config_info_line)
            1022 LOAD_CONST              60 ('numa')
            1024 LOAD_CONST              61 ('Build with NUMA support.')
            1026 CALL_FUNCTION            2
            1028 POP_TOP
1466        1030 LOAD_GLOBAL             62 (config_info_line)
1467        1032 LOAD_CONST              62 ('dynamic_kernels')
1468        1034 LOAD_CONST              63 ('(Experimental) Build kernels into separate shared objects.')
1466        1036 CALL_FUNCTION            2
            1038 POP_TOP
1469        1040 LOAD_GLOBAL             62 (config_info_line)
            1042 LOAD_CONST              64 ('v1')
            1044 LOAD_CONST              65 ('Build with TensorFlow 1 API instead of TF 2 API.')
            1046 CALL_FUNCTION            2
            1048 POP_TOP
1471        1050 LOAD_GLOBAL             22 (print)
            1052 LOAD_CONST              66 ('Preconfigured Bazel build configs to DISABLE default on features:')
            1054 CALL_FUNCTION            1
            1056 POP_TOP
1472        1058 LOAD_GLOBAL             62 (config_info_line)
            1060 LOAD_CONST              67 ('nogcp')
            1062 LOAD_CONST              68 ('Disable GCP support.')
            1064 CALL_FUNCTION            2
            1066 POP_TOP
1473        1068 LOAD_GLOBAL             62 (config_info_line)
            1070 LOAD_CONST              69 ('nonccl')
            1072 LOAD_CONST              70 ('Disable NVIDIA NCCL support.')
            1074 CALL_FUNCTION            2
            1076 POP_TOP
            1078 LOAD_CONST               0 (None)
            1080 RETURN_VALUE
